{"version":3,"file":"445.bundle.js","mappings":"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","sources":["webpack://blacksilverufa/./src/js/utils/saved-position.js","webpack://blacksilverufa/./src/js/utils/persist.js","webpack://blacksilverufa/./src/js/components/chat/types.js","webpack://blacksilverufa/./src/js/components/chat/message.js","webpack://blacksilverufa/./src/js/components/chat/subtitles-loader.js","webpack://blacksilverufa/./src/js/components/scroll.js","webpack://blacksilverufa/./src/js/components/chat/settings.js","webpack://blacksilverufa/./src/js/hooks/use-plyr-time.js","webpack://blacksilverufa/./src/js/components/chat/chat.js","webpack://blacksilverufa/./src/js/components/player/player.js","webpack://blacksilverufa/./src/js/components/player/timecodes.js","webpack://blacksilverufa/./src/js/data-types.js","webpack://blacksilverufa/./src/js/components/player/playlist.js","webpack://blacksilverufa/./src/js/components/utils/reparentable.js","webpack://blacksilverufa/./src/js/utils/update-state.js","webpack://blacksilverufa/./src/js/components/player/share-overlay.js","webpack://blacksilverufa/./src/js/utils/prerender.js","webpack://blacksilverufa/./src/js/components/segment-player.js","webpack://blacksilverufa/./src/js/hooks/use-complex-state.js"],"sourcesContent":["import last from 'lodash/last';\nimport zip from 'lodash/zip';\n\nfunction upsert(db, keys, obj) {\n  const filter = Object.assign({}, ...keys.map((k) => ({ [k]: obj[k] })));\n  const x = db.findOne(filter);\n\n  if (!x) {\n    db.insert(obj);\n  } else {\n    db.update({ ...x, ...obj });\n  }\n}\n\nexport default class SavedPosition {\n  constructor(persist, segment) {\n    this.db = persist.getCollection('resume_playback');\n    this.streams = segment.streams;\n    this.offsets = segment.offsets || [segment.abs_start];\n  }\n\n  find(t) {\n    const [match] = zip(this.streams, this.offsets)\n      .filter(([s, o]) => t >= o);\n    return match;\n  }\n\n  set(t, { end } = { end: false }) {\n    t = Math.round(t);\n\n    const match = this.find(t);\n    if (!match) return;\n\n    const [stream, offset] = match;\n    upsert(this.db, ['id'], {\n      id: stream,\n      ts: t - offset,\n      full: end,\n    });\n  }\n\n  get() {\n    return last(\n      this.streams\n        .map((id, i) => this.db.findOne({ id })?.ts + this.offsets[i])\n        .filter((x) => !Number.isNaN(x)),\n    );\n  }\n\n  exists() {\n    return !!this.db.findOne({ id: { $in: this.streams } });\n  }\n}\n","import merge from 'lodash/merge';\nimport shallowequal from 'shallowequal';\n\nexport default class Persist {\n  static save(name, state, nextState, keys) {\n    const nextData = {};\n    const data = {};\n\n    keys.forEach((key) => {\n      nextData[key] = nextState[key];\n      data[key] = state[key];\n    });\n\n    if (shallowequal(nextData, data)) {\n      return;\n    }\n\n    localStorage.setItem(`state-${name}`, JSON.stringify(nextData));\n  }\n\n  static load(name, defaultValue = {}) {\n    return merge(\n      {},\n      defaultValue,\n      JSON.parse(localStorage.getItem(`state-${name}`)) || {},\n    );\n  }\n}\n","import PropTypes from 'prop-types';\n\nexport const TypeMessage = PropTypes.shape({\n  $loki: PropTypes.number, // unique id\n  time: PropTypes.number,\n  user: PropTypes.string,\n  text: PropTypes.string,\n  color: PropTypes.string,\n  hidden: PropTypes.bool,\n});\n\nexport const TypeEmotes = PropTypes.shape({\n  pattern: PropTypes.object,\n  data: PropTypes.objectOf(PropTypes.shape({\n    id: PropTypes.string,\n    src: PropTypes.string,\n  })),\n});\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport repeat from 'lodash/repeat';\nimport { ListGroupItem } from 'react-bootstrap';\nimport { TypeMessage, TypeEmotes } from './types';\n\nconst PACKED_WORDS = /([^ ]+) x⁣([0-9]+)/g;\n\nconst unpackMessage = (text) => (\n  text.replace(PACKED_WORDS, (a, b, c) => repeat(`${b} `, c).trimEnd())\n);\n\nexport const ChatMessage = ({ message, emotes, unpackMessages, showHidden, showEmotes }) => {\n  if (message.hidden && !showHidden) return null;\n\n  const body = useMemo(() => {\n    let res = message.text;\n\n    if (unpackMessages) {\n      res = unpackMessage(res);\n    }\n\n    if (showEmotes && emotes) {\n      res = res.split(/\\s+/).map((word, i) => {\n        if (word.match(emotes.pattern)) {\n          word = (\n            <img\n              // eslint-disable-next-line react/no-array-index-key\n              key={i}\n              src={emotes.data[word].src}\n              alt={word}\n              className=\"emote\"\n            />\n          );\n        }\n\n        return [i > 0 && ' ', word];\n      });\n    }\n\n    return res;\n  }, [message.text, unpackMessages, emotes, showEmotes]);\n\n  return (\n    <ListGroupItem>\n      <span\n        style={{ color: message.color }}\n        className=\"username\"\n      >\n        {message.user}\n      </span>\n      {': '}\n      {body}\n    </ListGroupItem>\n  );\n};\n\nChatMessage.propTypes = {\n  message: TypeMessage.isRequired,\n  emotes: TypeEmotes,\n  unpackMessages: PropTypes.bool.isRequired,\n  showHidden: PropTypes.bool.isRequired,\n  showEmotes: PropTypes.bool.isRequired,\n};\n\nChatMessage.defaultProps = {\n  emotes: null,\n};\n","import * as Loki from 'lokijs';\nimport { ptime } from '../../utils/time-utils';\n\nconst LINE_BREAK = /\\\\N/g;\n\nexport const loadSubtitles = async (url) => {\n  const db = new Loki('chat');\n  const data = db.addCollection('messages', { indices: ['time'] });\n\n  const lines = await fetch(url)\n    .then((res) => res.text())\n    .then((res) => res.split('\\n'));\n\n  let firstLine = true;\n\n  for (let line of lines) {\n    if (firstLine) {\n      if (!line.startsWith('[Script Info]')) {\n        throw new Error('Файл повреждён или недоступен');\n      }\n\n      firstLine = false;\n    }\n\n    const hidden = line.startsWith('; ');\n\n    if (hidden) {\n      line = line.substring(2);\n    }\n\n    if (line.startsWith('Dialogue: ')) {\n      const parts = line.substring(10).split(', ');\n\n      const [userStr, ...msgParts] = parts.slice(3).join(', ').split(': ');\n      const text = msgParts.join(': ').replace(LINE_BREAK, '');\n      const time = ptime(parts[1]);\n\n      let user = userStr;\n      let color = 'inherit';\n\n      if (userStr.startsWith('{\\\\c&H')) {\n        user = userStr.substring(13, 13 + userStr.length - 13 * 2);\n\n        // BGR to RGB\n        color = userStr.substring(9, 11) + userStr.substring(7, 9) + userStr.substring(5, 7);\n        color = `#${color}`;\n\n        if (color === '#FFFFFF') {\n          color = 'inherit';\n        }\n      }\n\n      data.insert({ time, user, text, color, hidden });\n    }\n  }\n\n  return data;\n};\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport CustomScroll from 'react-custom-scroll';\nimport Measure from 'react-measure';\n\nexport const Scroll = ({\n  children,\n  className,\n  keepAtBottom,\n  scrollTo,\n  scrollDelay,\n  contentKey,\n}) => {\n  const scrollRef = useRef();\n  const [manualScroll, setManualScroll] = useState(!keepAtBottom);\n  const [outerHeight, setOuterHeight] = useState(0);\n\n  const scrollToSelector = (selector) => {\n    const { current: scroll } = scrollRef;\n    const node = scroll?.innerContainerRef.current?.querySelector(selector);\n\n    if (node) {\n      if (scrollDelay) {\n        setTimeout(() => (\n          scroll.updateScrollPosition(node.offsetTop)\n        ), scrollDelay);\n      } else {\n        scroll.updateScrollPosition(node.offsetTop);\n      }\n    }\n  };\n\n  const onResize = useCallback(() => {\n    scrollRef.current?.forceUpdate();\n  });\n\n  const onOuterResize = useCallback(({ entry }) => {\n    setOuterHeight(entry?.height || 0);\n    onResize();\n  });\n\n  const onScroll = useCallback(({ target: { scrollTop, scrollTopMax } }) => {\n    setManualScroll(scrollTop < scrollTopMax * 0.9);\n  });\n\n  useEffect(() => {\n    if (keepAtBottom && !manualScroll) {\n      scrollToSelector('.bottom');\n    }\n  }, [keepAtBottom, manualScroll, outerHeight, contentKey]);\n\n  useEffect(() => {\n    if (scrollTo) {\n      scrollToSelector(scrollTo);\n    }\n  }, [scrollTo, contentKey]);\n\n  return (\n    <Measure onResize={onOuterResize}>\n      {({ measureRef: outerMeasureRef }) => (\n        <div\n          ref={outerMeasureRef}\n          className={className}\n          style={{ display: 'flex', flexDirection: 'column' }}\n        >\n          <CustomScroll\n            ref={scrollRef}\n            onScroll={onScroll}\n            flex=\"1 1 0\"\n          >\n            <Measure onResize={onResize}>\n              {({ measureRef }) => (\n                <div ref={measureRef}>\n                  {children}\n                  <div className=\"bottom\" />\n                </div>\n              )}\n            </Measure>\n          </CustomScroll>\n        </div>\n      )}\n    </Measure>\n  );\n};\n\nScroll.propTypes = {\n  className: PropTypes.string,\n  keepAtBottom: PropTypes.bool,\n  scrollTo: PropTypes.string,\n  scrollDelay: PropTypes.number,\n  contentKey: PropTypes.any,\n};\n\nScroll.defaultProps = {\n  className: null,\n  keepAtBottom: false,\n  scrollTo: null,\n  scrollDelay: 0,\n  contentKey: null,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, OverlayTrigger, Spinner, Tooltip } from 'react-bootstrap';\nimport { faDownload, faFileArchive, faRobot, faSmile } from '@fortawesome/free-solid-svg-icons';\nimport { TypeEmotes } from './types';\nimport { FAIcon } from '../../utils/fontawesome';\n\nexport const ChatSettings = ({\n  showHidden,\n  emotes,\n  showEmotes,\n  unpackMessages,\n  subtitles,\n  onChange,\n}) => (\n  <div className=\"sidebar-row border-top d-flex\">\n    <OverlayTrigger\n      placement=\"top\"\n      overlay={(props) => (\n        <Tooltip {...props}>\n          Показывать ответы ботов, команды и голоса на играх с интеграцией\n          чата ({showHidden ? 'включено' : 'выключено'})\n        </Tooltip>\n      )}\n    >\n      <Button\n        variant=\"dark\"\n        size=\"sm\"\n        onClick={() => onChange({ showHidden: !showHidden })}\n      >\n        <FAIcon icon={faRobot} />\n        <div className={`led ${showHidden ? 'bg-success' : 'bg-danger'}`} />\n      </Button>\n    </OverlayTrigger>\n\n    <OverlayTrigger\n      placement=\"top\"\n      overlay={(props) => (\n        <Tooltip {...props}>\n          Показывать смайлики Twitch, BetterTTV и\n          FrankerFaceZ ({showEmotes ? 'включено' : 'выключено'})\n        </Tooltip>\n      )}\n    >\n      <Button\n        className=\"ms-1\"\n        variant=\"dark\"\n        size=\"sm\"\n        onClick={() => onChange({ showEmotes: !showEmotes })}\n      >\n        {showEmotes && !emotes ? (\n          <Spinner animation=\"border\" size=\"sm\" />\n        ) : (\n          <FAIcon icon={faSmile} />\n        )}\n        <div className={`led ${showEmotes ? 'bg-success' : 'bg-danger'}`} />\n      </Button>\n    </OverlayTrigger>\n\n    <OverlayTrigger\n      placement=\"top\"\n      overlay={(props) => (\n        <Tooltip {...props}>\n          Распаковывать сообщения вида &quot;Kappa x3&quot; в\n          &quot;Kappa Kappa Kappa&quot; ({unpackMessages ? 'включено' : 'выключено'})\n        </Tooltip>\n      )}\n    >\n      <Button\n        className=\"ms-1\"\n        variant=\"dark\"\n        size=\"sm\"\n        onClick={() => onChange({ unpackMessages: !unpackMessages })}\n      >\n        <FAIcon icon={faFileArchive} />\n        <div className={`led ${unpackMessages ? 'bg-success' : 'bg-danger'}`} />\n      </Button>\n    </OverlayTrigger>\n\n    <div className=\"flex-grow-1\" />\n\n    <OverlayTrigger\n      placement=\"top\"\n      overlay={(props) => (\n        <Tooltip {...props}>\n          Скачать чат в виде субтитров\n        </Tooltip>\n      )}\n    >\n      <Button\n        href={subtitles}\n        className=\"ms-1\"\n        variant=\"dark\"\n        size=\"sm\"\n      >\n        <FAIcon icon={faDownload} />\n      </Button>\n    </OverlayTrigger>\n  </div>\n);\n\nChatSettings.propTypes = {\n  showHidden: PropTypes.bool.isRequired,\n  emotes: TypeEmotes,\n  showEmotes: PropTypes.bool.isRequired,\n  unpackMessages: PropTypes.bool.isRequired,\n  subtitles: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nChatSettings.defaultProps = {\n  emotes: null,\n};\n","import { useEffect, useRef, useState } from 'react';\n\nexport const usePlyrTime = (plyr, hash = (t) => t) => {\n  const getTime = () => plyr?.currentTime || 0;\n  const timeRef = useRef(getTime());\n  const [currentTime, setTime] = useState(timeRef.current);\n\n  useEffect(() => {\n    const callback = () => {\n      const newTime = getTime();\n      if (hash(timeRef.current) !== hash(newTime)) {\n        timeRef.current = newTime;\n        setTime(newTime);\n      }\n    };\n\n    plyr?.on('timeupdate', callback);\n\n    return () => {\n      plyr?.off('timeupdate', callback);\n    };\n  }, [plyr]);\n\n  return currentTime;\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport last from 'lodash/last';\nimport { Button, ListGroup, Spinner } from 'react-bootstrap';\nimport { ChatMessage } from './message';\nimport { loadSubtitles } from './subtitles-loader';\nimport { Scroll } from '../scroll';\nimport Persist from '../../utils/persist';\nimport { ChatSettings } from './settings';\nimport { useComplexState } from '../../hooks/use-complex-state';\nimport { usePlyrTime } from '../../hooks/use-plyr-time';\n\nexport const Chat = ({ subtitles, plyr, offset, simple }) => {\n  const [error, setError] = useState();\n  const [data, setData] = useState();\n  const [emotes, setEmotes] = useState();\n  const [settings, updateSettings] = useComplexState(\n    Persist.load('Chat', {\n      showHidden: false,\n      showEmotes: true,\n      unpackMessages: true,\n    }),\n  );\n\n  // Skip time updates if there are no new messages available\n  const borders = useRef([null, null]);\n  const currentTime = usePlyrTime(plyr, (t) => {\n    const { current: [left, right] } = borders;\n\n    return left != null && right != null && t >= left && t < right\n      ? true\n      : Math.floor(t);\n  });\n\n  useEffect(() => {\n    Persist.save('Chat', {}, settings, Object.keys(settings));\n  }, [settings]);\n\n  useEffect(() => {\n    if (error) return null;\n\n    loadSubtitles(subtitles)\n      .then((res) => setData(res))\n      .catch((e) => setError(e.message));\n\n    return () => data && data.clear();\n  }, [subtitles, error]);\n\n  useEffect(() => {\n    if (emotes || !settings.showEmotes) return;\n\n    fetch('/data/emotes.json')\n      .then((res) => res.json())\n      .then((res) => {\n        const pattern = new RegExp(`^(${Object.keys(res).join('|')})$`);\n        setEmotes({ data: res, pattern });\n      })\n      .catch(() => setEmotes(null));\n  }, [settings.showEmotes]);\n\n  if (error) {\n    return !simple && (\n      <div className=\"flex-1-0-0 d-flex flex-column justify-content-center align-items-center\">\n        <span>Ошибка: {error}</span>\n        <Button\n          variant=\"primary\"\n          className=\"mt-2\"\n          onClick={() => setError(null)}\n        >\n          Попробовать снова\n        </Button>\n      </div>\n    );\n  }\n\n  if (!data) {\n    return !simple && (\n      <div className=\"flex-1-0-0 d-flex flex-column justify-content-center align-items-center\">\n        <Spinner animation=\"border\" role=\"status\" />\n        <span className=\"mt-2\">Загрузка сообщений...</span>\n      </div>\n    );\n  }\n\n  const query = {};\n\n  if (!settings.showHidden) {\n    query.hidden = { $eq: false };\n  }\n\n  const messages = data.chain()\n    .find({\n      ...query,\n      time: { $lte: currentTime - offset },\n    })\n    .offset(-50)\n    .simplesort('$loki')\n    .data();\n\n  const lastMsg = last(messages);\n\n  borders.current[0] = lastMsg ? lastMsg.time + offset : 0;\n\n  const nextMsg = data.chain().find({\n    ...query,\n    $loki: { $gt: lastMsg?.$loki || 0 },\n    time: { $gt: lastMsg?.time || 0 },\n  }).limit(1).data()[0];\n\n  borders.current[1] = nextMsg ? nextMsg.time + offset : null;\n\n  return (\n    <>\n      <Scroll className=\"flex-1-0-0\" keepAtBottom contentKey={lastMsg?.time}>\n        <ListGroup className=\"chat-messages-list\">\n          {messages.map((msg) => (\n            <ChatMessage\n              key={msg.$loki}\n              message={msg}\n              emotes={emotes}\n              {...settings}\n            />\n          ))}\n        </ListGroup>\n      </Scroll>\n\n      {!simple && (\n        <ChatSettings\n          onChange={updateSettings}\n          emotes={emotes}\n          subtitles={subtitles}\n          {...settings}\n        />\n      )}\n    </>\n  );\n};\n\nChat.propTypes = {\n  subtitles: PropTypes.string.isRequired,\n  plyr: PropTypes.object,\n  offset: PropTypes.number,\n  simple: PropTypes.bool,\n};\n\nChat.defaultProps = {\n  offset: 0,\n  simple: false,\n  plyr: null,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport Plyr from 'plyr';\nimport Measure from 'react-measure';\nimport { faComments } from '@fortawesome/free-solid-svg-icons';\nimport Persist from '../../utils/persist';\nimport 'plyr/src/sass/plyr.scss';\nimport { FAIcon } from '../../utils/fontawesome';\n\nexport default class Player extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ...Persist.load('Player', {\n        chatOverlay: true,\n      }),\n    };\n\n    this.ref = React.createRef();\n    this.overlay = document.createElement('div');\n    this.overlay.className = 'plyr-overlay';\n\n    this.onReady = this.onReady.bind(this);\n    this.onTimeUpdate = this.onTimeUpdate.bind(this);\n    this.onVideoEnded = this.onVideoEnded.bind(this);\n    this.onFullScreenEnter = this.onFullScreenEnter.bind(this);\n    this.onFullScreenExit = this.onFullScreenExit.bind(this);\n\n    this.firstTimeUpdate = true;\n    this.firstReady = true;\n  }\n\n  plyrOptions() {\n    return {\n      // Disable quality selection (doesn't work on YouTube)\n      settings: ['captions', /* 'quality', */ 'speed', 'loop'],\n      invertTime: false,\n      seekTime: 5, // same as YouTube\n      youtube: {\n        controls: 1,\n        fs: false,\n        disablekb: 0,\n      },\n      keyboard: { global: true },\n    };\n  }\n\n  plyrSource() {\n    const { youtube, direct } = this.props;\n    const source = { type: 'video' };\n\n    if (youtube) {\n      source.sources = [{\n        provider: 'youtube',\n        src: youtube,\n      }];\n    } else {\n      source.sources = [{\n        type: 'video/mp4',\n        src: direct,\n      }];\n    }\n\n    return source;\n  }\n\n  addControlButton({\n    before = 'button[data-plyr=\"fullscreen\"]',\n    icon = faComments,\n    value = true,\n    onToggle = (state) => state,\n  }) {\n    const { controls } = this.plyr.elements;\n\n    const button = document.createElement('button');\n    [\n      'plyr__controls__item',\n      'plyr__control',\n      'plyr__control__custom',\n    ].forEach((i) => button.classList.add(i));\n\n    const node = document.createElement('span');\n    button.appendChild(node);\n    ReactDOM.render(<FAIcon icon={icon} />, node); // this works? nice\n\n    if (value) {\n      button.pressed = true;\n      button.classList.add('plyr__control--pressed');\n    } else {\n      button.pressed = false;\n    }\n\n    button.onclick = () => {\n      if (button.pressed) {\n        button.pressed = false;\n        button.classList.remove('plyr__control--pressed');\n      } else {\n        button.pressed = true;\n        button.classList.add('plyr__control--pressed');\n      }\n\n      onToggle(button.pressed);\n    };\n\n    const nextNode = controls.querySelector(before);\n    controls.insertBefore(button, nextNode);\n  }\n\n  onReady() {\n    const { onReady, autostart } = this.props;\n    const { chatOverlay } = this.state;\n    const { firstReady = true } = this;\n\n    if (firstReady) {\n      this.firstReady = false;\n\n      this.addControlButton({\n        before: '.plyr__menu',\n        icon: faComments,\n        value: chatOverlay,\n        onToggle: (value) => {\n          this.setState({ chatOverlay: value });\n        },\n      });\n\n      onReady(this.plyr);\n\n      if (autostart) {\n        this.plyr.play()?.catch(() => null);\n      }\n    }\n  }\n\n  onTimeUpdate() {\n    const {\n      forceStart,\n      start,\n      autostart,\n      end,\n      savedPositionAdapter: spa,\n    } = this.props;\n\n    const {\n      plyr,\n      firstReady = true,\n      firstTimeUpdate = true,\n      lastSave = 0,\n    } = this;\n\n    const time = plyr.currentTime;\n\n    if (!firstReady && firstTimeUpdate) {\n      this.firstTimeUpdate = false;\n\n      if (time < 1) {\n        if (autostart) {\n          plyr.currentTime = autostart;\n        } else if (spa && spa.exists()) {\n          plyr.currentTime = Math.min(spa.get(), plyr.duration - 30);\n        } else if (time < start) {\n          plyr.currentTime = start;\n        }\n      }\n    }\n\n    if (forceStart && time < start) {\n      plyr.currentTime = start;\n    }\n\n    if (end && time >= end) {\n      plyr.currentTime = end;\n      plyr.pause();\n    }\n\n    if (Math.abs(time - lastSave) >= 5) {\n      this.lastSave = time;\n      spa.set(time);\n    }\n  }\n\n  onVideoEnded() {\n    const {\n      onVideoEnded,\n      savedPositionAdapter: spa,\n    } = this.props;\n\n    const { plyr } = this;\n    const time = plyr.currentTime;\n\n    if (spa) {\n      spa.set(time, { end: true });\n    }\n\n    onVideoEnded();\n  }\n\n  onFullScreenEnter() {\n    const { onFullScreen } = this.props;\n    onFullScreen(true);\n  }\n\n  onFullScreenExit() {\n    const { onFullScreen } = this.props;\n    onFullScreen(false);\n  }\n\n  spawnPlyr() {\n    const ref = this.ref.current;\n\n    const video = document.createElement('video');\n    ref.appendChild(video);\n\n    const plyr = new Plyr(video, this.plyrOptions());\n    this.plyr = plyr;\n\n    plyr.elements.container.appendChild(this.overlay);\n\n    plyr.source = this.plyrSource();\n    plyr.touch = false; // Force click and hover events on PCs with touchscreen\n\n    const { poster } = this.props;\n    plyr.poster = poster;\n\n    // YouTube ready\n    plyr.on('ready', (e) => {\n      const { direct } = this.props;\n      if (!direct) {\n        this.onReady(e);\n      }\n    });\n\n    // Direct ready\n    plyr.on('loadedmetadata', (e) => {\n      const { direct } = this.props;\n      if (direct) {\n        this.onReady(e);\n      }\n    });\n\n    plyr.on('timeupdate', this.onTimeUpdate);\n\n    // Fix instant pause by Plyr\n    plyr.on('statechange', (event) => {\n      if (event.detail.code === 1) plyr.play()?.catch(() => null);\n    });\n\n    plyr.on('playing', () => {\n      // Workaround for muted sound after seeking\n      if (!plyr.muted) {\n        plyr.muted = false;\n      }\n\n      // Workaround for volume desync\n      if (plyr.embed) {\n        plyr.volume = plyr.embed.getVolume() / 100;\n      }\n    });\n\n    plyr.on('ended', this.onVideoEnded);\n    plyr.on('enterfullscreen', this.onFullScreenEnter);\n    plyr.on('exitfullscreen', this.onFullScreenExit);\n  }\n\n  destroyPlyr() {\n    const { onDestroy } = this.props;\n    onDestroy();\n\n    this.plyr.destroy();\n\n    const ref = this.ref.current;\n    ref.removeChild(ref.querySelector('video'));\n  }\n\n  componentDidMount() {\n    this.spawnPlyr();\n  }\n\n  shouldComponentUpdate(prevProps, nextState) {\n    Persist.save('Player', this.state, nextState, [\n      'chatOverlay',\n    ]);\n\n    return true;\n  }\n\n  componentDidUpdate(prev) {\n    const { plyr, props: next } = this;\n\n    if (prev.youtube !== next.youtube\n        || prev.direct !== next.direct\n        || prev.poster !== next.poster) {\n      this.firstReady = true;\n      this.firstTimeUpdate = true;\n      plyr.source = this.plyrSource();\n      plyr.poster = next.poster;\n    }\n  }\n\n  componentWillUnmount() {\n    this.destroyPlyr();\n  }\n\n  render() {\n    const { renderOverlay } = this.props;\n    const { chatOverlay } = this.state;\n\n    return (\n      <>\n        {ReactDOM.createPortal(\n          <Measure>\n            {({ contentRect: { entry }, measureRef }) => (\n              <div className=\"plyr-overlay\" ref={measureRef}>\n                {chatOverlay && renderOverlay(entry)}\n              </div>\n            )}\n          </Measure>,\n          this.overlay,\n        )}\n        <div ref={this.ref} className=\"plyr-row\" />\n      </>\n    );\n  }\n}\n\nPlayer.propTypes = {\n  youtube: PropTypes.string,\n  direct: PropTypes.string,\n  poster: PropTypes.string,\n  start: PropTypes.number,\n  autostart: PropTypes.number,\n  end: PropTypes.number,\n  forceStart: PropTypes.bool,\n  savedPositionAdapter: PropTypes.object,\n  onReady: PropTypes.func,\n  onDestroy: PropTypes.func,\n  onFullScreen: PropTypes.func,\n  onVideoEnded: PropTypes.func,\n  renderOverlay: PropTypes.func,\n};\n\nPlayer.defaultProps = {\n  youtube: null,\n  direct: null,\n  poster: null,\n  start: 0,\n  autostart: null,\n  end: null,\n  forceStart: false,\n  savedPositionAdapter: null,\n  onReady: () => null,\n  onDestroy: () => null,\n  onFullScreen: () => null,\n  onVideoEnded: () => null,\n  renderOverlay: () => null,\n};\n","import React, { useCallback, useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Collapse, ListGroup, ListGroupItem } from 'react-bootstrap';\nimport { faChevronDown, faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport { ptime } from '../../utils/time-utils';\nimport { FAIcon } from '../../utils/fontawesome';\nimport { usePlyrTime } from '../../hooks/use-plyr-time';\n\nconst TimecodeLink = ({ value, plyr }) => {\n  const valueInt = useMemo(() => ptime(value), [value]);\n  const visited = usePlyrTime(plyr, (t) => t >= valueInt) >= valueInt;\n\n  const handleClick = useCallback((e) => {\n    e.preventDefault();\n    if (!plyr) return;\n    plyr.currentTime = valueInt;\n    plyr.play()?.catch(() => null);\n  }, [plyr, valueInt]);\n\n  return (\n    // eslint-disable-next-line jsx-a11y/anchor-is-valid\n    <a\n      href=\"#\"\n      className={visited ? 'visited' : ''}\n      onClick={handleClick}\n    >\n      {value}\n    </a>\n  );\n};\n\nTimecodeLink.propTypes = {\n  value: PropTypes.string.isRequired,\n  plyr: PropTypes.object,\n};\n\nTimecodeLink.defaultProps = {\n  plyr: null,\n};\n\nconst DangerSpan = ({ children }) => (\n  <span dangerouslySetInnerHTML={{ __html: children }} />\n);\n\nexport const Timecodes = React.forwardRef(({ className, data, ...rest }, ref) => (\n  <ListGroup ref={ref} className={['timecodes-list', className].join(' ')}>\n    {Object.entries(data).map(([key, value]) => {\n      if (typeof value === 'string') { // regular timecode\n        if (key.indexOf('~') === -1) { // simple time\n          return (\n            <ListGroup.Item key={key}>\n              {<TimecodeLink value={key} {...rest} />}\n              {' — '}\n              <DangerSpan>{value}</DangerSpan>\n            </ListGroup.Item>\n          );\n        } else { // time range\n          const [start, end] = key.split('~');\n\n          return (\n            <ListGroup.Item key={key}>\n              {<TimecodeLink value={start} {...rest} />}\n              {' - '}\n              {<TimecodeLink value={end} {...rest} />}\n              {' — '}\n              <DangerSpan>{value}</DangerSpan>\n            </ListGroup.Item>\n          );\n        }\n      } else if (Array.isArray(value)) {\n        const links = value\n          .map((t) => {\n            if (t.indexOf('~') === -1) { // simple time\n              return <TimecodeLink key={t} value={t} {...rest} />;\n            } else { // time range\n              const [start, end] = t.split('~');\n              return (\n                <span key={t}>\n                  {<TimecodeLink value={start} {...rest} />}\n                  {' - '}\n                  {<TimecodeLink value={end} {...rest} />}\n                </span>\n              );\n            }\n          })\n          .reduce((prev, curr) => [prev, ', ', curr]);\n\n        return (\n          <ListGroup.Item key={value.join()}>\n            {links}\n            {' — '}\n            <DangerSpan>{key}</DangerSpan>\n          </ListGroup.Item>\n        );\n      } else { // nested timecode\n        return (\n          <NestedTimecodes\n            key={key}\n            name={key}\n            data={value}\n            {...rest}\n          />\n        );\n      }\n    })}\n  </ListGroup>\n));\n\nTimecodes.propTypes = {\n  className: PropTypes.string,\n  plyr: PropTypes.object,\n  data: PropTypes.object.isRequired,\n};\n\nTimecodes.defaultProps = {\n  className: '',\n  plyr: null,\n};\n\nconst NestedTimecodes = ({ name, level, ...rest }) => {\n  const [open, setOpen] = useState(true);\n  const toggleState = useCallback(() => setOpen(!open), [open]);\n\n  return (\n    <>\n      <ListGroupItem\n        className=\"d-flex\"\n        action\n        onClick={toggleState}\n      >\n        <FAIcon icon={open ? faChevronDown : faChevronRight} />\n        <b>{name}</b>\n      </ListGroupItem>\n      <Collapse in={open}>\n        <Timecodes\n          className={`timecodes-nested-${level}`}\n          level={level + 1}\n          {...rest}\n        />\n      </Collapse>\n    </>\n  );\n};\n\nNestedTimecodes.propTypes = {\n  name: PropTypes.string.isRequired,\n  level: PropTypes.number,\n};\n\nNestedTimecodes.defaultProps = {\n  level: 0,\n};\n","import PropTypes from 'prop-types';\n\nexport const Segment = PropTypes.shape({\n  segment: PropTypes.string,\n\n  name: PropTypes.string,\n  note: PropTypes.string,\n  date: PropTypes.objectOf(Date),\n  games: PropTypes.arrayOf(PropTypes.string),\n  streams: PropTypes.arrayOf(PropTypes.string),\n  official: PropTypes.bool,\n\n  youtube: PropTypes.string,\n  direct: PropTypes.string,\n  torrent: PropTypes.string,\n  thumbnail: PropTypes.string,\n  poster: PropTypes.string,\n  url: PropTypes.string,\n\n  abs_start: PropTypes.number,\n  abs_end: PropTypes.number,\n  duration: PropTypes.number,\n});\n\nexport const SubRef = PropTypes.shape({\n  name: PropTypes.string.isRequired,\n  start: PropTypes.number,\n});\n\nexport const SegmentRef = PropTypes.shape({\n  name: PropTypes.string, // combined names of subrefs\n  start: PropTypes.number, // from first subref\n  segment: PropTypes.string,\n  original: Segment,\n  url: PropTypes.string,\n  subrefs: PropTypes.arrayOf(SubRef),\n});\n\nexport const Game = PropTypes.shape({\n  id: PropTypes.string,\n  name: PropTypes.string,\n  category: PropTypes.string,\n  streams: PropTypes.arrayOf(SegmentRef),\n});\n\nSegmentRef.game = Game; // Hmm...\n\nexport const Category = PropTypes.shape({\n  id: PropTypes.string,\n  name: PropTypes.string,\n});\n\nexport const IndexEntry = PropTypes.shape({\n  name: PropTypes.string,\n  segment: PropTypes.string,\n  start: PropTypes.number,\n  category: Category,\n  original: Game,\n  segments: PropTypes.arrayOf(Segment),\n  url: PropTypes.string,\n  streams: PropTypes.number,\n  date: PropTypes.objectOf(Date),\n});\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Badge, Button, Collapse, InputGroup, ListGroup } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { Resizable } from 're-resizable';\nimport { faArrowLeft, faArrowRight } from '@fortawesome/free-solid-svg-icons';\nimport SugarDate from '../../utils/sugar';\nimport { Game, Segment } from '../../data-types';\nimport { Scroll } from '../scroll';\nimport { FAIcon } from '../../utils/fontawesome';\n\nconst BUTTON_STYLE = { variant: 'dark', size: 'sm' };\n\nconst SegmentRefList = ({ game, currentSegment, contentKey }) => (\n  <Scroll className=\"h-100\" scrollTo=\".active\" scrollDelay={100} contentKey={contentKey}>\n    <ListGroup className=\"playlist-streams separator-v\">\n      {game.streams.map((segmentRef) => (\n        <ListGroup.Item\n          key={segmentRef.segment}\n          as={Link}\n          to={segmentRef.url}\n          action\n          active={segmentRef.original === currentSegment}\n          className=\"playlist-streams-item\"\n        >\n          <span className=\"flex-grow-1\">{segmentRef.name}</span>\n          <span>\n            <Badge pill bg=\"dark\">\n              {SugarDate.format(segmentRef.original.date, '{dd}.{MM}')}\n              <br />\n              {segmentRef.original.date.getFullYear()}\n            </Badge>\n          </span>\n        </ListGroup.Item>\n      ))}\n    </ListGroup>\n  </Scroll>\n);\n\nSegmentRefList.propTypes = {\n  game: Game.isRequired,\n  currentSegment: Segment.isRequired,\n  contentKey: PropTypes.any,\n};\n\nSegmentRefList.defaultProps = {\n  contentKey: null,\n};\n\nconst CollapseWrapper = ({ open, children }) => (\n  <Collapse in={open}>\n    <div>\n      <Resizable defaultSize={{ height: '30vh' }} enable={{ bottom: true }}>\n        {children}\n      </Resizable>\n    </div>\n  </Collapse>\n);\n\nCollapseWrapper.propTypes = {\n  open: PropTypes.bool.isRequired,\n};\n\nexport const Playlist = ({ games, game, segment, autoExpand, fullHeight }) => {\n  const [currentGame, setGame] = useState(game);\n  const [open, setOpen] = useState(autoExpand);\n\n  const activeIndex = games.indexOf(currentGame);\n  const prevItem = activeIndex !== 0 && games[activeIndex - 1];\n  const nextItem = activeIndex !== games.length - 1 && games[activeIndex + 1];\n\n  return (\n    <>\n      <InputGroup className=\"d-flex flex-row playlist-header separator-h\">\n        <Button\n          onClick={() => setGame(prevItem)}\n          disabled={!prevItem}\n          {...BUTTON_STYLE}\n        >\n          <FAIcon icon={faArrowLeft} />\n        </Button>\n        <Button\n          onClick={() => setOpen(!open)}\n          className=\"flex-1-0-0\"\n          disabled={fullHeight}\n          {...BUTTON_STYLE}\n        >\n          {currentGame.name}\n        </Button>\n        <Button\n          onClick={() => setGame(nextItem)}\n          disabled={!nextItem}\n          {...BUTTON_STYLE}\n        >\n          <FAIcon icon={faArrowRight} />\n        </Button>\n      </InputGroup>\n\n      {fullHeight ? (\n        <SegmentRefList\n          game={currentGame}\n          currentSegment={segment}\n          contentKey={currentGame.id}\n        />\n      ) : (\n        <CollapseWrapper open={open}>\n          <SegmentRefList\n            game={currentGame}\n            currentSegment={segment}\n            contentKey={currentGame.id + open}\n          />\n        </CollapseWrapper>\n      )}\n    </>\n  );\n};\n\nPlaylist.propTypes = {\n  games: PropTypes.arrayOf(Game).isRequired,\n  game: Game.isRequired,\n  segment: Segment.isRequired,\n  autoExpand: PropTypes.bool,\n  fullHeight: PropTypes.bool,\n};\n\nPlaylist.defaultProps = {\n  autoExpand: false,\n  fullHeight: false,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Source: https://github.com/facebook/react/issues/13044#issuecomment-428815909\n */\nexport default class Reparentable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n  }\n\n  componentDidMount() {\n    const { el } = this.props;\n    const ref = this.ref.current;\n\n    if (ref) {\n      ref.appendChild(el);\n    }\n  }\n\n  render() {\n    const { el, ...otherProps } = this.props;\n    return <div ref={this.ref} {...otherProps} />;\n  }\n}\n\nReparentable.propTypes = {\n  el: PropTypes.object.isRequired,\n};\n","import update from 'immutability-helper';\n\nfunction updateState(obj, spec, callback) {\n  obj.setState(update(obj.state, spec), callback);\n}\n\nexport default updateState;\n","import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Col, Form, InputGroup, Pagination, Popover, Row, Spinner } from 'react-bootstrap';\nimport { faCopy } from '@fortawesome/free-solid-svg-icons';\nimport { getBaseSegment } from '../../utils/data-utils';\nimport { Data } from '../../data';\nimport { ftime } from '../../utils/time-utils';\nimport { FAIcon } from '../../utils/fontawesome';\nimport { Segment } from '../../data-types';\nimport { usePlyrTime } from '../../hooks/use-plyr-time';\n\nconst getShortLink = (segment, at) => (\n  // eslint-disable-next-line prefer-template\n  'https://bsu.drhx.ru/r/'\n  + segment.segment\n  + (at ? `?at=${at}` : '')\n);\n\nconst getMpvCommand = (segment, t) => (\n  [\n    'mpv',\n    (segment.subtitles ? `--sub-file=${new URL(segment.subtitles, window.location.href)}` : ''),\n    (segment.abs_start !== 0 ? `--sub-delay=${-segment.abs_start}` : ''),\n    (t ? `--start=${t}` : ''),\n    (segment.end ? `--end=${segment.end}` : ''),\n    (segment.youtube ? `ytdl://${segment.youtube}` : segment.direct),\n  ].filter((x) => x).join(' ')\n);\n\nconst Mode = {\n  link: 'Ссылка',\n  chat: 'Чат',\n  mpv: 'MPV',\n};\n\nconst ModeSelector = ({ mode, onChange }) => (\n  <Pagination size=\"sm\" className=\"d-flex mb-0\">\n    {Object.entries(Mode).map(([key, value]) => (\n      <Pagination.Item\n        key={key}\n        active={mode === key}\n        onClick={() => onChange(key)}\n        className=\"flex-1-0-0\"\n      >\n        {value}\n      </Pagination.Item>\n    ))}\n  </Pagination>\n);\n\nModeSelector.propTypes = {\n  mode: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst ShareOverlay = React.forwardRef(({ segment, plyr, ...otherProps }, ref) => {\n  const inputRef = useRef();\n  const time = Math.floor(usePlyrTime(plyr, (t) => Math.round(t)));\n  const [mode, setMode] = useState('link');\n  const [segments, setSegments] = useState(null);\n  const [includeTime, setIncludeTime] = useState(time > 0);\n\n  useEffect(() => {\n    Data.then(({ segments: s }) => setSegments(s));\n  }, []);\n\n  if (!segments) {\n    return (\n      <Popover ref={ref} {...otherProps} className=\"share-popover\">\n        <Popover.Header as=\"h3\">Создать короткую ссылку</Popover.Header>\n        <Popover.Body className=\"d-flex justify-content-center\">\n          <Spinner animation=\"border\" />\n        </Popover.Body>\n      </Popover>\n    );\n  }\n\n  const [base, absTime] = getBaseSegment(segments, segment, time);\n\n  let value;\n\n  switch (mode) {\n    case 'link':\n      value = getShortLink(\n        (!includeTime && segment.segment.indexOf('.') !== -1) ? segment : base,\n        includeTime && absTime,\n      );\n      break;\n\n    case 'mpv':\n      value = getMpvCommand(segment, includeTime && time);\n      break;\n\n    case 'chat':\n      value = `!запись ${base.segment}${includeTime ? (` ${absTime}`) : ''}`;\n      break;\n\n    default:\n      value = '';\n  }\n\n  return (\n    <Popover ref={ref} {...otherProps} className=\"share-popover\">\n      <Popover.Header as=\"h3\">Создать короткую ссылку</Popover.Header>\n      <Popover.Body>\n        <Row>\n          <Col>\n            <InputGroup>\n              <Form.Control\n                ref={inputRef}\n                readOnly\n                value={value}\n                size=\"sm\"\n              />\n              <Button\n                variant=\"dark\"\n                size=\"sm\"\n                onClick={() => {\n                  const input = inputRef.current;\n\n                  if (input) {\n                    input.select();\n                    input.setSelectionRange(0, 200);\n                    document.execCommand('copy');\n                  }\n                }}\n              >\n                <FAIcon icon={faCopy} />\n              </Button>\n            </InputGroup>\n          </Col>\n        </Row>\n\n        <Row className=\"mt-2\">\n          <Col className=\"d-flex align-content-center\">\n            <Form.Check\n              className=\"me-auto\"\n              type=\"checkbox\"\n              label=\"Начать с таймкода: \"\n              checked={includeTime}\n              onChange={({ target: { checked } }) => setIncludeTime(checked)}\n            />\n\n            <Form.Control\n              className=\"time-selector\"\n              value={ftime(time)}\n              size=\"sm\"\n              readOnly\n              htmlSize={4}\n            />\n          </Col>\n        </Row>\n\n        <Row className=\"mt-2\">\n          <Col><ModeSelector mode={mode} onChange={setMode} /></Col>\n        </Row>\n      </Popover.Body>\n    </Popover>\n  );\n});\n\nShareOverlay.propTypes = {\n  segment: Segment.isRequired,\n  plyr: PropTypes.object,\n};\n\nShareOverlay.defaultProps = {\n  plyr: null,\n};\n\nexport { ShareOverlay };\n","export const isPrerender = navigator.userAgent.toLowerCase().indexOf('prerender') !== -1;\n\nexport const NoPrerender = ({ children }) => !isPrerender && children;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  Button,\n  Col,\n  ListGroup,\n  OverlayTrigger,\n  Ratio,\n  Row,\n  Tab,\n  Tabs,\n  Tooltip,\n} from 'react-bootstrap';\nimport { Helmet } from 'react-helmet-async';\nimport { Link } from 'react-router-dom';\nimport MediaQuery from 'react-responsive';\nimport { Rnd } from 'react-rnd';\nimport { faCaretSquareLeft, faCaretSquareRight, faCheckCircle, faDownload, faExclamationCircle, faExpand, faMaximize, faShareSquare } from '@fortawesome/free-solid-svg-icons';\nimport { faTwitch, faYoutube } from '@fortawesome/free-brands-svg-icons';\nimport { Data } from '../data';\nimport SavedPosition from '../utils/saved-position';\nimport Persist from '../utils/persist';\nimport { Chat } from './chat';\nimport Player from './player/player';\nimport { Timecodes } from './player/timecodes';\nimport { Scroll } from './scroll';\nimport { Playlist } from './player/playlist';\nimport Reparentable from './utils/reparentable';\nimport SugarDate from '../utils/sugar';\nimport ErrorPage from '../pages/error-page';\nimport updateState from '../utils/update-state';\nimport { findRefBySegment, resolveGame, resolveSegment } from '../utils/data-utils';\nimport { ShareOverlay } from './player/share-overlay';\nimport { Layout } from '.';\nimport { FAIcon } from '../utils/fontawesome';\nimport { NoPrerender } from '../utils/prerender';\nimport PATHS from '../constants/urls';\n\nexport default class SegmentPlayer extends React.Component {\n  createChatContainer() {\n    const chatContainer = document.createElement('div');\n\n    chatContainer.style.height = '100%';\n    chatContainer.style.display = 'flex';\n    chatContainer.style.flexDirection = 'column';\n\n    return chatContainer;\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loaded: false,\n      error: false,\n      fullscreen: false,\n      segment: null,\n      segmentRef: null,\n      relatedGames: null,\n      timecodes: null,\n      plyr: null,\n      toggleFullscreen: () => null,\n      ...Persist.load('SegmentPlayer', {\n        chatOverlay: {\n          width: null,\n          height: null,\n          x: null,\n          y: null,\n        },\n        sidebarCollapsed: false,\n      }),\n    };\n\n    this.toggleSidebar = this.toggleSidebar.bind(this);\n    this.renderPlayerOverlay = this.renderPlayerOverlay.bind(this);\n\n    this.chatContainer = this.createChatContainer();\n  }\n\n  resolveUrl({ segments, games }) {\n    const { location: { search: reqSearch } } = this.props;\n    const search = new URLSearchParams(reqSearch);\n    const paramAt = search.has('at') ? +search.get('at') : null;\n\n    let {\n      match: {\n        params: {\n          game: gameId,\n          segment: segmentId,\n        },\n      },\n    } = this.props;\n\n    const [segment, at, t] = resolveSegment(segments, segmentId, paramAt);\n    const autostart = t;\n\n    if (!segment) {\n      return null;\n    }\n\n    let redirect = segment.segment !== segmentId;\n\n    segmentId = segment.segment;\n\n    let game = games.by('id', gameId);\n    let segmentRef;\n\n    // Handle missing or unknown game\n    if (!game || segment.games.indexOf(gameId) === -1) {\n      [game, segmentRef] = resolveGame(games, segment, at);\n      gameId = game.id;\n      redirect = true;\n    } else {\n      segmentRef = findRefBySegment(game, segment);\n    }\n\n    let newUrl = `/play/${gameId}/${segment.segment}`;\n    if (at) {\n      newUrl += `?at=${at}`;\n    }\n\n    return {\n      segment,\n      game,\n      segmentRef,\n      autostart,\n      redirect: redirect && newUrl,\n    };\n  }\n\n  loadData() {\n    Data.then(({ segments, timecodes, games, persist }) => {\n      const { history } = this.props;\n      const request = this.resolveUrl({ segments, games });\n\n      if (!request) {\n        this.setState({ error: true });\n        return;\n      }\n\n      if (request.redirect) {\n        history.replace(request.redirect);\n      }\n\n      const {\n        game,\n        segment,\n        segmentRef,\n        autostart,\n      } = request;\n\n      let relatedGames = segment.games.map((gameId) => games.by('id', gameId));\n\n      if (relatedGames.length === 0) {\n        relatedGames = null;\n      }\n\n      this.setState({\n        loaded: true,\n        error: false,\n        segment,\n        game,\n        segmentRef,\n        relatedGames,\n        autostart,\n        savedPositionAdapter: new SavedPosition(persist, segment),\n      });\n\n      timecodes.then((data) => {\n        this.setState({\n          timecodes: data[segment.segment],\n        });\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  shouldComponentUpdate(prevProps, nextState) {\n    Persist.save('SegmentPlayer', this.state, nextState, [\n      'chatOverlay',\n      'sidebarCollapsed',\n    ]);\n\n    return true;\n  }\n\n  componentDidUpdate(prevProps) {\n    const { match: { params } } = this.props;\n    const { match: { params: prevParams } } = prevProps;\n\n    if (params.segment !== prevParams.segment) {\n      this.loadData();\n    } else if (params.game !== prevParams.game) {\n      this.loadData();\n    }\n  }\n\n  toggleSidebar() {\n    const { sidebarCollapsed } = this.state;\n\n    if (!sidebarCollapsed) { // collapse immediately\n      const { pointerEvents } = document.body.style;\n\n      // release focus\n      document.activeElement.blur();\n\n      // release hover for 100ms\n      document.body.style.pointerEvents = 'none';\n      setTimeout(() => {\n        document.body.style.pointerEvents = pointerEvents;\n      }, 100);\n    }\n\n    this.setState({ sidebarCollapsed: !sidebarCollapsed });\n  }\n\n  renderPlayer() {\n    const {\n      history,\n    } = this.props;\n\n    const {\n      game,\n      segmentRef,\n      segmentRef: {\n        end,\n        force_start: forceStart,\n      },\n      segment: {\n        youtube, direct, poster,\n      },\n      autostart,\n      savedPositionAdapter,\n    } = this.state;\n\n    const playerProps = {\n      youtube,\n      direct,\n      poster,\n      start: autostart,\n      autostart,\n      end,\n      forceStart,\n      savedPositionAdapter,\n      onVideoEnded: () => {\n        const nextIndex = game.streams.indexOf(segmentRef) + 1;\n        if (nextIndex < game.streams.length) {\n          history.push(game.streams[nextIndex].url);\n        }\n      },\n      onReady: (plyr) => {\n        this.setState({\n          plyr,\n          toggleFullscreen: (forceFallback = false) => {\n            plyr.fullscreen.forceFallback = forceFallback;\n            plyr.fullscreen.toggle();\n            plyr.elements.container.focus();\n          },\n        });\n      },\n      onFullScreen: (fullscreen) => this.setState({ fullscreen }),\n      onDestroy: () => this.setState({\n        plyr: null,\n        toggleFullscreen: () => null,\n      }),\n      renderOverlay: this.renderPlayerOverlay,\n    };\n\n    return (\n      <Row>\n        <Col>\n          <Ratio aspectRatio=\"16x9\">\n            <NoPrerender>\n              <Player {...playerProps} />\n            </NoPrerender>\n          </Ratio>\n        </Col>\n      </Row>\n    );\n  }\n\n  renderPlayerOverlay({ width, height }) {\n    const {\n      fullscreen,\n      segment: {\n        subtitles,\n      },\n      chatOverlay: ol,\n    } = this.state;\n\n    if (!fullscreen || !subtitles) {\n      return null;\n    }\n\n    return (\n      <Rnd\n        className=\"chat-overlay\"\n        position={{\n          x: ol.x !== null ? ol.x * width : 0,\n          y: ol.y !== null ? ol.y * height : 0.65 * height,\n        }}\n        minWidth=\"100px\"\n        minHeight=\"100px\"\n        size={{\n          width: ol.width ? `${ol.width * 100}%` : '35%',\n          height: ol.height ? `${ol.height * 100}%` : '35%',\n        }}\n        onDragStop={(e, { x, y }) => {\n          updateState(this, {\n            chatOverlay: {\n              $merge: {\n                x: x / width,\n                y: y / height,\n              },\n            },\n          });\n        }}\n        onResizeStop={(e, direction, ref, delta, position) => {\n          updateState(this, {\n            chatOverlay: {\n              $merge: {\n                width: ref.offsetWidth / width,\n                height: ref.offsetHeight / height,\n                x: position.x / width,\n                y: position.y / height,\n              },\n            },\n          });\n        }}\n        bounds=\"parent\"\n      >\n        {this.renderChat()}\n      </Rnd>\n    );\n  }\n\n  renderPlayerControls() {\n    const {\n      toggleFullscreen,\n      segment,\n      plyr,\n    } = this.state;\n\n    const {\n      segment: segmentId,\n      youtube,\n      official,\n      torrent,\n    } = segment;\n\n    return (\n      <Row className=\"g-0\">\n        <Col>\n          <div className=\"player-controls border-top border-bottom\">\n            <div className=\"label me-2 d-none d-xxl-block\">Смотреть на:</div>\n\n            {!segmentId.startsWith('00') && (\n              <Button variant=\"dark\" size=\"sm\" className=\"me-2\" href={`https://twitch.tv/videos/${segmentId}`} target=\"blank\">\n                <FAIcon icon={faTwitch} />\n                <span>Twitch</span>\n              </Button>\n            )}\n\n            {youtube && (\n              <Button\n                href={`https://youtu.be/${youtube}`}\n                target=\"blank\"\n                variant=\"dark\"\n                size=\"sm\"\n                className=\"me-2\"\n              >\n                <FAIcon icon={faYoutube} />\n                <span>Youtube</span>\n                <OverlayTrigger\n                  placement=\"top\"\n                  overlay={(\n                    <Tooltip>\n                      {official === false ? 'Неофициальный канал' : 'Официальный канал'}\n                    </Tooltip>\n                  )}\n                >\n                  <FAIcon\n                    icon={official === false ? faExclamationCircle : faCheckCircle}\n                    className={official === false ? 'text-warning' : 'text-success'}\n                  />\n                </OverlayTrigger>\n              </Button>\n            )}\n\n            {torrent && (\n              <Button\n                href={torrent}\n                variant=\"dark\"\n                size=\"sm\"\n                className=\"me-2\"\n              >\n                <FAIcon icon={faDownload} />\n                <span className=\"d-none d-xl-inline\">Торрент</span>\n              </Button>\n            )}\n\n            <div className=\"flex-grow-1\" />\n\n            <OverlayTrigger\n              trigger=\"click\"\n              rootClose\n              placement=\"top\"\n              overlay={(\n                <ShareOverlay\n                  segment={segment}\n                  plyr={plyr}\n                />\n              )}\n            >\n              <Button variant=\"dark\" size=\"sm\" className=\"me-2\">\n                <FAIcon icon={faShareSquare} />\n                <span className=\"d-none d-xl-inline\">Поделиться</span>\n              </Button>\n            </OverlayTrigger>\n\n            <OverlayTrigger\n              placement=\"top\"\n              overlay={(props) => (\n                <Tooltip {...props}>\n                  Оставить в окне только плеер, но не переходить в полноэкранный режим\n                </Tooltip>\n              )}\n            >\n              <Button variant=\"dark\" size=\"sm\" onClick={() => toggleFullscreen(true)} className=\"me-2\">\n                <FAIcon icon={faMaximize} />\n                <span className=\"d-none d-lg-inline\">На всё окно</span>\n              </Button>\n            </OverlayTrigger>\n\n            <OverlayTrigger\n              placement=\"top\"\n              overlay={(props) => (\n                <Tooltip {...props}>\n                  Развернуть плеер на весь экран\n                </Tooltip>\n              )}\n            >\n              <Button variant=\"dark\" size=\"sm\" onClick={() => toggleFullscreen(false)}>\n                <FAIcon icon={faExpand} />\n                <span className=\"d-none d-lg-inline\">На весь экран</span>\n              </Button>\n            </OverlayTrigger>\n          </div>\n        </Col>\n      </Row>\n    );\n  }\n\n  renderChat() {\n    const {\n      fullscreen,\n      plyr,\n      segment: {\n        subtitles,\n        abs_start: absStart,\n      },\n    } = this.state;\n\n    const header = (\n      <div className=\"sidebar-header\">\n        Чат\n      </div>\n    );\n\n    if (!subtitles) {\n      return (\n        <>\n          {header}\n          <div className=\"p-4 flex-grow-1 align-self-center text-white\">\n            Для этого стрима нет записи чата :(\n          </div>\n        </>\n      );\n    }\n\n    return (\n      <NoPrerender>\n        {!fullscreen && header}\n        <Chat\n          plyr={plyr}\n          offset={-absStart}\n          subtitles={subtitles}\n          simple={fullscreen}\n        />\n      </NoPrerender>\n    );\n  }\n\n  renderTimecodes() {\n    const { timecodes, plyr } = this.state;\n\n    return (\n      <>\n        <div className=\"sidebar-header\">\n          Таймкоды\n        </div>\n        <Scroll className=\"flex-1-1-0\">\n          <Timecodes\n            data={timecodes}\n            plyr={plyr}\n          />\n        </Scroll>\n      </>\n    );\n  }\n\n  renderPlaylist({ autoExpand = false, fullHeight = false } = {}) {\n    const {\n      segment,\n      game,\n      relatedGames,\n    } = this.state;\n\n    if (!relatedGames) return null;\n\n    return (\n      <>\n        <div className=\"sidebar-header\">\n          Плейлист\n        </div>\n        <Playlist\n          games={relatedGames}\n          game={game}\n          segment={segment}\n          {...{ autoExpand, fullHeight }}\n        />\n      </>\n    );\n  }\n\n  renderLeftSidebar() {\n    const {\n      sidebarCollapsed,\n      timecodes,\n      relatedGames,\n      segment: {\n        subtitles,\n      },\n    } = this.state;\n\n    const leftSidebarClasses = [\n      'col-sidebar-narrow border-end',\n      sidebarCollapsed ? 'collapsed' : '',\n    ].join(' ');\n\n    if (!subtitles) { // move all content to right sidebar\n      return null;\n    }\n\n    return (\n      <>\n        {(timecodes || relatedGames) && (\n          <MediaQuery minDeviceWidth={1200}>\n            <Col className={leftSidebarClasses} tabIndex=\"0\">\n              <div className=\"content\">\n                <div className=\"sidebar-row-overlay flex-row-reverse\">\n                  <Button\n                    variant=\"link\"\n                    size=\"sm\"\n                    onClick={this.toggleSidebar}\n                  >\n                    <FAIcon icon={sidebarCollapsed ? faCaretSquareRight : faCaretSquareLeft} />\n                  </Button>\n                </div>\n\n                {relatedGames && this.renderPlaylist()}\n                {timecodes && this.renderTimecodes()}\n              </div>\n\n              <div className=\"collapsed-content\">\n                {relatedGames && (\n                  <div className=\"sidebar-header\">Плейлист</div>\n                )}\n                {timecodes && (\n                  <div className=\"sidebar-header\">Таймкоды</div>\n                )}\n              </div>\n            </Col>\n          </MediaQuery>\n        )}\n\n        {(timecodes || relatedGames) && (\n          <MediaQuery minDeviceWidth={768} maxDeviceWidth={1199}>\n            <Col className=\"col-sidebar-narrow collapsed\" tabIndex=\"0\">\n              <div className=\"content border-end\">\n                {relatedGames && this.renderPlaylist()}\n                {timecodes && this.renderTimecodes()}\n              </div>\n\n              <div className=\"collapsed-content\">\n                {relatedGames && (\n                  <div className=\"sidebar-header\">Плейлист</div>\n                )}\n                {timecodes && (\n                  <div className=\"sidebar-header\">Таймкоды</div>\n                )}\n              </div>\n            </Col>\n          </MediaQuery>\n        )}\n      </>\n    );\n  }\n\n  renderRightSidebar() {\n    const {\n      chatContainer,\n      state: {\n        fullscreen,\n        relatedGames,\n        timecodes,\n        segment: {\n          subtitles,\n        },\n      },\n    } = this;\n\n    if (!subtitles && !relatedGames && !timecodes) {\n      return null;\n    }\n\n    return (\n      <MediaQuery minDeviceWidth={768}>\n        <Col className=\"col-sidebar-wide border-start\">\n          {(subtitles && !fullscreen) && (\n            <Reparentable el={chatContainer} className=\"flex-1-1-0\" />\n          )}\n          {(!subtitles && relatedGames) && this.renderPlaylist()}\n          {(!subtitles && timecodes) && this.renderTimecodes()}\n        </Col>\n      </MediaQuery>\n    );\n  }\n\n  renderDescription() {\n    const {\n      game,\n      segment,\n      segmentRef,\n    } = this.state;\n\n    return (\n      <Row className=\"stream-description\">\n        <Col>\n          <h3>\n            <Link to={`/play/${game.id}`}>{game.name}</Link>\n            <span> — </span>\n            <span className=\"flex-grow-1\">{segmentRef.name}</span>\n          </h3>\n\n          <ListGroup variant=\"flush\" size=\"sm\">\n            <ListGroup.Item>\n              Дата стрима:\n              {' '}\n              {SugarDate.medium(segment.date)}\n              {' '}\n              ({SugarDate.relative(segment.date)})\n            </ListGroup.Item>\n\n            {(segment.note && (\n              <ListGroup.Item\n                dangerouslySetInnerHTML={{ __html: segment.note }}\n              />\n            ))}\n          </ListGroup>\n        </Col>\n      </Row>\n    );\n  }\n\n  renderBelowPlayer() {\n    const {\n      chatContainer,\n      state: {\n        fullscreen,\n        relatedGames,\n        timecodes,\n        segment: {\n          subtitles,\n        },\n      },\n    } = this;\n\n    return (\n      <>\n        <MediaQuery minDeviceWidth={768}>\n          {this.renderDescription()}\n        </MediaQuery>\n\n        <MediaQuery maxDeviceWidth={767}>\n          <MediaQuery maxDeviceWidth={575}>\n            {(subtitlesInTab) => (\n              <Row className=\"flex-grow-1 flex-shrink-1 g-0\">\n                <Col className=\"sidebar-content\">\n                  <Tabs mountOnEnter>\n                    <Tab eventKey=\"description\" title=\"Описание\">\n                      {!subtitlesInTab ? (\n                        <Scroll className=\"flex-1-1-0\">\n                          {this.renderDescription()}\n                        </Scroll>\n                      ) : this.renderDescription()}\n                    </Tab>\n\n                    {timecodes && (\n                      <Tab eventKey=\"timecodes\" title=\"Таймкоды\">\n                        {this.renderTimecodes()}\n                      </Tab>\n                    )}\n\n                    {relatedGames && (\n                      <Tab eventKey=\"playlist\" title=\"Плейлист\" unmountOnExit>\n                        {this.renderPlaylist({\n                          autoExpand: true,\n                          fullHeight: true,\n                        })}\n                      </Tab>\n                    )}\n\n                    {subtitles && subtitlesInTab && (\n                      <Tab eventKey=\"chat\" title=\"Чат\">\n                        {!fullscreen && (\n                          <Reparentable el={chatContainer} className=\"flex-1-1-0\" />\n                        )}\n                      </Tab>\n                    )}\n                  </Tabs>\n                </Col>\n\n                {subtitles && !subtitlesInTab && (\n                  <Col className=\"sidebar-content border-start\">\n                    {!fullscreen && (\n                      <Reparentable el={chatContainer} className=\"flex-1-1-0\" />\n                    )}\n                  </Col>\n                )}\n              </Row>\n            )}\n          </MediaQuery>\n        </MediaQuery>\n      </>\n    );\n  }\n\n  render() {\n    const { loaded, error } = this.state;\n\n    if (error) {\n      return <ErrorPage />;\n    }\n\n    if (!loaded) {\n      return <Layout fluid flex withFooter={false} isLoading />;\n    }\n\n    const {\n      chatContainer,\n      state: {\n        segment: {\n          segment: segmentId,\n          subtitles,\n          thumbnail,\n          date,\n        },\n        segmentRef: {\n          name: refName,\n        },\n        game: {\n          id: gameId,\n          name: gameName,\n        },\n      },\n    } = this;\n\n    const title = `${refName} | ${gameName}`;\n    const canonicalPath = PATHS.PLAYER\n      .replace(':game', gameId)\n      .replace(':segment', segmentId);\n\n    return (\n      <Layout fluid flex withFooter={false} {...{ title, canonicalPath }}>\n        <Helmet>\n          <meta\n            property=\"og:description\"\n            content={`Запись стрима от ${SugarDate.medium(date)}`}\n          />\n          {thumbnail.startsWith('http') && (\n            <meta property=\"og:image\" content={thumbnail} />\n          )}\n        </Helmet>\n\n        {subtitles && ReactDOM.createPortal(this.renderChat(), chatContainer)}\n\n        <Row className=\"flex-grow-1 g-0\">\n          {this.renderLeftSidebar()}\n\n          <Col className=\"d-flex flex-column\">\n            {this.renderPlayer()} {/* Can't be moved without reloading */}\n            {this.renderPlayerControls()}\n            {this.renderBelowPlayer()}\n          </Col>\n\n          {this.renderRightSidebar()}\n        </Row>\n      </Layout>\n    );\n  }\n}\n","import { useCallback, useState } from 'react';\n\nexport const useComplexState = (initValue) => {\n  const [value, setValue] = useState(initValue);\n  const changeState = useCallback((input) => (\n    setValue((current) => (\n      { ...current, ...input }\n    ), [])\n  ));\n  return [value, changeState];\n};\n"],"names":["upsert","db","keys","obj","filter","Object","assign","map","k","x","findOne","update","insert","SavedPosition","persist","segment","this","getCollection","streams","offsets","abs_start","t","zip","o","end","Math","round","match","find","stream","offset","id","ts","full","last","i","Number","isNaN","$in","Persist","name","state","nextState","nextData","data","forEach","key","shallowequal","localStorage","setItem","JSON","stringify","defaultValue","merge","parse","getItem","TypeMessage","PropTypes","$loki","time","user","text","color","hidden","TypeEmotes","pattern","src","PACKED_WORDS","ChatMessage","message","emotes","unpackMessages","showHidden","showEmotes","body","useMemo","res","replace","a","b","c","repeat","trimEnd","split","word","alt","className","ListGroupItem","style","propTypes","isRequired","defaultProps","LINE_BREAK","loadSubtitles","url","Loki","addCollection","indices","fetch","then","lines","firstLine","line","startsWith","Error","substring","parts","slice","join","userStr","msgParts","ptime","length","Scroll","children","keepAtBottom","scrollTo","scrollDelay","contentKey","scrollRef","useRef","useState","manualScroll","setManualScroll","outerHeight","setOuterHeight","scrollToSelector","selector","scroll","current","node","innerContainerRef","querySelector","setTimeout","updateScrollPosition","offsetTop","onResize","useCallback","forceUpdate","onOuterResize","entry","height","onScroll","target","scrollTop","scrollTopMax","useEffect","outerMeasureRef","measureRef","ref","display","flexDirection","flex","ChatSettings","subtitles","onChange","OverlayTrigger","placement","overlay","props","Tooltip","Button","variant","size","onClick","icon","faRobot","Spinner","animation","faSmile","faFileArchive","href","faDownload","usePlyrTime","plyr","hash","getTime","currentTime","timeRef","setTime","callback","newTime","on","off","Chat","simple","error","setError","setData","setEmotes","useComplexState","load","settings","updateSettings","borders","left","right","floor","save","catch","e","clear","json","RegExp","role","query","$eq","messages","chain","$lte","simplesort","lastMsg","nextMsg","$gt","limit","ListGroup","msg","Player","chatOverlay","React","document","createElement","onReady","bind","onTimeUpdate","onVideoEnded","onFullScreenEnter","onFullScreenExit","firstTimeUpdate","firstReady","invertTime","seekTime","youtube","controls","fs","disablekb","keyboard","global","direct","source","type","sources","provider","before","faComments","value","onToggle","elements","button","classList","add","appendChild","ReactDOM","pressed","onclick","remove","nextNode","insertBefore","autostart","addControlButton","setState","play","forceStart","start","spa","savedPositionAdapter","lastSave","exists","min","get","duration","pause","abs","set","onFullScreen","video","Plyr","plyrOptions","container","plyrSource","touch","poster","event","detail","code","muted","embed","volume","getVolume","onDestroy","destroy","removeChild","spawnPlyr","prevProps","prev","next","destroyPlyr","renderOverlay","contentRect","TimecodeLink","valueInt","visited","handleClick","preventDefault","DangerSpan","dangerouslySetInnerHTML","__html","Timecodes","rest","entries","indexOf","Array","isArray","links","reduce","curr","NestedTimecodes","level","open","setOpen","toggleState","action","faChevronDown","faChevronRight","Collapse","in","Segment","note","date","Date","games","official","torrent","thumbnail","abs_end","SubRef","SegmentRef","original","subrefs","Game","category","game","Category","segments","BUTTON_STYLE","SegmentRefList","currentSegment","segmentRef","as","Link","to","active","Badge","pill","bg","SugarDate","getFullYear","CollapseWrapper","defaultSize","enable","bottom","Playlist","autoExpand","fullHeight","currentGame","setGame","activeIndex","prevItem","nextItem","InputGroup","disabled","faArrowLeft","faArrowRight","Reparentable","el","otherProps","spec","Mode","link","chat","mpv","ModeSelector","mode","Pagination","ShareOverlay","inputRef","setMode","setSegments","includeTime","setIncludeTime","Data","s","Popover","getBaseSegment","base","absTime","at","getShortLink","URL","window","location","getMpvCommand","Row","Col","Form","readOnly","input","select","setSelectionRange","execCommand","faCopy","label","checked","ftime","htmlSize","isPrerender","navigator","userAgent","toLowerCase","NoPrerender","SegmentPlayer","loaded","fullscreen","relatedGames","timecodes","toggleFullscreen","width","y","sidebarCollapsed","toggleSidebar","renderPlayerOverlay","chatContainer","createChatContainer","reqSearch","search","URLSearchParams","paramAt","has","params","gameId","segmentId","resolveSegment","redirect","by","findRefBySegment","resolveGame","newUrl","history","request","resolveUrl","loadData","prevParams","pointerEvents","activeElement","blur","force_start","playerProps","nextIndex","push","forceFallback","toggle","focus","Ratio","aspectRatio","ol","position","minWidth","minHeight","onDragStop","updateState","$merge","onResizeStop","direction","delta","offsetWidth","offsetHeight","bounds","renderChat","faTwitch","faYoutube","faExclamationCircle","faCheckCircle","trigger","rootClose","faShareSquare","faMaximize","faExpand","absStart","header","leftSidebarClasses","minDeviceWidth","tabIndex","faCaretSquareRight","faCaretSquareLeft","renderPlaylist","renderTimecodes","maxDeviceWidth","renderDescription","subtitlesInTab","Tabs","mountOnEnter","Tab","eventKey","title","unmountOnExit","fluid","withFooter","isLoading","refName","gameName","canonicalPath","PATHS","property","content","renderLeftSidebar","renderPlayer","renderPlayerControls","renderBelowPlayer","renderRightSidebar","initValue","setValue"],"sourceRoot":""}