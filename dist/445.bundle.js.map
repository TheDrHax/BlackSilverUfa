{"version":3,"file":"445.bundle.js","mappings":"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","sources":["webpack://blacksilverufa/./src/js/utils/saved-position.js","webpack://blacksilverufa/./src/js/utils/persist.js","webpack://blacksilverufa/./src/js/components/chat/types.js","webpack://blacksilverufa/./src/js/components/chat/message.js","webpack://blacksilverufa/./src/js/components/chat/subtitles-loader.js","webpack://blacksilverufa/./src/js/components/scroll.js","webpack://blacksilverufa/./src/js/components/chat/settings.js","webpack://blacksilverufa/./src/js/hooks/use-plyr-time.js","webpack://blacksilverufa/./src/js/components/chat/chat.js","webpack://blacksilverufa/./src/js/components/player/player.js","webpack://blacksilverufa/./src/js/components/player/timecodes.js","webpack://blacksilverufa/./src/js/data-types.js","webpack://blacksilverufa/./src/js/components/player/playlist.js","webpack://blacksilverufa/./src/js/components/utils/reparentable.js","webpack://blacksilverufa/./src/js/utils/update-state.js","webpack://blacksilverufa/./src/js/components/player/share-overlay.js","webpack://blacksilverufa/./src/js/utils/prerender.js","webpack://blacksilverufa/./src/js/components/segment-player.js","webpack://blacksilverufa/./src/js/hooks/use-complex-state.js"],"sourcesContent":["import last from 'lodash/last';\nimport zip from 'lodash/zip';\n\nconst resume = JSON.parse(localStorage.getItem('resume_playback')) || {};\n\nexport default class SavedPosition {\n  constructor(segment) {\n    this.streams = segment.streams;\n    this.offsets = segment.offsets || [segment.abs_start];\n  }\n\n  set(t) {\n    let match = null;\n    t = Math.round(t);\n\n    zip(this.streams, this.offsets).forEach(([stream, offset]) => {\n      if (t >= offset) {\n        match = { stream, offset };\n      }\n\n      delete resume[stream];\n    });\n\n    if (match) {\n      const { stream, offset } = match;\n      resume[stream] = t - offset;\n      localStorage.setItem('resume_playback', JSON.stringify(resume));\n    }\n  }\n\n  get() {\n    return last(\n      this.streams\n        .map((id, i) => +resume[id] + this.offsets[i])\n        .filter((x) => !Number.isNaN(x)),\n    );\n  }\n\n  exists() {\n    for (let i = 0; i < this.streams.length; i += 1) {\n      if (resume[this.streams[i]]) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n}\n","import merge from 'lodash/merge';\nimport shallowequal from 'shallowequal';\n\nexport default class Persist {\n  static save(name, state, nextState, keys) {\n    const nextData = {};\n    const data = {};\n\n    keys.forEach((key) => {\n      nextData[key] = nextState[key];\n      data[key] = state[key];\n    });\n\n    if (shallowequal(nextData, data)) {\n      return;\n    }\n\n    localStorage.setItem(`state-${name}`, JSON.stringify(nextData));\n  }\n\n  static load(name, defaultValue = {}) {\n    return merge(\n      {},\n      defaultValue,\n      JSON.parse(localStorage.getItem(`state-${name}`)) || {},\n    );\n  }\n}\n","import PropTypes from 'prop-types';\n\nexport const TypeMessage = PropTypes.shape({\n  $loki: PropTypes.number, // unique id\n  time: PropTypes.number,\n  user: PropTypes.string,\n  text: PropTypes.string,\n  color: PropTypes.string,\n  hidden: PropTypes.bool,\n});\n\nexport const TypeEmotes = PropTypes.shape({\n  pattern: PropTypes.object,\n  data: PropTypes.objectOf(PropTypes.shape({\n    id: PropTypes.string,\n    src: PropTypes.string,\n  })),\n});\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport repeat from 'lodash/repeat';\nimport { ListGroupItem } from 'react-bootstrap';\nimport { TypeMessage, TypeEmotes } from './types';\n\nconst PACKED_WORDS = /([^ ]+) x⁣([0-9]+)/g;\n\nconst unpackMessage = (text) => (\n  text.replace(PACKED_WORDS, (a, b, c) => repeat(`${b} `, c).trimEnd())\n);\n\nexport const ChatMessage = ({ message, emotes, unpackMessages, showHidden, showEmotes }) => {\n  if (message.hidden && !showHidden) return null;\n\n  const body = useMemo(() => {\n    let res = message.text;\n\n    if (unpackMessages) {\n      res = unpackMessage(res);\n    }\n\n    if (showEmotes && emotes) {\n      res = res.split(/\\s+/).map((word, i) => {\n        if (word.match(emotes.pattern)) {\n          word = (\n            <img\n              // eslint-disable-next-line react/no-array-index-key\n              key={i}\n              src={emotes.data[word].src}\n              alt={word}\n              className=\"emote\"\n            />\n          );\n        }\n\n        return [i > 0 && ' ', word];\n      });\n    }\n\n    return res;\n  }, [message.text, unpackMessages, emotes, showEmotes]);\n\n  return (\n    <ListGroupItem>\n      <span\n        style={{ color: message.color }}\n        className=\"username\"\n      >\n        {message.user}\n      </span>\n      {': '}\n      {body}\n    </ListGroupItem>\n  );\n};\n\nChatMessage.propTypes = {\n  message: TypeMessage.isRequired,\n  emotes: TypeEmotes,\n  unpackMessages: PropTypes.bool.isRequired,\n  showHidden: PropTypes.bool.isRequired,\n  showEmotes: PropTypes.bool.isRequired,\n};\n\nChatMessage.defaultProps = {\n  emotes: null,\n};\n","import * as Loki from 'lokijs';\nimport { ptime } from '../../utils/time-utils';\n\nconst LINE_BREAK = /\\\\N/g;\n\nexport const loadSubtitles = async (url) => {\n  const db = new Loki('chat');\n  const data = db.addCollection('messages', { indices: ['time'] });\n\n  const lines = await fetch(url)\n    .then((res) => res.text())\n    .then((res) => res.split('\\n'));\n\n  let firstLine = true;\n\n  for (let line of lines) {\n    if (firstLine) {\n      if (!line.startsWith('[Script Info]')) {\n        throw new Error('Файл повреждён или недоступен');\n      }\n\n      firstLine = false;\n    }\n\n    const hidden = line.startsWith('; ');\n\n    if (hidden) {\n      line = line.substring(2);\n    }\n\n    if (line.startsWith('Dialogue: ')) {\n      const parts = line.substring(10).split(', ');\n\n      const [userStr, ...msgParts] = parts.slice(3).join(', ').split(': ');\n      const text = msgParts.join(': ').replace(LINE_BREAK, '');\n      const time = ptime(parts[1]);\n\n      let user = userStr;\n      let color = 'inherit';\n\n      if (userStr.startsWith('{\\\\c&H')) {\n        user = userStr.substring(13, 13 + userStr.length - 13 * 2);\n\n        // BGR to RGB\n        color = userStr.substring(9, 11) + userStr.substring(7, 9) + userStr.substring(5, 7);\n        color = `#${color}`;\n\n        if (color === '#FFFFFF') {\n          color = 'inherit';\n        }\n      }\n\n      data.insert({ time, user, text, color, hidden });\n    }\n  }\n\n  return data;\n};\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport CustomScroll from 'react-custom-scroll';\nimport Measure from 'react-measure';\n\nexport const Scroll = ({\n  children,\n  className,\n  keepAtBottom,\n  scrollTo,\n  scrollDelay,\n  contentKey,\n}) => {\n  const scrollRef = useRef();\n  const [manualScroll, setManualScroll] = useState(!keepAtBottom);\n  const [outerHeight, setOuterHeight] = useState(0);\n\n  const scrollToSelector = (selector) => {\n    const { current: scroll } = scrollRef;\n    const node = scroll?.innerContainerRef.current?.querySelector(selector);\n\n    if (node) {\n      if (scrollDelay) {\n        setTimeout(() => (\n          scroll.updateScrollPosition(node.offsetTop)\n        ), scrollDelay);\n      } else {\n        scroll.updateScrollPosition(node.offsetTop);\n      }\n    }\n  };\n\n  const onResize = useCallback(() => {\n    scrollRef.current?.forceUpdate();\n  });\n\n  const onOuterResize = useCallback(({ entry }) => {\n    setOuterHeight(entry?.height || 0);\n    onResize();\n  });\n\n  const onScroll = useCallback(({ target: { scrollTop, scrollTopMax } }) => {\n    setManualScroll(scrollTop < scrollTopMax * 0.9);\n  });\n\n  useEffect(() => {\n    if (keepAtBottom && !manualScroll) {\n      scrollToSelector('.bottom');\n    }\n  }, [keepAtBottom, manualScroll, outerHeight, contentKey]);\n\n  useEffect(() => {\n    if (scrollTo) {\n      scrollToSelector(scrollTo);\n    }\n  }, [scrollTo, contentKey]);\n\n  return (\n    <Measure onResize={onOuterResize}>\n      {({ measureRef: outerMeasureRef }) => (\n        <div\n          ref={outerMeasureRef}\n          className={className}\n          style={{ display: 'flex', flexDirection: 'column' }}\n        >\n          <CustomScroll\n            ref={scrollRef}\n            onScroll={onScroll}\n            flex=\"1 1 0\"\n          >\n            <Measure onResize={onResize}>\n              {({ measureRef }) => (\n                <div ref={measureRef}>\n                  {children}\n                  <div className=\"bottom\" />\n                </div>\n              )}\n            </Measure>\n          </CustomScroll>\n        </div>\n      )}\n    </Measure>\n  );\n};\n\nScroll.propTypes = {\n  className: PropTypes.string,\n  keepAtBottom: PropTypes.bool,\n  scrollTo: PropTypes.string,\n  scrollDelay: PropTypes.number,\n  contentKey: PropTypes.any,\n};\n\nScroll.defaultProps = {\n  className: null,\n  keepAtBottom: false,\n  scrollTo: null,\n  scrollDelay: 0,\n  contentKey: null,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, OverlayTrigger, Spinner, Tooltip } from 'react-bootstrap';\nimport { faFileArchive, faRobot, faSmile } from '@fortawesome/free-solid-svg-icons';\nimport { TypeEmotes } from './types';\nimport { FAIcon } from '../../utils/fontawesome';\n\nexport const ChatSettings = ({ showHidden, emotes, showEmotes, unpackMessages, onChange }) => (\n  <div className=\"sidebar-row border-top d-flex\">\n    <OverlayTrigger\n      placement=\"top\"\n      overlay={(props) => (\n        <Tooltip {...props}>\n          Показывать ответы ботов, команды и голоса на играх с интеграцией\n          чата ({showHidden ? 'включено' : 'выключено'})\n        </Tooltip>\n      )}\n    >\n      <Button\n        variant=\"dark\"\n        size=\"sm\"\n        onClick={() => onChange({ showHidden: !showHidden })}\n      >\n        <FAIcon icon={faRobot} />\n        <div className={`led ${showHidden ? 'bg-success' : 'bg-danger'}`} />\n      </Button>\n    </OverlayTrigger>\n\n    <OverlayTrigger\n      placement=\"top\"\n      overlay={(props) => (\n        <Tooltip {...props}>\n          Показывать смайлики Twitch, BetterTTV и\n          FrankerFaceZ ({showEmotes ? 'включено' : 'выключено'})\n        </Tooltip>\n      )}\n    >\n      <Button\n        className=\"ms-1\"\n        variant=\"dark\"\n        size=\"sm\"\n        onClick={() => onChange({ showEmotes: !showEmotes })}\n      >\n        {showEmotes && !emotes ? (\n          <Spinner animation=\"border\" size=\"sm\" />\n        ) : (\n          <FAIcon icon={faSmile} />\n        )}\n        <div className={`led ${showEmotes ? 'bg-success' : 'bg-danger'}`} />\n      </Button>\n    </OverlayTrigger>\n\n    <OverlayTrigger\n      placement=\"top\"\n      overlay={(props) => (\n        <Tooltip {...props}>\n          Распаковывать сообщения вида &quot;Kappa x3&quot; в\n          &quot;Kappa Kappa Kappa&quot; ({unpackMessages ? 'включено' : 'выключено'})\n        </Tooltip>\n      )}\n    >\n      <Button\n        className=\"ms-1\"\n        variant=\"dark\"\n        size=\"sm\"\n        onClick={() => onChange({ unpackMessages: !unpackMessages })}\n      >\n        <FAIcon icon={faFileArchive} />\n        <div className={`led ${unpackMessages ? 'bg-success' : 'bg-danger'}`} />\n      </Button>\n    </OverlayTrigger>\n  </div>\n);\n\nChatSettings.propTypes = {\n  showHidden: PropTypes.bool.isRequired,\n  emotes: TypeEmotes,\n  showEmotes: PropTypes.bool.isRequired,\n  unpackMessages: PropTypes.bool.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nChatSettings.defaultProps = {\n  emotes: null,\n};\n","import { useEffect, useRef, useState } from 'react';\n\nexport const usePlyrTime = (plyr, hash = (t) => t) => {\n  const getTime = () => plyr?.currentTime || 0;\n  const timeRef = useRef(getTime());\n  const [currentTime, setTime] = useState(timeRef.current);\n\n  useEffect(() => {\n    const callback = () => {\n      const newTime = getTime();\n      if (hash(timeRef.current) !== hash(newTime)) {\n        timeRef.current = newTime;\n        setTime(newTime);\n      }\n    };\n\n    plyr?.on('timeupdate', callback);\n\n    return () => {\n      plyr?.off('timeupdate', callback);\n    };\n  }, [plyr]);\n\n  return currentTime;\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport last from 'lodash/last';\nimport { Button, ListGroup, Spinner } from 'react-bootstrap';\nimport { ChatMessage } from './message';\nimport { loadSubtitles } from './subtitles-loader';\nimport { Scroll } from '../scroll';\nimport Persist from '../../utils/persist';\nimport { ChatSettings } from './settings';\nimport { useComplexState } from '../../hooks/use-complex-state';\nimport { usePlyrTime } from '../../hooks/use-plyr-time';\n\nexport const Chat = ({ subtitles, plyr, offset, simple }) => {\n  const [error, setError] = useState();\n  const [data, setData] = useState();\n  const [emotes, setEmotes] = useState();\n  const [settings, updateSettings] = useComplexState(\n    Persist.load('Chat', {\n      showHidden: false,\n      showEmotes: true,\n      unpackMessages: true,\n    }),\n  );\n\n  // Skip time updates if there are no new messages available\n  const borders = useRef([null, null]);\n  const currentTime = usePlyrTime(plyr, (t) => {\n    const { current: [left, right] } = borders;\n\n    return left != null && right != null && t >= left && t < right\n      ? true\n      : Math.floor(t);\n  });\n\n  useEffect(() => {\n    Persist.save('Chat', {}, settings, Object.keys(settings));\n  }, [settings]);\n\n  useEffect(() => {\n    if (error) return null;\n\n    loadSubtitles(subtitles)\n      .then((res) => setData(res))\n      .catch((e) => setError(e.message));\n\n    return () => data && data.clear();\n  }, [subtitles, error]);\n\n  useEffect(() => {\n    if (emotes || !settings.showEmotes) return;\n\n    fetch('/data/emotes.json')\n      .then((res) => res.json())\n      .then((res) => {\n        const pattern = new RegExp(`^(${Object.keys(res).join('|')})$`);\n        setEmotes({ data: res, pattern });\n      })\n      .catch(() => setEmotes(null));\n  }, [settings.showEmotes]);\n\n  if (error) {\n    return !simple && (\n      <div className=\"flex-1-0-0 d-flex flex-column justify-content-center align-items-center\">\n        <span>Ошибка: {error}</span>\n        <Button\n          variant=\"primary\"\n          className=\"mt-2\"\n          onClick={() => setError(null)}\n        >\n          Попробовать снова\n        </Button>\n      </div>\n    );\n  }\n\n  if (!data) {\n    return !simple && (\n      <div className=\"flex-1-0-0 d-flex flex-column justify-content-center align-items-center\">\n        <Spinner animation=\"border\" role=\"status\" />\n        <span className=\"mt-2\">Загрузка сообщений...</span>\n      </div>\n    );\n  }\n\n  const query = {};\n\n  if (!settings.showHidden) {\n    query.hidden = { $eq: false };\n  }\n\n  const messages = data.chain()\n    .find({\n      ...query,\n      time: { $lte: currentTime - offset },\n    })\n    .offset(-50)\n    .simplesort('$loki')\n    .data();\n\n  const lastMsg = last(messages);\n\n  borders.current[0] = lastMsg ? lastMsg.time + offset : 0;\n\n  const nextMsg = data.chain().find({\n    ...query,\n    $loki: { $gt: lastMsg?.$loki || 0 },\n    time: { $gt: lastMsg?.time || 0 },\n  }).limit(1).data()[0];\n\n  borders.current[1] = nextMsg ? nextMsg.time + offset : null;\n\n  return (\n    <>\n      <Scroll className=\"flex-1-0-0\" keepAtBottom contentKey={lastMsg?.time}>\n        <ListGroup className=\"chat-messages-list\">\n          {messages.map((msg) => (\n            <ChatMessage\n              key={msg.$loki}\n              message={msg}\n              emotes={emotes}\n              {...settings}\n            />\n          ))}\n        </ListGroup>\n      </Scroll>\n\n      {!simple && (\n        <ChatSettings\n          onChange={updateSettings}\n          emotes={emotes}\n          {...settings}\n        />\n      )}\n    </>\n  );\n};\n\nChat.propTypes = {\n  subtitles: PropTypes.string.isRequired,\n  plyr: PropTypes.object,\n  offset: PropTypes.number,\n  simple: PropTypes.bool,\n};\n\nChat.defaultProps = {\n  offset: 0,\n  simple: false,\n  plyr: null,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport Plyr from 'plyr';\nimport Measure from 'react-measure';\nimport { faComments } from '@fortawesome/free-solid-svg-icons';\nimport Persist from '../../utils/persist';\nimport 'plyr/src/sass/plyr.scss';\nimport { FAIcon } from '../../utils/fontawesome';\n\nexport default class Player extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ...Persist.load('Player', {\n        chatOverlay: true,\n      }),\n    };\n\n    this.ref = React.createRef();\n    this.overlay = document.createElement('div');\n    this.overlay.className = 'plyr-overlay';\n\n    this.onReady = this.onReady.bind(this);\n    this.onTimeUpdate = this.onTimeUpdate.bind(this);\n    this.onFullScreenEnter = this.onFullScreenEnter.bind(this);\n    this.onFullScreenExit = this.onFullScreenExit.bind(this);\n\n    this.firstTimeUpdate = true;\n    this.firstReady = true;\n  }\n\n  plyrOptions() {\n    return {\n      // Disable quality selection (doesn't work on YouTube)\n      settings: ['captions', /* 'quality', */ 'speed', 'loop'],\n      invertTime: false,\n      youtube: {\n        controls: 1,\n        fs: false,\n      },\n      keyboard: { global: true },\n    };\n  }\n\n  plyrSource() {\n    const { youtube, direct } = this.props;\n    const source = { type: 'video' };\n\n    if (youtube) {\n      source.sources = [{\n        provider: 'youtube',\n        src: youtube,\n      }];\n    } else {\n      source.sources = [{\n        type: 'video/mp4',\n        src: direct,\n      }];\n    }\n\n    return source;\n  }\n\n  addControlButton({\n    before = 'button[data-plyr=\"fullscreen\"]',\n    icon = faComments,\n    value = true,\n    onToggle = (state) => state,\n  }) {\n    const { controls } = this.plyr.elements;\n\n    const button = document.createElement('button');\n    [\n      'plyr__controls__item',\n      'plyr__control',\n      'plyr__control__custom',\n    ].forEach((i) => button.classList.add(i));\n\n    const node = document.createElement('span');\n    button.appendChild(node);\n    ReactDOM.render(<FAIcon icon={icon} />, node); // this works? nice\n\n    if (value) {\n      button.pressed = true;\n      button.classList.add('plyr__control--pressed');\n    } else {\n      button.pressed = false;\n    }\n\n    button.onclick = () => {\n      if (button.pressed) {\n        button.pressed = false;\n        button.classList.remove('plyr__control--pressed');\n      } else {\n        button.pressed = true;\n        button.classList.add('plyr__control--pressed');\n      }\n\n      onToggle(button.pressed);\n    };\n\n    const nextNode = controls.querySelector(before);\n    controls.insertBefore(button, nextNode);\n  }\n\n  onReady() {\n    const { onReady, autostart } = this.props;\n    const { chatOverlay } = this.state;\n    const { firstReady = true } = this;\n\n    if (firstReady) {\n      this.firstReady = false;\n\n      this.addControlButton({\n        before: '.plyr__menu',\n        icon: faComments,\n        value: chatOverlay,\n        onToggle: (value) => {\n          this.setState({ chatOverlay: value });\n        },\n      });\n\n      onReady(this.plyr);\n\n      if (autostart) {\n        this.plyr.play()?.catch(() => null);\n      }\n    }\n  }\n\n  onTimeUpdate() {\n    const {\n      forceStart,\n      start,\n      autostart,\n      end,\n      savedPositionAdapter: spa,\n    } = this.props;\n\n    const {\n      plyr,\n      firstReady = true,\n      firstTimeUpdate = true,\n      lastSave = 0,\n    } = this;\n\n    const time = plyr.currentTime;\n\n    if (!firstReady && firstTimeUpdate) {\n      this.firstTimeUpdate = false;\n\n      if (time < 1) {\n        if (autostart) {\n          plyr.currentTime = autostart;\n        } else if (spa && spa.exists()) {\n          plyr.currentTime = spa.get();\n        } else if (time < start) {\n          plyr.currentTime = start;\n        }\n      }\n    }\n\n    if (forceStart && time < start) {\n      plyr.currentTime = start;\n    }\n\n    if (end && time >= end) {\n      plyr.currentTime = end;\n      plyr.pause();\n    }\n\n    if (Math.abs(time - lastSave) >= 5) {\n      this.lastSave = time;\n      spa.set(time);\n    }\n  }\n\n  onFullScreenEnter() {\n    const { onFullScreen } = this.props;\n    onFullScreen(true);\n  }\n\n  onFullScreenExit() {\n    const { onFullScreen } = this.props;\n    onFullScreen(false);\n  }\n\n  spawnPlyr() {\n    const ref = this.ref.current;\n\n    const video = document.createElement('video');\n    ref.appendChild(video);\n\n    const plyr = new Plyr(video, this.plyrOptions());\n    this.plyr = plyr;\n\n    plyr.elements.container.appendChild(this.overlay);\n\n    plyr.source = this.plyrSource();\n    plyr.touch = false; // Force click and hover events on PCs with touchscreen\n\n    // YouTube ready\n    plyr.on('ready', (e) => {\n      const { direct } = this.props;\n      if (!direct) {\n        this.onReady(e);\n      }\n    });\n\n    // Direct ready\n    plyr.on('loadedmetadata', (e) => {\n      const { direct } = this.props;\n      if (direct) {\n        this.onReady(e);\n      }\n    });\n\n    plyr.on('timeupdate', this.onTimeUpdate);\n\n    // Fix instant pause by Plyr\n    plyr.on('statechange', (event) => {\n      if (event.detail.code === 1) plyr.play()?.catch(() => null);\n    });\n\n    plyr.on('playing', () => {\n      // Workaround for muted sound after seeking\n      if (!plyr.muted) {\n        plyr.muted = false;\n      }\n\n      // Workaround for volume desync\n      if (plyr.embed) {\n        plyr.volume = plyr.embed.getVolume() / 100;\n      }\n    });\n\n    plyr.on('enterfullscreen', this.onFullScreenEnter);\n    plyr.on('exitfullscreen', this.onFullScreenExit);\n  }\n\n  destroyPlyr() {\n    const { onDestroy } = this.props;\n    onDestroy();\n\n    this.plyr.destroy();\n\n    const ref = this.ref.current;\n    ref.removeChild(ref.querySelector('video'));\n  }\n\n  componentDidMount() {\n    this.spawnPlyr();\n  }\n\n  shouldComponentUpdate(prevProps, nextState) {\n    Persist.save('Player', this.state, nextState, [\n      'chatOverlay',\n    ]);\n\n    return true;\n  }\n\n  componentDidUpdate(prev) {\n    const { plyr, props: next } = this;\n\n    if (prev.youtube !== next.youtube || prev.direct !== next.direct) {\n      this.firstReady = true;\n      this.firstTimeUpdate = true;\n      plyr.source = this.plyrSource();\n    }\n  }\n\n  componentWillUnmount() {\n    this.destroyPlyr();\n  }\n\n  render() {\n    const { renderOverlay } = this.props;\n    const { chatOverlay } = this.state;\n\n    return (\n      <>\n        {ReactDOM.createPortal(\n          <Measure>\n            {({ contentRect: { entry }, measureRef }) => (\n              <div className=\"plyr-overlay\" ref={measureRef}>\n                {chatOverlay && renderOverlay(entry)}\n              </div>\n            )}\n          </Measure>,\n          this.overlay,\n        )}\n        <div ref={this.ref} className=\"plyr-row\" />\n      </>\n    );\n  }\n}\n\nPlayer.propTypes = {\n  youtube: PropTypes.string,\n  direct: PropTypes.string,\n  start: PropTypes.number,\n  autostart: PropTypes.number,\n  end: PropTypes.number,\n  forceStart: PropTypes.bool,\n  savedPositionAdapter: PropTypes.object,\n  onReady: PropTypes.func,\n  onDestroy: PropTypes.func,\n  onFullScreen: PropTypes.func,\n  renderOverlay: PropTypes.func,\n};\n\nPlayer.defaultProps = {\n  youtube: null,\n  direct: null,\n  start: 0,\n  autostart: null,\n  end: null,\n  forceStart: false,\n  savedPositionAdapter: null,\n  onReady: () => null,\n  onDestroy: () => null,\n  onFullScreen: () => null,\n  renderOverlay: () => null,\n};\n","import React, { useCallback, useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Collapse, ListGroup, ListGroupItem } from 'react-bootstrap';\nimport { faChevronDown, faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport { ptime } from '../../utils/time-utils';\nimport { FAIcon } from '../../utils/fontawesome';\nimport { usePlyrTime } from '../../hooks/use-plyr-time';\n\nconst TimecodeLink = ({ value, plyr }) => {\n  const valueInt = useMemo(() => ptime(value), [value]);\n  const visited = usePlyrTime(plyr, (t) => t >= valueInt) >= valueInt;\n\n  const handleClick = useCallback((e) => {\n    e.preventDefault();\n    if (!plyr) return;\n    plyr.currentTime = valueInt;\n    plyr.play()?.catch(() => null);\n  }, [plyr, valueInt]);\n\n  return (\n    // eslint-disable-next-line jsx-a11y/anchor-is-valid\n    <a\n      href=\"#\"\n      className={visited ? 'visited' : ''}\n      onClick={handleClick}\n    >\n      {value}\n    </a>\n  );\n};\n\nTimecodeLink.propTypes = {\n  value: PropTypes.string.isRequired,\n  plyr: PropTypes.object,\n};\n\nTimecodeLink.defaultProps = {\n  plyr: null,\n};\n\nconst DangerSpan = ({ children }) => (\n  <span dangerouslySetInnerHTML={{ __html: children }} />\n);\n\nexport const Timecodes = React.forwardRef(({ className, data, ...rest }, ref) => (\n  <ListGroup ref={ref} className={['timecodes-list', className].join(' ')}>\n    {Object.entries(data).map(([key, value]) => {\n      if (typeof value === 'string') { // regular timecode\n        if (key.indexOf('~') === -1) { // simple time\n          return (\n            <ListGroup.Item key={key}>\n              {<TimecodeLink value={key} {...rest} />}\n              {' — '}\n              <DangerSpan>{value}</DangerSpan>\n            </ListGroup.Item>\n          );\n        } else { // time range\n          const [start, end] = key.split('~');\n\n          return (\n            <ListGroup.Item key={key}>\n              {<TimecodeLink value={start} {...rest} />}\n              {' - '}\n              {<TimecodeLink value={end} {...rest} />}\n              {' — '}\n              <DangerSpan>{value}</DangerSpan>\n            </ListGroup.Item>\n          );\n        }\n      } else if (Array.isArray(value)) {\n        const links = value\n          .map((t) => {\n            if (t.indexOf('~') === -1) { // simple time\n              return <TimecodeLink key={t} value={t} {...rest} />;\n            } else { // time range\n              const [start, end] = t.split('~');\n              return (\n                <span key={t}>\n                  {<TimecodeLink value={start} {...rest} />}\n                  {' - '}\n                  {<TimecodeLink value={end} {...rest} />}\n                </span>\n              );\n            }\n          })\n          .reduce((prev, curr) => [prev, ', ', curr]);\n\n        return (\n          <ListGroup.Item key={value.join()}>\n            {links}\n            {' — '}\n            <DangerSpan>{key}</DangerSpan>\n          </ListGroup.Item>\n        );\n      } else { // nested timecode\n        return (\n          <NestedTimecodes\n            key={key}\n            name={key}\n            data={value}\n            {...rest}\n          />\n        );\n      }\n    })}\n  </ListGroup>\n));\n\nTimecodes.propTypes = {\n  className: PropTypes.string,\n  plyr: PropTypes.object,\n  data: PropTypes.object.isRequired,\n};\n\nTimecodes.defaultProps = {\n  className: '',\n  plyr: null,\n};\n\nconst NestedTimecodes = ({ name, level, ...rest }) => {\n  const [open, setOpen] = useState(true);\n  const toggleState = useCallback(() => setOpen(!open), [open]);\n\n  return (\n    <>\n      <ListGroupItem\n        className=\"d-flex\"\n        action\n        onClick={toggleState}\n      >\n        <FAIcon icon={open ? faChevronDown : faChevronRight} />\n        <b>{name}</b>\n      </ListGroupItem>\n      <Collapse in={open}>\n        <Timecodes\n          className={`timecodes-nested-${level}`}\n          level={level + 1}\n          {...rest}\n        />\n      </Collapse>\n    </>\n  );\n};\n\nNestedTimecodes.propTypes = {\n  name: PropTypes.string.isRequired,\n  level: PropTypes.number,\n};\n\nNestedTimecodes.defaultProps = {\n  level: 0,\n};\n","import PropTypes from 'prop-types';\n\nexport const Segment = PropTypes.shape({\n  segment: PropTypes.string,\n\n  name: PropTypes.string,\n  note: PropTypes.string,\n  date: PropTypes.objectOf(Date),\n  games: PropTypes.arrayOf(PropTypes.string),\n  streams: PropTypes.arrayOf(PropTypes.string),\n  official: PropTypes.bool,\n\n  youtube: PropTypes.string,\n  direct: PropTypes.string,\n  torrent: PropTypes.string,\n  thumbnail: PropTypes.string,\n  url: PropTypes.string,\n\n  abs_start: PropTypes.number,\n  abs_end: PropTypes.number,\n  duration: PropTypes.number,\n});\n\nexport const SubRef = PropTypes.shape({\n  name: PropTypes.string.isRequired,\n  start: PropTypes.number,\n});\n\nexport const SegmentRef = PropTypes.shape({\n  name: PropTypes.string, // combined names of subrefs\n  start: PropTypes.number, // from first subref\n  segment: PropTypes.string,\n  original: Segment,\n  url: PropTypes.string,\n  subrefs: PropTypes.arrayOf(SubRef),\n});\n\nexport const Game = PropTypes.shape({\n  id: PropTypes.string,\n  name: PropTypes.string,\n  category: PropTypes.string,\n  streams: PropTypes.arrayOf(SegmentRef),\n});\n\nSegmentRef.game = Game; // Hmm...\n\nexport const Category = PropTypes.shape({\n  id: PropTypes.string,\n  name: PropTypes.string,\n});\n\nexport const IndexEntry = PropTypes.shape({\n  name: PropTypes.string,\n  segment: PropTypes.string,\n  start: PropTypes.number,\n  category: Category,\n  original: Game,\n  segments: PropTypes.arrayOf(Segment),\n  url: PropTypes.string,\n  streams: PropTypes.number,\n  date: PropTypes.objectOf(Date),\n});\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Badge, Button, Collapse, InputGroup, ListGroup } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { Resizable } from 're-resizable';\nimport { faArrowLeft, faArrowRight } from '@fortawesome/free-solid-svg-icons';\nimport SugarDate from '../../utils/sugar';\nimport { Game, Segment } from '../../data-types';\nimport { Scroll } from '../scroll';\nimport { FAIcon } from '../../utils/fontawesome';\n\nconst BUTTON_STYLE = { variant: 'dark', size: 'sm' };\n\nconst SegmentRefList = ({ game, currentSegment, contentKey }) => (\n  <Scroll className=\"h-100\" scrollTo=\".active\" scrollDelay={100} contentKey={contentKey}>\n    <ListGroup className=\"playlist-streams separator-v\">\n      {game.streams.map((segmentRef) => (\n        <ListGroup.Item\n          key={segmentRef.segment}\n          as={Link}\n          to={segmentRef.url}\n          action\n          active={segmentRef.original === currentSegment}\n          className=\"playlist-streams-item\"\n        >\n          <span className=\"flex-grow-1\">{segmentRef.name}</span>\n          <span>\n            <Badge pill bg=\"dark\">\n              {SugarDate.format(segmentRef.original.date, '{dd}.{MM}')}\n              <br />\n              {segmentRef.original.date.getFullYear()}\n            </Badge>\n          </span>\n        </ListGroup.Item>\n      ))}\n    </ListGroup>\n  </Scroll>\n);\n\nSegmentRefList.propTypes = {\n  game: Game.isRequired,\n  currentSegment: Segment.isRequired,\n  contentKey: PropTypes.any,\n};\n\nSegmentRefList.defaultProps = {\n  contentKey: null,\n};\n\nconst CollapseWrapper = ({ open, children }) => (\n  <Collapse in={open}>\n    <div>\n      <Resizable defaultSize={{ height: '30vh' }} enable={{ bottom: true }}>\n        {children}\n      </Resizable>\n    </div>\n  </Collapse>\n);\n\nCollapseWrapper.propTypes = {\n  open: PropTypes.bool.isRequired,\n};\n\nexport const Playlist = ({ games, game, segment, autoExpand, fullHeight }) => {\n  const [currentGame, setGame] = useState(game);\n  const [open, setOpen] = useState(autoExpand);\n\n  const activeIndex = games.indexOf(currentGame);\n  const prevItem = activeIndex !== 0 && games[activeIndex - 1];\n  const nextItem = activeIndex !== games.length - 1 && games[activeIndex + 1];\n\n  return (\n    <>\n      <InputGroup className=\"d-flex flex-row playlist-header separator-h\">\n        <Button\n          onClick={() => setGame(prevItem)}\n          disabled={!prevItem}\n          {...BUTTON_STYLE}\n        >\n          <FAIcon icon={faArrowLeft} />\n        </Button>\n        <Button\n          onClick={() => setOpen(!open)}\n          className=\"flex-1-0-0\"\n          disabled={fullHeight}\n          {...BUTTON_STYLE}\n        >\n          {currentGame.name}\n        </Button>\n        <Button\n          onClick={() => setGame(nextItem)}\n          disabled={!nextItem}\n          {...BUTTON_STYLE}\n        >\n          <FAIcon icon={faArrowRight} />\n        </Button>\n      </InputGroup>\n\n      {fullHeight ? (\n        <SegmentRefList\n          game={currentGame}\n          currentSegment={segment}\n          contentKey={currentGame.id}\n        />\n      ) : (\n        <CollapseWrapper open={open}>\n          <SegmentRefList\n            game={currentGame}\n            currentSegment={segment}\n            contentKey={currentGame.id + open}\n          />\n        </CollapseWrapper>\n      )}\n    </>\n  );\n};\n\nPlaylist.propTypes = {\n  games: PropTypes.arrayOf(Game).isRequired,\n  game: Game.isRequired,\n  segment: Segment.isRequired,\n  autoExpand: PropTypes.bool,\n  fullHeight: PropTypes.bool,\n};\n\nPlaylist.defaultProps = {\n  autoExpand: false,\n  fullHeight: false,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Source: https://github.com/facebook/react/issues/13044#issuecomment-428815909\n */\nexport default class Reparentable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n  }\n\n  componentDidMount() {\n    const { el } = this.props;\n    const ref = this.ref.current;\n\n    if (ref) {\n      ref.appendChild(el);\n    }\n  }\n\n  render() {\n    const { el, ...otherProps } = this.props;\n    return <div ref={this.ref} {...otherProps} />;\n  }\n}\n\nReparentable.propTypes = {\n  el: PropTypes.object.isRequired,\n};\n","import update from 'immutability-helper';\n\nfunction updateState(obj, spec, callback) {\n  obj.setState(update(obj.state, spec), callback);\n}\n\nexport default updateState;\n","import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Col, Form, InputGroup, Pagination, Popover, Row, Spinner } from 'react-bootstrap';\nimport { faCopy } from '@fortawesome/free-solid-svg-icons';\nimport { getBaseSegment } from '../../utils/data-utils';\nimport { Data } from '../../data';\nimport { ftime } from '../../utils/time-utils';\nimport { FAIcon } from '../../utils/fontawesome';\nimport { Segment } from '../../data-types';\nimport { usePlyrTime } from '../../hooks/use-plyr-time';\n\nconst getShortLink = (segment, at) => (\n  // eslint-disable-next-line prefer-template\n  'https://bsu.drhx.ru/r/'\n  + segment.segment\n  + (at ? `?at=${at}` : '')\n);\n\nconst getMpvCommand = (segment, t) => (\n  [\n    'mpv',\n    (segment.subtitles ? `--sub-file=${new URL(segment.subtitles, window.location.href)}` : ''),\n    (segment.abs_start !== 0 ? `--sub-delay=${-segment.abs_start}` : ''),\n    (t ? `--start=${t}` : ''),\n    (segment.end ? `--end=${segment.end}` : ''),\n    (segment.youtube ? `ytdl://${segment.youtube}` : segment.direct),\n  ].filter((x) => x).join(' ')\n);\n\nconst Mode = {\n  link: 'Ссылка',\n  chat: 'Чат',\n  mpv: 'MPV',\n};\n\nconst ModeSelector = ({ mode, onChange }) => (\n  <Pagination size=\"sm\" className=\"d-flex mb-0\">\n    {Object.entries(Mode).map(([key, value]) => (\n      <Pagination.Item\n        key={key}\n        active={mode === key}\n        onClick={() => onChange(key)}\n        className=\"flex-1-0-0\"\n      >\n        {value}\n      </Pagination.Item>\n    ))}\n  </Pagination>\n);\n\nModeSelector.propTypes = {\n  mode: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst ShareOverlay = React.forwardRef(({ segment, plyr, ...otherProps }, ref) => {\n  const inputRef = useRef();\n  const time = Math.floor(usePlyrTime(plyr, (t) => Math.round(t)));\n  const [mode, setMode] = useState('link');\n  const [segments, setSegments] = useState(null);\n  const [includeTime, setIncludeTime] = useState(time > 0);\n\n  useEffect(() => {\n    Data.then(({ segments: s }) => setSegments(s));\n  }, []);\n\n  if (!segments) {\n    return (\n      <Popover ref={ref} {...otherProps} className=\"share-popover\">\n        <Popover.Header as=\"h3\">Создать короткую ссылку</Popover.Header>\n        <Popover.Body className=\"d-flex justify-content-center\">\n          <Spinner animation=\"border\" />\n        </Popover.Body>\n      </Popover>\n    );\n  }\n\n  const [base, absTime] = getBaseSegment(segments, segment, time);\n\n  let value;\n\n  switch (mode) {\n    case 'link':\n      value = getShortLink(\n        (!includeTime && segment.segment.indexOf('.') !== -1) ? segment : base,\n        includeTime && absTime,\n      );\n      break;\n\n    case 'mpv':\n      value = getMpvCommand(segment, includeTime && time);\n      break;\n\n    case 'chat':\n      value = `!запись ${base.segment}${includeTime ? (` ${absTime}`) : ''}`;\n      break;\n\n    default:\n      value = '';\n  }\n\n  return (\n    <Popover ref={ref} {...otherProps} className=\"share-popover\">\n      <Popover.Header as=\"h3\">Создать короткую ссылку</Popover.Header>\n      <Popover.Body>\n        <Row>\n          <Col>\n            <InputGroup>\n              <Form.Control\n                ref={inputRef}\n                readOnly\n                value={value}\n                size=\"sm\"\n              />\n              <Button\n                variant=\"dark\"\n                size=\"sm\"\n                onClick={() => {\n                  const input = inputRef.current;\n\n                  if (input) {\n                    input.select();\n                    input.setSelectionRange(0, 200);\n                    document.execCommand('copy');\n                  }\n                }}\n              >\n                <FAIcon icon={faCopy} />\n              </Button>\n            </InputGroup>\n          </Col>\n        </Row>\n\n        <Row className=\"mt-2\">\n          <Col className=\"d-flex align-content-center\">\n            <Form.Check\n              className=\"me-auto\"\n              type=\"checkbox\"\n              label=\"Начать с таймкода: \"\n              checked={includeTime}\n              onChange={({ target: { checked } }) => setIncludeTime(checked)}\n            />\n\n            <Form.Control\n              className=\"time-selector\"\n              value={ftime(time)}\n              size=\"sm\"\n              readOnly\n              htmlSize={4}\n            />\n          </Col>\n        </Row>\n\n        <Row className=\"mt-2\">\n          <Col><ModeSelector mode={mode} onChange={setMode} /></Col>\n        </Row>\n      </Popover.Body>\n    </Popover>\n  );\n});\n\nShareOverlay.propTypes = {\n  segment: Segment.isRequired,\n  plyr: PropTypes.object,\n};\n\nShareOverlay.defaultProps = {\n  plyr: null,\n};\n\nexport { ShareOverlay };\n","export const isPrerender = navigator.userAgent.toLowerCase().indexOf('prerender') !== -1;\n\nexport const NoPrerender = ({ children }) => !isPrerender && children;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  Button,\n  Col,\n  ListGroup,\n  OverlayTrigger,\n  Ratio,\n  Row,\n  Tab,\n  Tabs,\n  Tooltip,\n} from 'react-bootstrap';\nimport { Helmet } from 'react-helmet-async';\nimport { Link } from 'react-router-dom';\nimport MediaQuery from 'react-responsive';\nimport { Rnd } from 'react-rnd';\nimport { faCaretSquareLeft, faCaretSquareRight, faCheckCircle, faDownload, faExclamationCircle, faExpand, faMaximize, faShareSquare } from '@fortawesome/free-solid-svg-icons';\nimport { faTwitch, faYoutube } from '@fortawesome/free-brands-svg-icons';\nimport { Data } from '../data';\nimport SavedPosition from '../utils/saved-position';\nimport Persist from '../utils/persist';\nimport { Chat } from './chat';\nimport Player from './player/player';\nimport { Timecodes } from './player/timecodes';\nimport { Scroll } from './scroll';\nimport { Playlist } from './player/playlist';\nimport Reparentable from './utils/reparentable';\nimport SugarDate from '../utils/sugar';\nimport ErrorPage from '../pages/error-page';\nimport updateState from '../utils/update-state';\nimport { findRefBySegment, resolveGame, resolveSegment } from '../utils/data-utils';\nimport { ShareOverlay } from './player/share-overlay';\nimport { Layout } from '.';\nimport { FAIcon } from '../utils/fontawesome';\nimport { NoPrerender } from '../utils/prerender';\n\nexport default class SegmentPlayer extends React.Component {\n  createChatContainer() {\n    const chatContainer = document.createElement('div');\n\n    chatContainer.style.height = '100%';\n    chatContainer.style.display = 'flex';\n    chatContainer.style.flexDirection = 'column';\n\n    return chatContainer;\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loaded: false,\n      error: false,\n      fullscreen: false,\n      segment: null,\n      segmentRef: null,\n      relatedGames: null,\n      timecodes: null,\n      plyr: null,\n      toggleFullscreen: () => null,\n      ...Persist.load('SegmentPlayer', {\n        chatOverlay: {\n          width: null,\n          height: null,\n          x: null,\n          y: null,\n        },\n        sidebarCollapsed: false,\n      }),\n    };\n\n    this.toggleSidebar = this.toggleSidebar.bind(this);\n    this.renderPlayerOverlay = this.renderPlayerOverlay.bind(this);\n\n    this.chatContainer = this.createChatContainer();\n  }\n\n  resolveUrl({ segments, games }) {\n    const { location: { search: reqSearch } } = this.props;\n    const search = new URLSearchParams(reqSearch);\n    const paramAt = search.has('at') ? +search.get('at') : null;\n\n    let {\n      match: {\n        params: {\n          game: gameId,\n          segment: segmentId,\n        },\n      },\n    } = this.props;\n\n    const [segment, at, t] = resolveSegment(segments, segmentId, paramAt);\n    const autostart = t;\n\n    if (!segment) {\n      return null;\n    }\n\n    let redirect = segment.segment !== segmentId;\n\n    segmentId = segment.segment;\n\n    let game = games.by('id', gameId);\n    let segmentRef;\n\n    // Handle missing or unknown game\n    if (!game || segment.games.indexOf(gameId) === -1) {\n      [game, segmentRef] = resolveGame(games, segment, at);\n      gameId = game.id;\n      redirect = true;\n    } else {\n      segmentRef = findRefBySegment(game, segment);\n    }\n\n    let newUrl = `/play/${gameId}/${segment.segment}`;\n    if (at) {\n      newUrl += `?at=${at}`;\n    }\n\n    return {\n      segment,\n      game,\n      segmentRef,\n      autostart,\n      redirect: redirect && newUrl,\n    };\n  }\n\n  loadData() {\n    Data.then(({ segments, timecodes, games }) => {\n      const { history } = this.props;\n      const request = this.resolveUrl({ segments, games });\n\n      if (!request) {\n        this.setState({ error: true });\n        return;\n      }\n\n      if (request.redirect) {\n        history.replace(request.redirect);\n      }\n\n      const {\n        game,\n        segment,\n        segmentRef,\n        autostart,\n      } = request;\n\n      let relatedGames = segment.games.map((gameId) => games.by('id', gameId));\n\n      if (relatedGames.length === 0) {\n        relatedGames = null;\n      }\n\n      this.setState({\n        loaded: true,\n        error: false,\n        segment,\n        game,\n        segmentRef,\n        relatedGames,\n        autostart,\n        savedPositionAdapter: new SavedPosition(segment),\n      });\n\n      timecodes.then((data) => {\n        this.setState({\n          timecodes: data[segment.segment],\n        });\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  shouldComponentUpdate(prevProps, nextState) {\n    Persist.save('SegmentPlayer', this.state, nextState, [\n      'chatOverlay',\n      'sidebarCollapsed',\n    ]);\n\n    return true;\n  }\n\n  componentDidUpdate(prevProps) {\n    const { match: { params } } = this.props;\n    const { match: { params: prevParams } } = prevProps;\n\n    if (params.segment !== prevParams.segment) {\n      this.loadData();\n    } else if (params.game !== prevParams.game) {\n      this.loadData();\n    }\n  }\n\n  toggleSidebar() {\n    const { sidebarCollapsed } = this.state;\n\n    if (!sidebarCollapsed) { // collapse immediately\n      const { pointerEvents } = document.body.style;\n\n      // release focus\n      document.activeElement.blur();\n\n      // release hover for 100ms\n      document.body.style.pointerEvents = 'none';\n      setTimeout(() => {\n        document.body.style.pointerEvents = pointerEvents;\n      }, 100);\n    }\n\n    this.setState({ sidebarCollapsed: !sidebarCollapsed });\n  }\n\n  renderPlayer() {\n    const {\n      segmentRef: {\n        end,\n        force_start: forceStart,\n      },\n      segment: {\n        youtube, direct,\n      },\n      autostart,\n      savedPositionAdapter,\n    } = this.state;\n\n    const playerProps = {\n      youtube,\n      direct,\n      start: autostart,\n      autostart,\n      end,\n      forceStart,\n      savedPositionAdapter,\n      onReady: (plyr) => {\n        this.setState({\n          plyr,\n          toggleFullscreen: (forceFallback = false) => {\n            plyr.fullscreen.forceFallback = forceFallback;\n            plyr.fullscreen.toggle();\n          },\n        });\n      },\n      onFullScreen: (fullscreen) => this.setState({ fullscreen }),\n      onDestroy: () => this.setState({\n        plyr: null,\n        toggleFullscreen: () => null,\n      }),\n      renderOverlay: this.renderPlayerOverlay,\n    };\n\n    return (\n      <Row>\n        <Col>\n          <Ratio aspectRatio=\"16x9\">\n            <NoPrerender>\n              <Player {...playerProps} />\n            </NoPrerender>\n          </Ratio>\n        </Col>\n      </Row>\n    );\n  }\n\n  renderPlayerOverlay({ width, height }) {\n    const {\n      fullscreen,\n      segment: {\n        subtitles,\n      },\n      chatOverlay: ol,\n    } = this.state;\n\n    if (!fullscreen || !subtitles) {\n      return null;\n    }\n\n    return (\n      <Rnd\n        className=\"chat-overlay\"\n        position={{\n          x: ol.x !== null ? ol.x * width : 0,\n          y: ol.y !== null ? ol.y * height : 0.65 * height,\n        }}\n        minWidth=\"100px\"\n        minHeight=\"100px\"\n        size={{\n          width: ol.width ? `${ol.width * 100}%` : '35%',\n          height: ol.height ? `${ol.height * 100}%` : '35%',\n        }}\n        onDragStop={(e, { x, y }) => {\n          updateState(this, {\n            chatOverlay: {\n              $merge: {\n                x: x / width,\n                y: y / height,\n              },\n            },\n          });\n        }}\n        onResizeStop={(e, direction, ref, delta, position) => {\n          updateState(this, {\n            chatOverlay: {\n              $merge: {\n                width: ref.offsetWidth / width,\n                height: ref.offsetHeight / height,\n                x: position.x / width,\n                y: position.y / height,\n              },\n            },\n          });\n        }}\n        bounds=\"parent\"\n      >\n        {this.renderChat()}\n      </Rnd>\n    );\n  }\n\n  renderPlayerControls() {\n    const {\n      toggleFullscreen,\n      segment,\n      plyr,\n    } = this.state;\n\n    const {\n      segment: segmentId,\n      youtube,\n      official,\n      torrent,\n    } = segment;\n\n    return (\n      <Row className=\"g-0\">\n        <Col>\n          <div className=\"player-controls border-top border-bottom\">\n            <div className=\"label me-2 d-none d-xxl-block\">Смотреть на:</div>\n\n            {!segmentId.startsWith('00') && (\n              <Button variant=\"dark\" size=\"sm\" className=\"me-2\" href={`https://twitch.tv/videos/${segmentId}`} target=\"blank\">\n                <FAIcon icon={faTwitch} />\n                <span>Twitch</span>\n              </Button>\n            )}\n\n            {youtube && (\n              <Button\n                href={`https://youtu.be/${youtube}`}\n                target=\"blank\"\n                variant=\"dark\"\n                size=\"sm\"\n                className=\"me-2\"\n              >\n                <FAIcon icon={faYoutube} />\n                <span>Youtube</span>\n                <OverlayTrigger\n                  placement=\"top\"\n                  overlay={(\n                    <Tooltip>\n                      {official === false ? 'Неофициальный канал' : 'Официальный канал'}\n                    </Tooltip>\n                  )}\n                >\n                  <FAIcon\n                    icon={official === false ? faExclamationCircle : faCheckCircle}\n                    className={official === false ? 'text-warning' : 'text-success'}\n                  />\n                </OverlayTrigger>\n              </Button>\n            )}\n\n            {torrent && (\n              <Button\n                href={torrent}\n                variant=\"dark\"\n                size=\"sm\"\n                className=\"me-2\"\n              >\n                <FAIcon icon={faDownload} />\n                <span className=\"d-none d-xl-inline\">Торрент</span>\n              </Button>\n            )}\n\n            <div className=\"flex-grow-1\" />\n\n            <OverlayTrigger\n              trigger=\"click\"\n              rootClose\n              placement=\"top\"\n              overlay={(\n                <ShareOverlay\n                  segment={segment}\n                  plyr={plyr}\n                />\n              )}\n            >\n              <Button variant=\"dark\" size=\"sm\" className=\"me-2\">\n                <FAIcon icon={faShareSquare} />\n                <span className=\"d-none d-xl-inline\">Поделиться</span>\n              </Button>\n            </OverlayTrigger>\n\n            <OverlayTrigger\n              placement=\"top\"\n              overlay={(props) => (\n                <Tooltip {...props}>\n                  Оставить в окне только плеер, но не переходить в полноэкранный режим\n                </Tooltip>\n              )}\n            >\n              <Button variant=\"dark\" size=\"sm\" onClick={() => toggleFullscreen(true)} className=\"me-2\">\n                <FAIcon icon={faMaximize} />\n                <span className=\"d-none d-lg-inline\">На всё окно</span>\n              </Button>\n            </OverlayTrigger>\n\n            <OverlayTrigger\n              placement=\"top\"\n              overlay={(props) => (\n                <Tooltip {...props}>\n                  Развернуть плеер на весь экран\n                </Tooltip>\n              )}\n            >\n              <Button variant=\"dark\" size=\"sm\" onClick={() => toggleFullscreen(false)}>\n                <FAIcon icon={faExpand} />\n                <span className=\"d-none d-lg-inline\">На весь экран</span>\n              </Button>\n            </OverlayTrigger>\n          </div>\n        </Col>\n      </Row>\n    );\n  }\n\n  renderChat() {\n    const {\n      fullscreen,\n      plyr,\n      segment: {\n        subtitles,\n        abs_start: absStart,\n      },\n    } = this.state;\n\n    const header = (\n      <div className=\"sidebar-header\">\n        Чат\n      </div>\n    );\n\n    if (!subtitles) {\n      return (\n        <>\n          {header}\n          <div className=\"p-4 flex-grow-1 align-self-center text-white\">\n            Для этого стрима нет записи чата :(\n          </div>\n        </>\n      );\n    }\n\n    return (\n      <NoPrerender>\n        {!fullscreen && header}\n        <Chat\n          plyr={plyr}\n          offset={-absStart}\n          subtitles={subtitles}\n          simple={fullscreen}\n        />\n      </NoPrerender>\n    );\n  }\n\n  renderTimecodes() {\n    const { timecodes, plyr } = this.state;\n\n    return (\n      <>\n        <div className=\"sidebar-header\">\n          Таймкоды\n        </div>\n        <Scroll className=\"flex-1-1-0\">\n          <Timecodes\n            data={timecodes}\n            plyr={plyr}\n          />\n        </Scroll>\n      </>\n    );\n  }\n\n  renderPlaylist({ autoExpand = false, fullHeight = false } = {}) {\n    const {\n      segment,\n      game,\n      relatedGames,\n    } = this.state;\n\n    if (!relatedGames) return null;\n\n    return (\n      <>\n        <div className=\"sidebar-header\">\n          Плейлист\n        </div>\n        <Playlist\n          games={relatedGames}\n          game={game}\n          segment={segment}\n          {...{ autoExpand, fullHeight }}\n        />\n      </>\n    );\n  }\n\n  renderLeftSidebar() {\n    const {\n      sidebarCollapsed,\n      timecodes,\n      relatedGames,\n      segment: {\n        subtitles,\n      },\n    } = this.state;\n\n    const leftSidebarClasses = [\n      'col-sidebar-narrow border-end',\n      sidebarCollapsed ? 'collapsed' : '',\n    ].join(' ');\n\n    if (!subtitles) { // move all content to right sidebar\n      return null;\n    }\n\n    return (\n      <>\n        {(timecodes || relatedGames) && (\n          <MediaQuery minDeviceWidth={1200}>\n            <Col className={leftSidebarClasses} tabIndex=\"0\">\n              <div className=\"content\">\n                <div className=\"sidebar-row-overlay flex-row-reverse\">\n                  <Button\n                    variant=\"link\"\n                    size=\"sm\"\n                    onClick={this.toggleSidebar}\n                  >\n                    <FAIcon icon={sidebarCollapsed ? faCaretSquareRight : faCaretSquareLeft} />\n                  </Button>\n                </div>\n\n                {relatedGames && this.renderPlaylist()}\n                {timecodes && this.renderTimecodes()}\n              </div>\n\n              <div className=\"collapsed-content\">\n                {relatedGames && (\n                  <div className=\"sidebar-header\">Плейлист</div>\n                )}\n                {timecodes && (\n                  <div className=\"sidebar-header\">Таймкоды</div>\n                )}\n              </div>\n            </Col>\n          </MediaQuery>\n        )}\n\n        {(timecodes || relatedGames) && (\n          <MediaQuery minDeviceWidth={768} maxDeviceWidth={1199}>\n            <Col className=\"col-sidebar-narrow collapsed\" tabIndex=\"0\">\n              <div className=\"content border-end\">\n                {relatedGames && this.renderPlaylist()}\n                {timecodes && this.renderTimecodes()}\n              </div>\n\n              <div className=\"collapsed-content\">\n                {relatedGames && (\n                  <div className=\"sidebar-header\">Плейлист</div>\n                )}\n                {timecodes && (\n                  <div className=\"sidebar-header\">Таймкоды</div>\n                )}\n              </div>\n            </Col>\n          </MediaQuery>\n        )}\n      </>\n    );\n  }\n\n  renderRightSidebar() {\n    const {\n      chatContainer,\n      state: {\n        fullscreen,\n        relatedGames,\n        timecodes,\n        segment: {\n          subtitles,\n        },\n      },\n    } = this;\n\n    if (!subtitles && !relatedGames && !timecodes) {\n      return null;\n    }\n\n    return (\n      <MediaQuery minDeviceWidth={768}>\n        <Col className=\"col-sidebar-wide border-start\">\n          {(subtitles && !fullscreen) && (\n            <Reparentable el={chatContainer} className=\"flex-1-1-0\" />\n          )}\n          {(!subtitles && relatedGames) && this.renderPlaylist()}\n          {(!subtitles && timecodes) && this.renderTimecodes()}\n        </Col>\n      </MediaQuery>\n    );\n  }\n\n  renderDescription() {\n    const {\n      game,\n      segment,\n      segmentRef,\n    } = this.state;\n\n    return (\n      <Row className=\"stream-description\">\n        <Col>\n          <h3>\n            <Link to={`/play/${game.id}`}>{game.name}</Link>\n            <span> — </span>\n            <span className=\"flex-grow-1\">{segmentRef.name}</span>\n          </h3>\n\n          <ListGroup variant=\"flush\" size=\"sm\">\n            <ListGroup.Item>\n              Дата стрима:\n              {' '}\n              {SugarDate.medium(segment.date)}\n              {' '}\n              ({SugarDate.relative(segment.date)})\n            </ListGroup.Item>\n\n            {(segment.note && (\n              <ListGroup.Item\n                dangerouslySetInnerHTML={{ __html: segment.note }}\n              />\n            ))}\n          </ListGroup>\n        </Col>\n      </Row>\n    );\n  }\n\n  renderBelowPlayer() {\n    const {\n      chatContainer,\n      state: {\n        fullscreen,\n        relatedGames,\n        timecodes,\n        segment: {\n          subtitles,\n        },\n      },\n    } = this;\n\n    return (\n      <>\n        <MediaQuery minDeviceWidth={768}>\n          {this.renderDescription()}\n        </MediaQuery>\n\n        <MediaQuery maxDeviceWidth={767}>\n          <MediaQuery maxDeviceWidth={575}>\n            {(subtitlesInTab) => (\n              <Row className=\"flex-grow-1 flex-shrink-1 g-0\">\n                <Col className=\"sidebar-content\">\n                  <Tabs mountOnEnter>\n                    <Tab eventKey=\"description\" title=\"Описание\">\n                      {!subtitlesInTab ? (\n                        <Scroll className=\"flex-1-1-0\">\n                          {this.renderDescription()}\n                        </Scroll>\n                      ) : this.renderDescription()}\n                    </Tab>\n\n                    {timecodes && (\n                      <Tab eventKey=\"timecodes\" title=\"Таймкоды\">\n                        {this.renderTimecodes()}\n                      </Tab>\n                    )}\n\n                    {relatedGames && (\n                      <Tab eventKey=\"playlist\" title=\"Плейлист\" unmountOnExit>\n                        {this.renderPlaylist({\n                          autoExpand: true,\n                          fullHeight: true,\n                        })}\n                      </Tab>\n                    )}\n\n                    {subtitles && subtitlesInTab && (\n                      <Tab eventKey=\"chat\" title=\"Чат\">\n                        {!fullscreen && (\n                          <Reparentable el={chatContainer} className=\"flex-1-1-0\" />\n                        )}\n                      </Tab>\n                    )}\n                  </Tabs>\n                </Col>\n\n                {subtitles && !subtitlesInTab && (\n                  <Col className=\"sidebar-content border-start\">\n                    {!fullscreen && (\n                      <Reparentable el={chatContainer} className=\"flex-1-1-0\" />\n                    )}\n                  </Col>\n                )}\n              </Row>\n            )}\n          </MediaQuery>\n        </MediaQuery>\n      </>\n    );\n  }\n\n  render() {\n    const { loaded, error } = this.state;\n\n    if (error) {\n      return <ErrorPage />;\n    }\n\n    if (!loaded) {\n      return <Layout fluid flex withFooter={false} isLoading />;\n    }\n\n    const {\n      chatContainer,\n      state: {\n        segment: {\n          subtitles,\n          thumbnail,\n          date,\n        },\n        segmentRef: {\n          name: refName,\n        },\n        game: {\n          name: gameName,\n        },\n      },\n    } = this;\n\n    const title = `${refName} | ${gameName}`;\n\n    return (\n      <Layout fluid flex withFooter={false} title={title}>\n        <Helmet>\n          <meta\n            property=\"og:description\"\n            content={`Запись стрима от ${SugarDate.medium(date)}`}\n          />\n          {thumbnail.startsWith('http') && (\n            <meta property=\"og:image\" content={thumbnail} />\n          )}\n        </Helmet>\n\n        {subtitles && ReactDOM.createPortal(this.renderChat(), chatContainer)}\n\n        <Row className=\"flex-grow-1 g-0\">\n          {this.renderLeftSidebar()}\n\n          <Col className=\"d-flex flex-column\">\n            {this.renderPlayer()} {/* Can't be moved without reloading */}\n            {this.renderPlayerControls()}\n            {this.renderBelowPlayer()}\n          </Col>\n\n          {this.renderRightSidebar()}\n        </Row>\n      </Layout>\n    );\n  }\n}\n","import { useCallback, useState } from 'react';\n\nexport const useComplexState = (initValue) => {\n  const [value, setValue] = useState(initValue);\n  const changeState = useCallback((input) => (\n    setValue((current) => (\n      { ...current, ...input }\n    ), [])\n  ));\n  return [value, changeState];\n};\n"],"names":["resume","JSON","parse","localStorage","getItem","SavedPosition","segment","this","streams","offsets","abs_start","t","match","Math","round","zip","forEach","stream","offset","setItem","stringify","last","map","id","i","filter","x","Number","isNaN","length","Persist","name","state","nextState","keys","nextData","data","key","shallowequal","defaultValue","merge","TypeMessage","PropTypes","$loki","time","user","text","color","hidden","TypeEmotes","pattern","src","PACKED_WORDS","ChatMessage","message","emotes","unpackMessages","showHidden","showEmotes","body","useMemo","res","replace","a","b","c","repeat","trimEnd","split","word","alt","className","ListGroupItem","style","propTypes","isRequired","defaultProps","LINE_BREAK","loadSubtitles","url","db","Loki","addCollection","indices","fetch","then","lines","firstLine","line","startsWith","Error","substring","parts","slice","join","userStr","msgParts","ptime","insert","Scroll","children","keepAtBottom","scrollTo","scrollDelay","contentKey","scrollRef","useRef","useState","manualScroll","setManualScroll","outerHeight","setOuterHeight","scrollToSelector","selector","scroll","current","node","innerContainerRef","querySelector","setTimeout","updateScrollPosition","offsetTop","onResize","useCallback","forceUpdate","onOuterResize","entry","height","onScroll","target","scrollTop","scrollTopMax","useEffect","outerMeasureRef","measureRef","ref","display","flexDirection","flex","ChatSettings","onChange","OverlayTrigger","placement","overlay","props","Tooltip","Button","variant","size","onClick","icon","faRobot","Spinner","animation","faSmile","faFileArchive","usePlyrTime","plyr","hash","getTime","currentTime","timeRef","setTime","callback","newTime","on","off","Chat","subtitles","simple","error","setError","setData","setEmotes","useComplexState","load","settings","updateSettings","borders","left","right","floor","save","Object","catch","e","clear","json","RegExp","role","query","$eq","messages","chain","find","$lte","simplesort","lastMsg","nextMsg","$gt","limit","ListGroup","msg","Player","chatOverlay","React","document","createElement","onReady","bind","onTimeUpdate","onFullScreenEnter","onFullScreenExit","firstTimeUpdate","firstReady","invertTime","youtube","controls","fs","keyboard","global","direct","source","type","sources","provider","before","faComments","value","onToggle","elements","button","classList","add","appendChild","ReactDOM","pressed","onclick","remove","nextNode","insertBefore","autostart","addControlButton","setState","play","forceStart","start","end","spa","savedPositionAdapter","lastSave","exists","get","pause","abs","set","onFullScreen","video","Plyr","plyrOptions","container","plyrSource","touch","event","detail","code","muted","embed","volume","getVolume","onDestroy","destroy","removeChild","spawnPlyr","prevProps","prev","next","destroyPlyr","renderOverlay","contentRect","TimecodeLink","valueInt","visited","handleClick","preventDefault","href","DangerSpan","dangerouslySetInnerHTML","__html","Timecodes","rest","entries","indexOf","Array","isArray","links","reduce","curr","NestedTimecodes","level","open","setOpen","toggleState","action","faChevronDown","faChevronRight","Collapse","in","Segment","note","date","Date","games","official","torrent","thumbnail","abs_end","duration","SubRef","SegmentRef","original","subrefs","Game","category","game","Category","segments","BUTTON_STYLE","SegmentRefList","currentSegment","segmentRef","as","Link","to","active","Badge","pill","bg","SugarDate","getFullYear","CollapseWrapper","defaultSize","enable","bottom","Playlist","autoExpand","fullHeight","currentGame","setGame","activeIndex","prevItem","nextItem","InputGroup","disabled","faArrowLeft","faArrowRight","Reparentable","el","otherProps","obj","spec","update","Mode","link","chat","mpv","ModeSelector","mode","Pagination","ShareOverlay","inputRef","setMode","setSegments","includeTime","setIncludeTime","Data","s","Popover","getBaseSegment","base","absTime","at","getShortLink","URL","window","location","getMpvCommand","Row","Col","Form","readOnly","input","select","setSelectionRange","execCommand","faCopy","label","checked","ftime","htmlSize","isPrerender","navigator","userAgent","toLowerCase","NoPrerender","SegmentPlayer","loaded","fullscreen","relatedGames","timecodes","toggleFullscreen","width","y","sidebarCollapsed","toggleSidebar","renderPlayerOverlay","chatContainer","createChatContainer","reqSearch","search","URLSearchParams","paramAt","has","params","gameId","segmentId","resolveSegment","redirect","by","findRefBySegment","resolveGame","newUrl","history","request","resolveUrl","loadData","prevParams","pointerEvents","activeElement","blur","force_start","playerProps","forceFallback","toggle","Ratio","aspectRatio","ol","position","minWidth","minHeight","onDragStop","updateState","$merge","onResizeStop","direction","delta","offsetWidth","offsetHeight","bounds","renderChat","faTwitch","faYoutube","faExclamationCircle","faCheckCircle","faDownload","trigger","rootClose","faShareSquare","faMaximize","faExpand","absStart","header","leftSidebarClasses","minDeviceWidth","tabIndex","faCaretSquareRight","faCaretSquareLeft","renderPlaylist","renderTimecodes","maxDeviceWidth","renderDescription","subtitlesInTab","Tabs","mountOnEnter","Tab","eventKey","title","unmountOnExit","fluid","withFooter","isLoading","refName","gameName","property","content","renderLeftSidebar","renderPlayer","renderPlayerControls","renderBelowPlayer","renderRightSidebar","initValue","setValue"],"sourceRoot":""}