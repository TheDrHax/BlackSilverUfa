{"version":3,"file":"457.bundle.js","mappings":"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","sources":["webpack://blacksilverufa/./src/js/hooks/use-complex-state.js","webpack://blacksilverufa/./src/js/hooks/use-complex-query-state.js","webpack://blacksilverufa/./src/js/pages/search-page/constants.js","webpack://blacksilverufa/./src/js/pages/search-page/date-picker.js","webpack://blacksilverufa/./src/js/pages/search-page/date-range-picker.js","webpack://blacksilverufa/./src/js/pages/search-page/date-filter.js","webpack://blacksilverufa/./src/js/pages/search-page/control-panel.js","webpack://blacksilverufa/./src/js/pages/search-page/search-results.js","webpack://blacksilverufa/./src/js/pages/search-page/text-filter.js","webpack://blacksilverufa/./src/js/pages/search-page/search-page.js"],"sourcesContent":["import { useCallback, useState } from 'react';\n\nexport const useComplexState = (initValue) => {\n  const [value, setValue] = useState(initValue);\n  const changeState = useCallback((input) => (\n    setValue((current) => (\n      { ...current, ...input }\n    ), [])\n  ));\n  return [value, changeState];\n};\n","import { useCallback } from 'react';\nimport { withDefault, useQueryParams } from 'use-query-params';\nimport flow from 'lodash/flow';\nimport isEqual from 'lodash/isEqual';\n\n/**\n * Uses default value when query param is nullable and hides it from the search.\n *\n * @see {@link https://github.com/pbeshai/use-query-params/issues/138}\n */\nconst withSquashedDefault = (paramConfig, defaultValue) => {\n  const defaulted = withDefault(paramConfig, defaultValue);\n\n  return {\n    encode: flow(\n      (value) => (isEqual(value, defaultValue) ? undefined : value),\n      defaulted.encode,\n    ),\n    decode: defaulted.decode,\n  };\n};\n\nconst useComplexQueryState = (schema) => {\n  const [value, setValue] = useQueryParams(schema);\n\n  const updateState = useCallback((update) => {\n    setValue({ ...value, ...update });\n  });\n\n  return [value, updateState];\n};\n\nexport { useComplexQueryState, withSquashedDefault };\n","export const DEFAULT_SCALE = 'year';\nexport const SCALES = ['month', 'year', 'decade'];\nexport const MODES = ['segments', 'games'];\nexport const SOURCES = ['youtube', 'direct'];\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Components\nimport DatePicker from 'react-date-picker';\nimport { Form } from 'react-bootstrap';\n// Namespace\nimport { SCALES } from './constants';\n\nconst DatePickerComponent = ({ scale, ...rest }) => (\n  <Form.Control\n    as={DatePicker}\n    minDetail=\"decade\"\n    locale=\"ru-RU\"\n    maxDetail={scale}\n    showLeadingZeros\n    {...rest}\n  />\n);\n\nDatePickerComponent.propTypes = {\n  scale: PropTypes.oneOf(SCALES).isRequired,\n  value: PropTypes.instanceOf(Date),\n  minDate: PropTypes.instanceOf(Date).isRequired,\n  maxDate: PropTypes.instanceOf(Date).isRequired,\n  onChange: PropTypes.func.isRequired,\n  tileClassName: PropTypes.func,\n  tileContent: PropTypes.func,\n};\n\nDatePickerComponent.defaultProps = {\n  value: null,\n  tileClassName: null,\n  tileContent: null,\n};\n\nexport default DatePickerComponent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Components\nimport DatePicker from './date-picker';\n\nconst DateRangePicker = ({ from, to, minDate, onChange, ...rest }) => (\n  <>\n    <DatePicker\n      key=\"from\"\n      value={from}\n      minDate={minDate}\n      onChange={(input) => onChange({ from: input, to })}\n      {...rest}\n    />\n    <DatePicker\n      key=\"to\"\n      value={to}\n      minDate={from || minDate}\n      onChange={(input) => onChange({ from, to: input })}\n      {...rest}\n    />\n  </>\n);\n\nDateRangePicker.propTypes = {\n  from: PropTypes.instanceOf(Date),\n  to: PropTypes.instanceOf(Date),\n  minDate: PropTypes.instanceOf(Date),\n  onChange: PropTypes.func.isRequired,\n};\n\nDateRangePicker.defaultProps = {\n  from: undefined,\n  to: undefined,\n  minDate: null,\n};\n\nexport default DateRangePicker;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Components\nimport { InputGroup, Button, Dropdown } from 'react-bootstrap';\nimport DateRangePicker from './date-range-picker';\nimport DatePicker from './date-picker';\n// Namespace\nimport { searchPage as t } from '../../constants/texts';\nimport { DEFAULT_SCALE, SCALES } from './constants';\n// Utils\nimport SugarDate from '../../utils/sugar';\nimport { renderTemplate } from '../../utils/text-utils';\n\nconst getRange = (date, scale) => {\n  if (!date) {\n    return [];\n  }\n\n  const startDate = new Date(date);\n\n  if (scale === 'year') {\n    SugarDate.reset(startDate, 'month');\n  } else if (scale === 'decade') {\n    SugarDate.reset(startDate, 'year');\n  }\n\n  const endDate = new Date(startDate);\n  if (scale === 'year') {\n    SugarDate.advance(endDate, { months: 1 });\n  } else if (scale === 'decade') {\n    SugarDate.advance(endDate, { years: 1 });\n  }\n\n  SugarDate.rewind(endDate, { days: 1 });\n\n  return [startDate, endDate];\n};\n\nconst getIntervalSummary = ({ date, view, segments, maxDate }) => {\n  if (date > maxDate) return null;\n\n  const range = getRange(date, view);\n  const count = segments.count({ date: { $between: range } });\n  return (<div>{renderTemplate('{n} стрим{n#,а,ов}', { n: count })}</div>);\n};\n\nconst DateFilter = ({ value: { from, to, scale }, segments, onChange, ...rest }) => {\n  const minDate = new Date(segments.min('date'));\n  const maxDate = new Date(segments.max('date'));\n\n  const datePickerConfig = { scale, minDate, maxDate };\n\n  return (\n    <InputGroup {...rest}>\n      <Dropdown>\n        <Dropdown.Toggle variant=\"dark\">\n          {t.scales[scale]}\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          {SCALES.map((current) => (\n            <Dropdown.Item\n              key={current}\n              active={scale === current}\n              onClick={() => onChange({ from: undefined, to: undefined, scale: current })}\n            >\n              {t.scales[current]}\n            </Dropdown.Item>\n          ))}\n        </Dropdown.Menu>\n      </Dropdown>\n      {\n        scale === 'month'\n          ? (\n            <DateRangePicker\n              from={from}\n              to={to}\n              {...datePickerConfig}\n              tileDisabled={({ date }) => segments.count({ date: { $dteq: date } }) === 0}\n              onChange={(input) => {\n                onChange(input);\n              }}\n            />\n          )\n          : (\n            <DatePicker\n              value={from}\n              {...datePickerConfig}\n              tileContent={(input) => getIntervalSummary({ ...input, segments, maxDate })}\n              onChange={(input) => {\n                const [start, end] = getRange(input, scale);\n                onChange({ from: start, to: end });\n              }}\n            />\n          )\n      }\n      {from && (\n        <Button\n          variant=\"danger\"\n          onClick={() => {\n            onChange({ from: undefined, to: undefined, scale: DEFAULT_SCALE });\n          }}\n        >x\n        </Button>\n      )}\n    </InputGroup>\n  );\n};\n\nDateFilter.propTypes = {\n  value: PropTypes.shape({\n    scale: PropTypes.oneOf(SCALES),\n    from: PropTypes.instanceOf(Date),\n    to: PropTypes.instanceOf(Date),\n  }).isRequired,\n  segments: PropTypes.object.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default DateFilter;\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, ButtonGroup, Form, InputGroup } from 'react-bootstrap';\nimport { faSortAmountAsc, faSortAmountDesc } from '@fortawesome/free-solid-svg-icons';\nimport DateFilter from './date-filter';\nimport { searchPage as t } from '../../constants/texts';\nimport { MODES, SCALES, SOURCES } from './constants';\nimport { FAIcon } from '../../utils/fontawesome';\n\nconst SORT_OPTIONS = {\n  segments: ['date'],\n  games: ['date', 'stream_count'],\n};\n\nconst SORT_ICONS = {\n  desc: faSortAmountDesc,\n  asc: faSortAmountAsc,\n};\n\nconst convertCategories = (categories) => Object.values(categories)\n  .filter(({ search }) => search !== false)\n  .reduce((result, current) => {\n    result[current.id] = current.name;\n    return result;\n  }, { any: t.categoryAny });\n\nconst ControlPanel = ({ mode,\n  filters,\n  sorting,\n  segments,\n  categories,\n  onModeChange,\n  onFiltersChange,\n  onSortingChange,\n}) => {\n  const direction = sorting.isDesc ? 'desc' : 'asc';\n\n  const filteredCategories = useMemo(() => (\n    convertCategories(categories.data)\n  ), [categories]);\n\n  const dateState = {\n    scale: filters.scale,\n    from: filters.from,\n    to: filters.to,\n  };\n\n  return (\n    <>\n      <div className=\"content border-end\">\n        <Form.Group className=\"d-flex align-items-baseline\">\n          <Form.Label>Искать:</Form.Label>\n          <ButtonGroup className=\"ms-2 flex-1-0-0\">\n            {MODES.map((key) => (\n              <Button\n                key={key}\n                size=\"sm\"\n                variant={mode === key ? 'primary' : 'dark'}\n                onClick={() => {\n                  onModeChange(key);\n                  onSortingChange({ sortBy: 'date' });\n                }}\n              >\n                {t.modes[key]}\n              </Button>\n            ))}\n          </ButtonGroup>\n        </Form.Group>\n\n        <div className=\"sidebar-header\">Фильтры</div>\n\n        {mode === 'segments' && (\n          <DateFilter\n            value={dateState}\n            segments={segments}\n            onChange={onFiltersChange}\n          />\n        )}\n\n        {mode === 'segments' && (\n          <InputGroup>\n            <InputGroup.Text>Источник</InputGroup.Text>\n            <Form.Select\n              value={filters.source}\n              onChange={({ target }) => onFiltersChange({ source: target.value })}\n            >\n              <option value=\"any\">Любой</option>\n              {Object.entries(t.sources).map(([key, value]) => (\n                <option key={key} value={key}>{value}</option>\n              ))}\n            </Form.Select>\n          </InputGroup>\n        )}\n\n        {mode === 'games' && (\n          <InputGroup>\n            <InputGroup.Text>Категория</InputGroup.Text>\n            <Form.Select\n              value={filters.category}\n              onChange={({ target }) => onFiltersChange({ category: target.value })}\n            >\n              {Object.entries(filteredCategories).map(([key, value]) => (\n                <option key={key} value={key}>{value}</option>\n              ))}\n            </Form.Select>\n          </InputGroup>\n        )}\n\n        <div className=\"sidebar-header\">Результаты</div>\n\n        <InputGroup>\n          <InputGroup.Text>Сортировка</InputGroup.Text>\n          <Form.Select\n            value={sorting.sortBy}\n            onChange={({ target }) => onSortingChange({ sortBy: target.value })}\n          >\n            {SORT_OPTIONS[mode].map((key) => (\n              <option key={key} value={key}>{t.sortModes[key]}</option>\n            ))}\n          </Form.Select>\n          <Button\n            variant=\"dark\"\n            onClick={() => onSortingChange({ isDesc: !sorting.isDesc })}\n          >\n            <FAIcon icon={SORT_ICONS[direction]} />\n          </Button>\n        </InputGroup>\n\n        <Form.Group className=\"d-flex align-items-baseline\">\n          <Form.Label>Количество:</Form.Label>\n          <ButtonGroup className=\"ms-2 flex-1-0-0\">\n            {[10, 25, 50].map((x) => (\n              <Button\n                key={x}\n                size=\"sm\"\n                variant={x === sorting.limit ? 'primary' : 'dark'}\n                onClick={() => onSortingChange({ limit: x })}\n              >\n                {x}\n              </Button>\n            ))}\n          </ButtonGroup>\n        </Form.Group>\n      </div>\n\n      <div className=\"collapsed-content\">\n        <div className=\"sidebar-header\">Фильтры</div>\n        <div className=\"sidebar-header\">Результаты</div>\n      </div>\n    </>\n  );\n};\n\nControlPanel.propTypes = {\n  mode: PropTypes.string.isRequired,\n  filters: PropTypes.shape({\n    q: PropTypes.string,\n    category: PropTypes.string,\n    scale: PropTypes.oneOf(SCALES),\n    from: PropTypes.instanceOf(Date),\n    to: PropTypes.instanceOf(Date),\n    source: PropTypes.oneOf(['any', ...SOURCES]),\n  }).isRequired,\n  sorting: PropTypes.shape({\n    sortBy: PropTypes.string,\n    isDesc: PropTypes.bool,\n    limit: PropTypes.number,\n  }).isRequired,\n\n  segments: PropTypes.object,\n  categories: PropTypes.object,\n\n  onModeChange: PropTypes.func.isRequired,\n  onFiltersChange: PropTypes.func.isRequired,\n  onSortingChange: PropTypes.func.isRequired,\n};\n\nControlPanel.defaultProps = {\n  segments: null,\n  categories: null,\n};\n\nexport default ControlPanel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Components\nimport { Link } from 'react-router-dom';\nimport { Col, ListGroup, Row } from 'react-bootstrap';\nimport Pagination from '@vlsergey/react-bootstrap-pagination';\n// Namespace\nimport { MODES } from './constants';\nimport { getSegmentDescription, getGameDescription } from '../../utils/data-utils';\n\nconst THUMBNAIL_GENERATORS = {\n  segments: (item) => item.thumbnail,\n  games: (item) => item.segments[0].thumbnail,\n};\n\nconst DESCRIPTION_GENERATORS = {\n  segments: getSegmentDescription,\n  games: (game) => (game.original.type !== 'list'\n    ? getGameDescription(game.original)\n    : getSegmentDescription(game.segments[0])\n  ),\n};\n\nconst SearchResults = ({ mode, items, limit, page, onPageChange }) => {\n  const getThumbnail = THUMBNAIL_GENERATORS[mode];\n  const getDescription = DESCRIPTION_GENERATORS[mode];\n\n  const pages = Math.ceil(items.length / limit);\n  const pageStart = page * limit;\n  const pageEnd = pageStart + limit;\n\n  return (\n    <>\n      <ListGroup variant=\"flush\" className=\"py-3\">\n        {items.slice(pageStart, pageEnd).map((item) => (\n          <ListGroup.Item key={item}>\n            <Row>\n              <Col style={{ flex: '0 0 240px' }}>\n                <img className=\"me-3\" width=\"100%\" src={getThumbnail(item)} alt=\"thumbnail\" />\n              </Col>\n\n              <Col>\n                <div><Link to={item.url}>{item.name}</Link></div>\n                <div>{getDescription(item)}</div>\n              </Col>\n            </Row>\n          </ListGroup.Item>\n        ))}\n      </ListGroup>\n\n      {pages > 1 && (\n      <Row key=\"navigator\">\n        <Col className=\"d-flex justify-content-center\">\n          <Pagination\n            value={page}\n            totalPages={pages}\n            atBeginEnd={1}\n            aroundCurrent={2}\n            showFirstLast={false}\n            onChange={({ target }) => onPageChange(target.value)}\n          />\n        </Col>\n      </Row>\n      )}\n    </>\n  );\n};\n\nSearchResults.propTypes = {\n  items: PropTypes.array,\n  limit: PropTypes.number,\n  mode: PropTypes.oneOf(MODES).isRequired,\n  page: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n};\n\nSearchResults.defaultProps = {\n  limit: 10,\n  items: [],\n};\n\nexport default SearchResults;\nexport { getGameDescription };\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Form, InputGroup } from 'react-bootstrap';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { searchPage as t } from '../../constants/texts';\nimport { FAIcon } from '../../utils/fontawesome';\n\nconst ENTER_KEYS = ['NumpadEnter', 'Enter'];\n\nconst TextFilter = ({ initValue, onSubmit }) => {\n  const [value, setValue] = useState(initValue);\n\n  const handleKeyPress = (event) => {\n    if (!ENTER_KEYS.includes(event.key)) return;\n\n    event.preventDefault();\n    onSubmit(value);\n  };\n\n  useEffect(() => {\n    if (initValue !== value) {\n      setValue(initValue);\n    }\n  }, [initValue]);\n\n  return (\n    <InputGroup>\n      <Form.Control\n        type=\"text\"\n        value={value}\n        placeholder={t.queryPlaceholder}\n        onChange={({ target }) => setValue(target.value)}\n        onKeyPress={handleKeyPress}\n      />\n      {value.length > 0 && (\n        <Button\n          variant=\"danger\"\n          onClick={() => {\n            setValue('');\n            onSubmit('');\n          }}\n        >\n          <FAIcon icon={faTimes} />\n        </Button>\n      )}\n      <Button variant=\"primary\" onClick={() => onSubmit(value)}>{t.search}</Button>\n    </InputGroup>\n  );\n};\n\nTextFilter.propTypes = {\n  initValue: PropTypes.string,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nTextFilter.defaultProps = {\n  initValue: '',\n};\n\nexport default TextFilter;\n","import React, { useEffect } from 'react';\nimport { useQueryParam, StringParam, NumberParam, DateParam, BooleanParam } from 'use-query-params';\nimport { Row, Col } from 'react-bootstrap';\n// Utils\nimport animateScrollTo from 'animated-scroll-to';\nimport Matomo from '../../matomo';\nimport fts, { tokenize } from '../../utils/full-text-search';\n// Hooks\nimport { useComplexState } from '../../hooks/use-complex-state';\nimport { useComplexQueryState, withSquashedDefault } from '../../hooks/use-complex-query-state';\nimport { useDataStore } from '../../hooks/use-data-store';\n// Namespace\nimport { searchPage as t } from '../../constants/texts';\n// Components\nimport { Layout } from '../../components';\nimport ControlPanel from './control-panel';\nimport SearchResults from './search-results';\nimport { DEFAULT_SCALE } from './constants';\nimport { useResponsiveValue } from '../../hooks/use-breakpoints';\nimport TextFilter from './text-filter';\n\nconst getDateParams = ({ from, to }) => (\n  to\n    ? { $between: [from, to] }\n    : { $dteq: from }\n);\n\nconst getSortParams = ({ sortBy, isDesc }) => (\n  sortBy === 'date'\n    ? [['date', isDesc], ['segment', isDesc]]\n    : [['streams', isDesc], ['date', isDesc], ['segment', isDesc]]\n);\n\nconst executeSearch = ({ data: { segments, index }, mode, filters, sorting }) => {\n  let chain;\n  const query = {};\n\n  switch (mode) {\n    case 'segments':\n      chain = segments.chain();\n\n      // Show only segments with refs\n      query.games = { $size: { $gt: 0 } };\n\n      // Date filter\n      if (filters.from) {\n        query.date = getDateParams(filters);\n      }\n\n      // Source filter\n      if (filters.source !== 'any') {\n        query[filters.source] = { $exists: true };\n      }\n\n      break;\n\n    case 'games':\n      chain = index.chain();\n\n      // Category filter\n      if (filters.category !== 'any') {\n        query['category.id'] = filters.category;\n      }\n\n      break;\n\n    default:\n      return [];\n  }\n\n  // Find and sort\n  chain = chain\n    .find(query)\n    .compoundsort(getSortParams(sorting));\n\n  let data = chain.data();\n\n  // Filter by text\n  if (tokenize(filters.q).length > 0) {\n    data = fts(filters.q, data, (s) => s.name);\n  }\n\n  return data;\n};\n\nconst SCHEMA_FILTERS = {\n  q: withSquashedDefault(StringParam, ''),\n  category: withSquashedDefault(StringParam, 'any'),\n  scale: withSquashedDefault(StringParam, DEFAULT_SCALE),\n  from: DateParam,\n  to: DateParam,\n  source: withSquashedDefault(StringParam, 'any'),\n};\nconst SCHEMA_SORTING = {\n  sortBy: withSquashedDefault(StringParam, 'date'),\n  isDesc: withSquashedDefault(BooleanParam, true),\n  limit: withSquashedDefault(NumberParam, 10),\n};\nconst INIT_RESULTS = {\n  mode: null,\n  items: [],\n};\n\nconst SearchPage = () => {\n  const [data, isReady] = useDataStore();\n  const [mode, setMode] = useQueryParam('mode', withSquashedDefault(StringParam, 'segments'));\n  const [page, setPage] = useQueryParam('page', withSquashedDefault(NumberParam, 1));\n  const [filters, updateFilters] = useComplexQueryState(SCHEMA_FILTERS);\n  const [sorting, updateSorting] = useComplexQueryState(SCHEMA_SORTING);\n  const [results, updateResults] = useComplexState(INIT_RESULTS);\n  const collapsed = useResponsiveValue([true, true, true, false]);\n\n  const submitForm = (event) => {\n    event?.preventDefault();\n\n    const items = executeSearch({ mode, data, filters, sorting });\n    setPage(1);\n    updateResults({ mode, items });\n\n    if (event) {\n      if (!tokenize(filters.q).length) return;\n      Matomo.trackSiteSearch({\n        keyword: filters.q,\n        category: mode,\n        count: items.length,\n      });\n    }\n  };\n\n  useEffect(() => {\n    animateScrollTo(0, {\n      cancelOnUserAction: false,\n      elementToScroll: document.getElementById('app'),\n    });\n  }, [page]);\n\n  useEffect(() => {\n    if (!isReady) return;\n    submitForm();\n  }, [data, mode, filters, sorting]);\n\n  const leftSidebarClasses = [\n    'search-control',\n    collapsed ? 'collapsed' : 'border-start',\n  ].filter(Boolean).join(' ');\n\n  return (\n    <Layout isLoading={!isReady} title={t.title} fluid=\"lg\">\n      <Row className=\"search\">\n        <Col className={leftSidebarClasses}>\n          <ControlPanel\n            mode={mode}\n            filters={filters}\n            sorting={sorting}\n            segments={data.segments}\n            categories={data.categories}\n            onModeChange={setMode}\n            onFiltersChange={updateFilters}\n            onSortingChange={updateSorting}\n          />\n        </Col>\n        <Col className=\"mt-3\">\n          <Row>\n            <Col className=\"px-4\">\n              <TextFilter\n                initValue={filters.q}\n                onSubmit={(q) => updateFilters({ q })}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              {!!results.mode && (\n                <SearchResults\n                  mode={results.mode}\n                  items={results.items}\n                  limit={sorting.limit}\n                  page={page - 1}\n                  onPageChange={(input) => setPage(input + 1)}\n                />\n              )}\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Layout>\n  );\n};\n\nexport default SearchPage;\n"],"names":["useComplexState","initValue","useState","value","setValue","useCallback","input","current","withSquashedDefault","paramConfig","defaultValue","defaulted","withDefault","encode","flow","isEqual","undefined","decode","useComplexQueryState","schema","useQueryParams","updateState","update","DEFAULT_SCALE","SCALES","MODES","DatePickerComponent","scale","rest","Form","as","DatePicker","minDetail","locale","maxDetail","showLeadingZeros","propTypes","PropTypes","isRequired","Date","minDate","maxDate","onChange","tileClassName","tileContent","defaultProps","DateRangePicker","from","to","key","getRange","date","startDate","SugarDate","endDate","months","years","days","DateFilter","segments","min","max","datePickerConfig","InputGroup","Dropdown","variant","t","map","active","onClick","tileDisabled","count","$dteq","view","range","$between","renderTemplate","n","getIntervalSummary","start","end","Button","SORT_OPTIONS","games","SORT_ICONS","desc","faSortAmountDesc","asc","faSortAmountAsc","ControlPanel","mode","filters","sorting","categories","onModeChange","onFiltersChange","onSortingChange","direction","isDesc","filteredCategories","useMemo","Object","values","filter","search","reduce","result","id","name","any","convertCategories","data","dateState","className","ButtonGroup","size","sortBy","source","target","entries","category","icon","x","limit","q","THUMBNAIL_GENERATORS","item","thumbnail","DESCRIPTION_GENERATORS","getSegmentDescription","game","original","type","getGameDescription","SearchResults","items","page","onPageChange","getThumbnail","getDescription","pages","Math","ceil","length","pageStart","pageEnd","ListGroup","slice","Row","Col","style","flex","width","src","alt","url","totalPages","atBeginEnd","aroundCurrent","showFirstLast","ENTER_KEYS","TextFilter","onSubmit","useEffect","placeholder","onKeyPress","event","includes","preventDefault","faTimes","SCHEMA_FILTERS","StringParam","DateParam","SCHEMA_SORTING","BooleanParam","NumberParam","INIT_RESULTS","useDataStore","isReady","useQueryParam","setMode","setPage","updateFilters","updateSorting","results","updateResults","collapsed","useResponsiveValue","animateScrollTo","cancelOnUserAction","elementToScroll","document","getElementById","chain","index","query","$size","$gt","$exists","find","compoundsort","tokenize","fts","s","executeSearch","Matomo","keyword","submitForm","leftSidebarClasses","Boolean","join","isLoading","title","fluid"],"sourceRoot":""}