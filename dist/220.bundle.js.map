{"version":3,"file":"220.bundle.js","mappings":"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","sources":["webpack://blacksilverufa/./src/js/hooks/use-complex-state.js","webpack://blacksilverufa/./src/js/hooks/use-complex-query-state.js","webpack://blacksilverufa/./src/js/pages/search-page/constants.js","webpack://blacksilverufa/./src/js/pages/search-page/date-picker.js","webpack://blacksilverufa/./src/js/pages/search-page/date-range-picker.js","webpack://blacksilverufa/./src/js/pages/search-page/date-filter.js","webpack://blacksilverufa/./src/js/components/utils/form-check-tri-state.js","webpack://blacksilverufa/./src/js/pages/search-page/control-panel.js","webpack://blacksilverufa/./src/js/pages/search-page/search-results.js","webpack://blacksilverufa/./src/js/pages/search-page/text-filter.js","webpack://blacksilverufa/./src/js/pages/search-page/search-page.js"],"sourcesContent":["import { useCallback, useState } from 'react';\n\nexport const useComplexState = (initValue) => {\n  const [value, setValue] = useState(initValue);\n  const changeState = useCallback((input) => (\n    setValue((current) => (\n      { ...current, ...input }\n    ), [])\n  ));\n  return [value, changeState];\n};\n","import { useCallback } from 'react';\nimport { withDefault, useQueryParams } from 'use-query-params';\nimport flow from 'lodash/flow';\nimport isEqual from 'lodash/isEqual';\n\n/**\n * Uses default value when query param is nullable and hides it from the search.\n *\n * @see {@link https://github.com/pbeshai/use-query-params/issues/138}\n */\nconst withSquashedDefault = (paramConfig, defaultValue) => {\n  const defaulted = withDefault(paramConfig, defaultValue);\n\n  return {\n    encode: flow(\n      (value) => (isEqual(value, defaultValue) ? undefined : value),\n      defaulted.encode,\n    ),\n    decode: defaulted.decode,\n  };\n};\n\nconst useComplexQueryState = (schema) => {\n  const [value, setValue] = useQueryParams(schema);\n\n  const updateState = useCallback((update) => {\n    setValue({ ...value, ...update });\n  });\n\n  return [value, updateState];\n};\n\nexport { useComplexQueryState, withSquashedDefault };\n","export const DEFAULT_SCALE = 'year';\nexport const SCALES = ['month', 'year', 'decade'];\nexport const MODES = ['segments', 'games'];\nexport const SOURCES = ['youtube', 'vk', 'direct'];\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Components\nimport DatePicker from 'react-date-picker';\nimport { Form } from 'react-bootstrap';\n// Namespace\nimport { SCALES } from './constants';\n\nconst DatePickerComponent = ({ scale, ...rest }) => (\n  <Form.Control\n    as={DatePicker}\n    minDetail=\"decade\"\n    locale=\"ru-RU\"\n    maxDetail={scale}\n    showLeadingZeros\n    {...rest}\n  />\n);\n\nDatePickerComponent.propTypes = {\n  scale: PropTypes.oneOf(SCALES).isRequired,\n  value: PropTypes.instanceOf(Date),\n  minDate: PropTypes.instanceOf(Date).isRequired,\n  maxDate: PropTypes.instanceOf(Date).isRequired,\n  onChange: PropTypes.func.isRequired,\n  tileClassName: PropTypes.func,\n  tileContent: PropTypes.func,\n};\n\nDatePickerComponent.defaultProps = {\n  value: null,\n  tileClassName: null,\n  tileContent: null,\n};\n\nexport default DatePickerComponent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Components\nimport DatePicker from './date-picker';\n\nconst DateRangePicker = ({ from, to, minDate, onChange, ...rest }) => (\n  <>\n    <DatePicker\n      key=\"from\"\n      value={from}\n      minDate={minDate}\n      onChange={(input) => onChange({ from: input, to })}\n      {...rest}\n    />\n    <DatePicker\n      key=\"to\"\n      value={to}\n      minDate={from || minDate}\n      onChange={(input) => onChange({ from, to: input })}\n      {...rest}\n    />\n  </>\n);\n\nDateRangePicker.propTypes = {\n  from: PropTypes.instanceOf(Date),\n  to: PropTypes.instanceOf(Date),\n  minDate: PropTypes.instanceOf(Date),\n  onChange: PropTypes.func.isRequired,\n};\n\nDateRangePicker.defaultProps = {\n  from: undefined,\n  to: undefined,\n  minDate: null,\n};\n\nexport default DateRangePicker;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Components\nimport { InputGroup, Button, Dropdown } from 'react-bootstrap';\nimport DateRangePicker from './date-range-picker';\nimport DatePicker from './date-picker';\n// Namespace\nimport { searchPage as t } from '../../constants/texts';\nimport { DEFAULT_SCALE, SCALES } from './constants';\n// Utils\nimport SugarDate from '../../utils/sugar';\nimport { renderTemplate } from '../../utils/text-utils';\n\nconst getRange = (date, scale) => {\n  if (!date) {\n    return [];\n  }\n\n  const startDate = new Date(date);\n\n  switch (scale) {\n    case 'month': SugarDate.reset(startDate, 'day'); break;\n    case 'year': SugarDate.reset(startDate, 'month'); break;\n    case 'decade': SugarDate.reset(startDate, 'year'); break;\n    default: throw Error(`Unexpected scale: ${scale}`);\n  }\n\n  const endDate = new Date(startDate);\n\n  switch (scale) {\n    case 'month': SugarDate.advance(endDate, { days: 1 }); break;\n    case 'year': SugarDate.advance(endDate, { months: 1 }); break;\n    case 'decade': SugarDate.advance(endDate, { years: 1 }); break;\n    default: throw Error(`Unexpected scale: ${scale}`);\n  }\n\n  SugarDate.rewind(endDate, { seconds: 1 });\n\n  return [startDate, endDate];\n};\n\nconst getRangeCount = ({ segments, date, view }) => segments.count({\n  date: { $between: getRange(date, view) },\n});\n\nconst getIntervalSummary = ({ date, view, segments, maxDate }) => {\n  if (date > maxDate) return null;\n  if (view === 'month') return null;\n  const count = getRangeCount({ segments, date, view });\n  return (<div>{renderTemplate('{n} стрим{n#,а,ов}', { n: count })}</div>);\n};\n\nconst DateFilter = ({ value: { from, to, scale }, segments, onChange, ...rest }) => {\n  const minDate = new Date(segments.min('date'));\n  const maxDate = new Date(segments.max('date'));\n\n  const tileContent = (input) => getIntervalSummary({ ...input, segments, maxDate });\n  const tileDisabled = ({ date, view }) => getRangeCount({ segments, date, view }) === 0;\n  const datePickerConfig = { scale, minDate, maxDate, tileContent, tileDisabled };\n\n  return (\n    <InputGroup {...rest}>\n      <Dropdown>\n        <Dropdown.Toggle variant=\"dark\">\n          {t.scales[scale]}\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          {SCALES.map((current) => (\n            <Dropdown.Item\n              key={current}\n              active={scale === current}\n              onClick={() => onChange({ from: undefined, to: undefined, scale: current })}\n            >\n              {t.scales[current]}\n            </Dropdown.Item>\n          ))}\n        </Dropdown.Menu>\n      </Dropdown>\n      {\n        scale === 'month'\n          ? (\n            <DateRangePicker\n              from={from}\n              to={to}\n              {...datePickerConfig}\n              onChange={(input) => {\n                onChange(input);\n              }}\n            />\n          )\n          : (\n            <DatePicker\n              value={from}\n              {...datePickerConfig}\n              onChange={(input) => {\n                const [start, end] = getRange(input, scale);\n                onChange({ from: start, to: end });\n              }}\n            />\n          )\n      }\n      {from && (\n        <Button\n          variant=\"danger\"\n          onClick={() => {\n            onChange({ from: undefined, to: undefined, scale: DEFAULT_SCALE });\n          }}\n        >x\n        </Button>\n      )}\n    </InputGroup>\n  );\n};\n\nDateFilter.propTypes = {\n  value: PropTypes.shape({\n    scale: PropTypes.oneOf(SCALES),\n    from: PropTypes.instanceOf(Date),\n    to: PropTypes.instanceOf(Date),\n  }).isRequired,\n  segments: PropTypes.object.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default DateFilter;\n","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormCheck } from 'react-bootstrap';\n\nconst values = [null, true, false];\n\nexport default function FormCheckTriState({ value, onChange, ...other }) {\n  const ref = useRef();\n\n  useEffect(() => {\n    if (value == null) {\n      ref.current.indeterminate = true;\n    } else {\n      ref.current.indeterminate = false;\n      ref.current.checked = value;\n    }\n  }, [value]);\n\n  return (\n    <FormCheck\n      {...other}\n      ref={ref}\n      onChange={() => {\n        const next = (values.indexOf(value) + 1) % values.length;\n        onChange(values[next]);\n      }}\n    />\n  );\n}\n\nFormCheckTriState.propTypes = {\n  value: PropTypes.bool,\n  onChange: PropTypes.func,\n};\n\nFormCheckTriState.defaultProps = {\n  value: null,\n  onChange: () => {},\n};\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, ButtonGroup, Form, InputGroup } from 'react-bootstrap';\nimport { faSortAmountAsc, faSortAmountDesc } from '@fortawesome/free-solid-svg-icons';\nimport DateFilter from './date-filter';\nimport { searchPage as t } from '../../constants/texts';\nimport { MODES, SCALES, SOURCES } from './constants';\nimport { FAIcon } from '../../utils/fontawesome';\nimport FormCheckTriState from '../../components/utils/form-check-tri-state';\n\nconst SORT_OPTIONS = {\n  segments: ['date'],\n  games: ['date', 'name', 'stream_count'],\n};\n\nconst SORT_ICONS = {\n  desc: faSortAmountAsc,\n  asc: faSortAmountDesc,\n};\n\nconst convertCategories = (categories) => Object.values(categories)\n  .filter(({ search }) => search !== false)\n  .reduce((result, current) => {\n    result[current.id] = current.name;\n    return result;\n  }, { any: t.categoryAny });\n\nconst ControlPanel = ({ mode,\n  filters,\n  sorting,\n  segments,\n  categories,\n  onModeChange,\n  onFiltersChange,\n  onSortingChange,\n}) => {\n  const direction = sorting.isDesc ? 'desc' : 'asc';\n\n  const filteredCategories = useMemo(() => (\n    convertCategories(categories.data)\n  ), [categories]);\n\n  const dateState = {\n    scale: filters.scale,\n    from: filters.from,\n    to: filters.to,\n  };\n\n  return (\n    <>\n      <div className=\"content border-end\">\n        <Form.Group className=\"d-flex align-items-baseline\">\n          <Form.Label>Искать:</Form.Label>\n          <ButtonGroup className=\"ms-2 flex-1-0-0\">\n            {MODES.map((key) => (\n              <Button\n                key={key}\n                size=\"sm\"\n                variant={mode === key ? 'primary' : 'dark'}\n                onClick={() => {\n                  onModeChange(key);\n                  onSortingChange({ sortBy: 'date' });\n                }}\n              >\n                {t.modes[key]}\n              </Button>\n            ))}\n          </ButtonGroup>\n        </Form.Group>\n\n        <div className=\"sidebar-header\">Фильтры</div>\n\n        {mode === 'segments' && (\n          <InputGroup>\n            <FormCheckTriState\n              label=\"Просмотренные\"\n              value={filters.watched}\n              onChange={(value) => onFiltersChange({ watched: value })}\n            />\n          </InputGroup>\n        )}\n\n        {mode === 'segments' && (\n          <DateFilter\n            value={dateState}\n            segments={segments}\n            onChange={onFiltersChange}\n          />\n        )}\n\n        {mode === 'segments' && (\n          <InputGroup>\n            <InputGroup.Text>Источник</InputGroup.Text>\n            <Form.Select\n              value={filters.source}\n              onChange={({ target }) => onFiltersChange({ source: target.value })}\n            >\n              <option value=\"any\">Любой</option>\n              {Object.entries(t.sources).map(([key, value]) => (\n                <option key={key} value={key}>{value}</option>\n              ))}\n            </Form.Select>\n          </InputGroup>\n        )}\n\n        {mode === 'games' && (\n          <InputGroup>\n            <InputGroup.Text>Категория</InputGroup.Text>\n            <Form.Select\n              value={filters.category}\n              onChange={({ target }) => onFiltersChange({ category: target.value })}\n            >\n              {Object.entries(filteredCategories).map(([key, value]) => (\n                <option key={key} value={key}>{value}</option>\n              ))}\n            </Form.Select>\n          </InputGroup>\n        )}\n\n        <div className=\"sidebar-header\">Результаты</div>\n\n        <InputGroup>\n          <InputGroup.Text>Сортировка</InputGroup.Text>\n          <Form.Select\n            value={sorting.sortBy}\n            onChange={({ target }) => onSortingChange({ sortBy: target.value })}\n          >\n            {SORT_OPTIONS[mode].map((key) => (\n              <option key={key} value={key}>{t.sortModes[key]}</option>\n            ))}\n          </Form.Select>\n          <Button\n            variant=\"dark\"\n            onClick={() => onSortingChange({ isDesc: !sorting.isDesc })}\n          >\n            <FAIcon icon={SORT_ICONS[direction]} />\n          </Button>\n        </InputGroup>\n\n        <Form.Group className=\"d-flex align-items-baseline\">\n          <Form.Label>Количество:</Form.Label>\n          <ButtonGroup className=\"ms-2 flex-1-0-0\">\n            {[10, 25, 50, 100].map((x) => (\n              <Button\n                key={x}\n                size=\"sm\"\n                variant={x === sorting.limit ? 'primary' : 'dark'}\n                onClick={() => onSortingChange({ limit: x })}\n              >\n                {x}\n              </Button>\n            ))}\n          </ButtonGroup>\n        </Form.Group>\n      </div>\n\n      <div className=\"collapsed-content\">\n        <div className=\"sidebar-header\">Фильтры</div>\n        <div className=\"sidebar-header\">Результаты</div>\n      </div>\n    </>\n  );\n};\n\nControlPanel.propTypes = {\n  mode: PropTypes.string.isRequired,\n  filters: PropTypes.shape({\n    q: PropTypes.string,\n    category: PropTypes.string,\n    watched: PropTypes.bool,\n    scale: PropTypes.oneOf(SCALES),\n    from: PropTypes.instanceOf(Date),\n    to: PropTypes.instanceOf(Date),\n    source: PropTypes.oneOf(['any', ...SOURCES]),\n  }).isRequired,\n  sorting: PropTypes.shape({\n    sortBy: PropTypes.string,\n    isDesc: PropTypes.bool,\n    limit: PropTypes.number,\n  }).isRequired,\n\n  segments: PropTypes.object,\n  categories: PropTypes.object,\n\n  onModeChange: PropTypes.func.isRequired,\n  onFiltersChange: PropTypes.func.isRequired,\n  onSortingChange: PropTypes.func.isRequired,\n};\n\nControlPanel.defaultProps = {\n  segments: null,\n  categories: null,\n};\n\nexport default ControlPanel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Components\nimport { Link } from 'react-router-dom';\nimport { Col, ListGroup, Row } from 'react-bootstrap';\nimport Pagination from '@vlsergey/react-bootstrap-pagination';\n// Namespace\nimport { MODES } from './constants';\nimport { getSegmentDescription, getGameDescription } from '../../utils/data-utils';\nimport { Image } from '../../components/utils/image';\nimport { Segment, IndexEntry } from '../../data-types';\nimport { WatchedProgress } from '../game-page/stream-card';\n\nconst GameItem = ({ item }) => (\n  <ListGroup.Item key={item}>\n    <Row>\n      <Col style={{ flex: '0 0 240px' }}>\n        <Image className=\"me-3\" width=\"100%\" src={item.segments[0].thumbnail} alt=\"thumbnail\" />\n      </Col>\n\n      <Col>\n        <div><Link to={item.url}>{item.name}</Link></div>\n        <div>\n          {item.segments.length === 1\n            ? getSegmentDescription(item.segments[0])\n            : getGameDescription(item.original)}\n        </div>\n      </Col>\n    </Row>\n  </ListGroup.Item>\n);\n\nGameItem.propTypes = {\n  item: IndexEntry.isRequired,\n};\n\nconst SegmentItem = ({ item }) => (\n  <ListGroup.Item key={item}>\n    <Row>\n      <Col style={{ flex: '0 0 240px' }}>\n        <div style={{ position: 'relative' }}>\n          <Image className=\"me-3\" width=\"100%\" src={item.thumbnail} alt=\"thumbnail\" />\n          <WatchedProgress segment={item} />\n        </div>\n      </Col>\n\n      <Col>\n        <div><Link to={item.url}>{item.name}</Link></div>\n        <div>{getSegmentDescription(item)}</div>\n      </Col>\n    </Row>\n  </ListGroup.Item>\n);\n\nSegmentItem.propTypes = {\n  item: Segment.isRequired,\n};\n\nconst SearchResults = ({ mode, items, limit, page, onPageChange }) => {\n  const pages = Math.ceil(items.length / limit);\n  const pageStart = page * limit;\n  const pageEnd = pageStart + limit;\n\n  return (\n    <>\n      <ListGroup variant=\"flush\" className=\"py-3\">\n        {items.slice(pageStart, pageEnd).map((item) => (\n          mode === 'segments'\n            ? <SegmentItem item={item} key={item.segment} />\n            : <GameItem item={item} key={item.name} />\n        ))}\n      </ListGroup>\n\n      {pages > 1 && (\n      <Row key=\"navigator\">\n        <Col className=\"d-flex justify-content-center\">\n          <Pagination\n            value={page}\n            totalPages={pages}\n            atBeginEnd={1}\n            aroundCurrent={2}\n            showFirstLast={false}\n            onChange={({ target }) => onPageChange(target.value)}\n          />\n        </Col>\n      </Row>\n      )}\n    </>\n  );\n};\n\nSearchResults.propTypes = {\n  items: PropTypes.array,\n  limit: PropTypes.number,\n  mode: PropTypes.oneOf(MODES).isRequired,\n  page: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n};\n\nSearchResults.defaultProps = {\n  limit: 10,\n  items: [],\n};\n\nexport default SearchResults;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Form, InputGroup } from 'react-bootstrap';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { searchPage as t } from '../../constants/texts';\nimport { FAIcon } from '../../utils/fontawesome';\n\nconst ENTER_KEYS = ['NumpadEnter', 'Enter'];\n\nconst TextFilter = ({ initValue, onSubmit }) => {\n  const [value, setValue] = useState(initValue);\n\n  const handleKeyPress = (event) => {\n    if (!ENTER_KEYS.includes(event.key)) return;\n\n    event.preventDefault();\n    onSubmit(value);\n  };\n\n  useEffect(() => {\n    if (initValue !== value) {\n      setValue(initValue);\n    }\n  }, [initValue]);\n\n  return (\n    <InputGroup>\n      <Form.Control\n        type=\"text\"\n        value={value}\n        placeholder={t.queryPlaceholder}\n        onChange={({ target }) => setValue(target.value)}\n        onKeyPress={handleKeyPress}\n      />\n      {value.length > 0 && (\n        <Button\n          variant=\"danger\"\n          onClick={() => {\n            setValue('');\n            onSubmit('');\n          }}\n        >\n          <FAIcon icon={faTimes} />\n        </Button>\n      )}\n      <Button variant=\"primary\" onClick={() => onSubmit(value)}>{t.search}</Button>\n    </InputGroup>\n  );\n};\n\nTextFilter.propTypes = {\n  initValue: PropTypes.string,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nTextFilter.defaultProps = {\n  initValue: '',\n};\n\nexport default TextFilter;\n","import React, { useEffect } from 'react';\nimport { useQueryParam, StringParam, NumberParam, DateParam, BooleanParam } from 'use-query-params';\nimport { Row, Col } from 'react-bootstrap';\n// Utils\nimport animateScrollTo from 'animated-scroll-to';\nimport Matomo from '../../matomo';\nimport { tokenize } from '../../utils/text-utils';\n// Hooks\nimport { useComplexState } from '../../hooks/use-complex-state';\nimport { useComplexQueryState, withSquashedDefault } from '../../hooks/use-complex-query-state';\nimport { useDataStore } from '../../hooks/use-data-store';\n// Namespace\nimport { searchPage as t } from '../../constants/texts';\n// Components\nimport { Layout } from '../../components';\nimport ControlPanel from './control-panel';\nimport SearchResults from './search-results';\nimport { DEFAULT_SCALE } from './constants';\nimport { useResponsiveValue } from '../../hooks/use-breakpoints';\nimport TextFilter from './text-filter';\n\nconst getDateParams = ({ from, to }) => (\n  to\n    ? { $between: [from, to] }\n    : { $dteq: from }\n);\n\nconst getSortParams = ({ sortBy, isDesc }) => (\n  [\n    ...(\n      sortBy === 'stream_count' ? [['streams', isDesc]] :\n      sortBy === 'name' ? [['name', isDesc]] :\n      []\n    ),\n    ['date', isDesc],\n    ['segment', isDesc],\n  ]\n);\n\nconst executeSearch = ({ data: { segments, index }, mode, filters, sorting }) => {\n  let chain;\n  const query = {};\n\n  switch (mode) {\n    case 'segments':\n      chain = segments.chain();\n\n      // Show only segments with refs\n      query.games = { $size: { $gt: 0 } };\n\n      // Date filter\n      if (filters.from) {\n        query.date = getDateParams(filters);\n      }\n\n      // Source filter\n      if (filters.source !== 'any') {\n        query[filters.source] = { $exists: true };\n      }\n\n      // Watched filter\n      if (filters.watched != null) {\n        query.watched = { [filters.watched ? '$gt' : '$eq']: 0 };\n      }\n\n      break;\n\n    case 'games':\n      chain = index.chain();\n\n      // Category filter\n      if (filters.category !== 'any') {\n        query['category.id'] = filters.category;\n      }\n\n      break;\n\n    default:\n      return [];\n  }\n\n  chain = chain.find(query);\n\n  // Filter by text\n  if (tokenize(filters.q).length > 0) {\n    chain = chain.search(filters.q);\n  }\n\n  // Sort\n  chain = chain.compoundsort(getSortParams(sorting));\n\n  return chain.data();\n};\n\nconst SCHEMA_FILTERS = {\n  q: withSquashedDefault(StringParam, ''),\n  category: withSquashedDefault(StringParam, 'any'),\n  watched: withSquashedDefault(BooleanParam, null),\n  scale: withSquashedDefault(StringParam, DEFAULT_SCALE),\n  from: DateParam,\n  to: DateParam,\n  source: withSquashedDefault(StringParam, 'any'),\n};\nconst SCHEMA_SORTING = {\n  sortBy: withSquashedDefault(StringParam, 'date'),\n  isDesc: withSquashedDefault(BooleanParam, true),\n  limit: withSquashedDefault(NumberParam, 25),\n};\nconst INIT_RESULTS = {\n  mode: null,\n  items: [],\n};\n\nconst SearchPage = () => {\n  const [data, isReady] = useDataStore();\n  const [mode, setMode] = useQueryParam('mode', withSquashedDefault(StringParam, 'segments'));\n  const [page, setPage] = useQueryParam('page', withSquashedDefault(NumberParam, 1));\n  const [filters, updateFilters] = useComplexQueryState(SCHEMA_FILTERS);\n  const [sorting, updateSorting] = useComplexQueryState(SCHEMA_SORTING);\n  const [results, updateResults] = useComplexState(INIT_RESULTS);\n  const collapsed = useResponsiveValue([true, true, true, false]);\n\n  const submitForm = (event) => {\n    event?.preventDefault();\n\n    const items = executeSearch({ mode, data, filters, sorting });\n    if (page !== 1) {\n      setPage(1);\n    }\n    updateResults({ mode, items });\n\n    if (event) {\n      if (!tokenize(filters.q).length) return;\n      Matomo.trackSiteSearch({\n        keyword: filters.q,\n        category: mode,\n        count: items.length,\n      });\n    }\n  };\n\n  useEffect(() => {\n    animateScrollTo(0, {\n      cancelOnUserAction: false,\n      elementToScroll: document.getElementById('app'),\n    });\n  }, [page]);\n\n  useEffect(() => {\n    if (!isReady) return;\n    submitForm();\n  }, [data, mode, filters, sorting]);\n\n  const leftSidebarClasses = [\n    'search-control',\n    collapsed ? 'collapsed' : 'border-start',\n  ].filter(Boolean).join(' ');\n\n  return (\n    <Layout isLoading={!isReady} title={t.title} fluid=\"lg\">\n      <Row className=\"search\">\n        <Col className={leftSidebarClasses}>\n          <ControlPanel\n            mode={mode}\n            filters={filters}\n            sorting={sorting}\n            segments={data.segments}\n            categories={data.categories}\n            onModeChange={setMode}\n            onFiltersChange={updateFilters}\n            onSortingChange={updateSorting}\n          />\n        </Col>\n        <Col className=\"mt-3\">\n          <Row>\n            <Col className=\"px-4\">\n              <TextFilter\n                initValue={filters.q}\n                onSubmit={(q) => updateFilters({ q })}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              {!!results.mode && (\n                <SearchResults\n                  mode={results.mode}\n                  items={results.items}\n                  limit={sorting.limit}\n                  page={page - 1}\n                  onPageChange={(input) => setPage(input + 1)}\n                />\n              )}\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Layout>\n  );\n};\n\nexport default SearchPage;\n"],"names":["useComplexState","initValue","useState","value","setValue","useCallback","input","current","withSquashedDefault","paramConfig","defaultValue","defaulted","withDefault","encode","flow","isEqual","undefined","decode","useComplexQueryState","schema","useQueryParams","updateState","update","DEFAULT_SCALE","SCALES","MODES","DatePickerComponent","scale","rest","Form","as","DatePicker","minDetail","locale","maxDetail","showLeadingZeros","propTypes","PropTypes","isRequired","Date","minDate","maxDate","onChange","tileClassName","tileContent","defaultProps","DateRangePicker","from","to","key","getRange","date","startDate","SugarDate","Error","endDate","days","months","years","seconds","getRangeCount","segments","view","count","$between","DateFilter","min","max","datePickerConfig","renderTemplate","n","getIntervalSummary","tileDisabled","InputGroup","Dropdown","variant","t","map","active","onClick","start","end","Button","values","FormCheckTriState","other","ref","useRef","useEffect","indeterminate","checked","FormCheck","next","indexOf","length","SORT_OPTIONS","games","SORT_ICONS","desc","faSortAmountAsc","asc","faSortAmountDesc","ControlPanel","mode","filters","sorting","categories","onModeChange","onFiltersChange","onSortingChange","direction","isDesc","filteredCategories","useMemo","Object","filter","search","reduce","result","id","name","any","convertCategories","data","dateState","className","ButtonGroup","size","sortBy","label","watched","source","target","entries","category","icon","x","limit","q","GameItem","item","ListGroup","Row","Col","style","flex","width","src","thumbnail","alt","url","getSegmentDescription","getGameDescription","original","IndexEntry","SegmentItem","position","segment","Segment","SearchResults","items","page","onPageChange","pages","Math","ceil","pageStart","pageEnd","slice","totalPages","atBeginEnd","aroundCurrent","showFirstLast","ENTER_KEYS","TextFilter","onSubmit","type","placeholder","onKeyPress","event","includes","preventDefault","faTimes","executeSearch","chain","index","query","$size","$gt","$dteq","$exists","find","tokenize","compoundsort","SCHEMA_FILTERS","StringParam","BooleanParam","DateParam","SCHEMA_SORTING","NumberParam","INIT_RESULTS","useDataStore","isReady","useQueryParam","setMode","setPage","updateFilters","updateSorting","results","updateResults","collapsed","useResponsiveValue","animateScrollTo","cancelOnUserAction","elementToScroll","document","getElementById","leftSidebarClasses","Boolean","join","isLoading","title","fluid"],"sourceRoot":""}