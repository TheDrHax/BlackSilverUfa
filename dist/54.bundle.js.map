{"version":3,"file":"54.bundle.js","mappings":"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","sources":["webpack://blacksilverufa/./src/js/components/chat/types.js","webpack://blacksilverufa/./src/js/components/chat/message.js","webpack://blacksilverufa/./src/js/components/chat/subtitles-loader.js","webpack://blacksilverufa/./src/js/components/scroll.js","webpack://blacksilverufa/./src/js/components/chat/settings.js","webpack://blacksilverufa/./src/js/hooks/use-plyr-time.js","webpack://blacksilverufa/./src/js/components/chat/chat.js","webpack://blacksilverufa/./src/js/components/player/player.js","webpack://blacksilverufa/./src/js/components/player/timecodes.js","webpack://blacksilverufa/./src/js/components/player/playlist.js","webpack://blacksilverufa/./src/js/components/utils/reparentable.js","webpack://blacksilverufa/./src/js/utils/update-state.js","webpack://blacksilverufa/./src/js/components/player/share-overlay.js","webpack://blacksilverufa/./src/js/utils/prerender.js","webpack://blacksilverufa/./src/js/components/segment-player.js","webpack://blacksilverufa/./src/js/hooks/use-complex-state.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nexport const TypeMessage = PropTypes.shape({\n  $loki: PropTypes.number, // unique id\n  time: PropTypes.number,\n  user: PropTypes.string,\n  text: PropTypes.string,\n  color: PropTypes.string,\n  hidden: PropTypes.bool,\n});\n\nexport const TypeEmotes = PropTypes.shape({\n  pattern: PropTypes.object,\n  data: PropTypes.objectOf(PropTypes.shape({\n    id: PropTypes.string,\n    src: PropTypes.string,\n  })),\n});\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport repeat from 'lodash/repeat';\nimport { ListGroupItem } from 'react-bootstrap';\nimport { TypeMessage, TypeEmotes } from './types';\n\nconst PACKED_WORDS = /([^ ]+) x⁣([0-9]+)/g;\n\nconst unpackMessage = (text) => (\n  text.replace(PACKED_WORDS, (a, b, c) => repeat(`${b} `, c).trimEnd())\n);\n\nexport const ChatMessage = ({ message, emotes, unpackMessages, showHidden, showEmotes }) => {\n  if (message.hidden && !showHidden) return null;\n\n  const body = useMemo(() => {\n    let res = message.text;\n\n    if (unpackMessages) {\n      res = unpackMessage(res);\n    }\n\n    if (showEmotes && emotes) {\n      res = res.split(/\\s+/).map((word, i) => {\n        if (word.match(emotes.pattern)) {\n          word = (\n            <img\n              // eslint-disable-next-line react/no-array-index-key\n              key={i}\n              src={emotes.data[word].src}\n              alt={word}\n              className=\"emote\"\n            />\n          );\n        }\n\n        return [i > 0 && ' ', word];\n      });\n    }\n\n    return res;\n  }, [message.text, unpackMessages, emotes, showEmotes]);\n\n  return (\n    <ListGroupItem>\n      <span\n        style={{ color: message.color }}\n        className=\"username\"\n      >\n        {message.user}\n      </span>\n      {': '}\n      {body}\n    </ListGroupItem>\n  );\n};\n\nChatMessage.propTypes = {\n  message: TypeMessage.isRequired,\n  emotes: TypeEmotes,\n  unpackMessages: PropTypes.bool.isRequired,\n  showHidden: PropTypes.bool.isRequired,\n  showEmotes: PropTypes.bool.isRequired,\n};\n\nChatMessage.defaultProps = {\n  emotes: null,\n};\n","import * as Loki from 'lokijs';\nimport { ptime } from '../../utils/time-utils';\n\nconst LINE_BREAK = /\\\\N/g;\n\nexport const loadSubtitles = async (url) => {\n  const db = new Loki('chat');\n  const data = db.addCollection('messages', { indices: ['time'] });\n\n  const lines = await fetch(url)\n    .then((res) => res.text())\n    .then((res) => res.split('\\n'));\n\n  let firstLine = true;\n\n  for (let line of lines) {\n    if (firstLine) {\n      if (!line.startsWith('[Script Info]')) {\n        throw new Error('Файл повреждён или недоступен');\n      }\n\n      firstLine = false;\n    }\n\n    const hidden = line.startsWith('; ');\n\n    if (hidden) {\n      line = line.substring(2);\n    }\n\n    if (line.startsWith('Dialogue: ')) {\n      const parts = line.substring(10).split(', ');\n\n      const [userStr, ...msgParts] = parts.slice(3).join(', ').split(': ');\n      const text = msgParts.join(': ').replace(LINE_BREAK, '');\n      const time = ptime(parts[1]);\n\n      let user = userStr;\n      let color = 'inherit';\n\n      if (userStr.startsWith('{\\\\c&H')) {\n        user = userStr.substring(13, 13 + userStr.length - 13 * 2);\n\n        // BGR to RGB\n        color = userStr.substring(9, 11) + userStr.substring(7, 9) + userStr.substring(5, 7);\n        color = `#${color}`;\n\n        if (color === '#FFFFFF') {\n          color = 'inherit';\n        }\n      }\n\n      data.insert({ time, user, text, color, hidden });\n    }\n  }\n\n  return data;\n};\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport CustomScroll from 'react-custom-scroll';\nimport Measure from 'react-measure';\n\nexport const Scroll = ({\n  children,\n  className,\n  keepAtBottom,\n  scrollTo,\n  scrollDelay,\n  contentKey,\n}) => {\n  const scrollRef = useRef();\n  const [manualScroll, setManualScroll] = useState(!keepAtBottom);\n  const [outerHeight, setOuterHeight] = useState(0);\n\n  const scrollToSelector = (selector) => {\n    const { current: scroll } = scrollRef;\n    const node = scroll?.innerContainerRef.current?.querySelector(selector);\n\n    if (node) {\n      if (scrollDelay) {\n        setTimeout(() => (\n          scroll.updateScrollPosition(node.offsetTop)\n        ), scrollDelay);\n      } else {\n        scroll.updateScrollPosition(node.offsetTop);\n      }\n    }\n  };\n\n  const onResize = useCallback(() => {\n    scrollRef.current?.forceUpdate();\n  });\n\n  const onOuterResize = useCallback(({ entry }) => {\n    setOuterHeight(entry?.height || 0);\n    onResize();\n  });\n\n  const onScroll = useCallback(({ target: { scrollTop, scrollTopMax } }) => {\n    setManualScroll(scrollTop < scrollTopMax * 0.9);\n  });\n\n  useEffect(() => {\n    if (keepAtBottom && !manualScroll) {\n      scrollToSelector('.bottom');\n    }\n  }, [keepAtBottom, manualScroll, outerHeight, contentKey]);\n\n  useEffect(() => {\n    if (scrollTo) {\n      scrollToSelector(scrollTo);\n    }\n  }, [scrollTo, contentKey]);\n\n  return (\n    <Measure onResize={onOuterResize}>\n      {({ measureRef: outerMeasureRef }) => (\n        <div\n          ref={outerMeasureRef}\n          className={className}\n          style={{ display: 'flex', flexDirection: 'column' }}\n        >\n          <CustomScroll\n            ref={scrollRef}\n            onScroll={onScroll}\n            flex=\"1 1 0\"\n          >\n            <Measure onResize={onResize}>\n              {({ measureRef }) => (\n                <div ref={measureRef}>\n                  {children}\n                  <div className=\"bottom\" />\n                </div>\n              )}\n            </Measure>\n          </CustomScroll>\n        </div>\n      )}\n    </Measure>\n  );\n};\n\nScroll.propTypes = {\n  className: PropTypes.string,\n  keepAtBottom: PropTypes.bool,\n  scrollTo: PropTypes.string,\n  scrollDelay: PropTypes.number,\n  contentKey: PropTypes.any,\n};\n\nScroll.defaultProps = {\n  className: null,\n  keepAtBottom: false,\n  scrollTo: null,\n  scrollDelay: 0,\n  contentKey: null,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, OverlayTrigger, Spinner, Tooltip } from 'react-bootstrap';\nimport { faDownload, faFileArchive, faRobot, faSmile } from '@fortawesome/free-solid-svg-icons';\nimport { TypeEmotes } from './types';\nimport { FAIcon } from '../../utils/fontawesome';\n\nexport const ChatSettings = ({\n  showHidden,\n  emotes,\n  showEmotes,\n  unpackMessages,\n  subtitles,\n  onChange,\n}) => (\n  <div className=\"sidebar-row border-top d-flex\">\n    <OverlayTrigger\n      placement=\"top\"\n      overlay={(props) => (\n        <Tooltip {...props}>\n          Показывать ответы ботов, команды и голоса на играх с интеграцией\n          чата ({showHidden ? 'включено' : 'выключено'})\n        </Tooltip>\n      )}\n    >\n      <Button\n        variant=\"dark\"\n        size=\"sm\"\n        onClick={() => onChange({ showHidden: !showHidden })}\n      >\n        <FAIcon icon={faRobot} />\n        <div className={`led ${showHidden ? 'bg-success' : 'bg-danger'}`} />\n      </Button>\n    </OverlayTrigger>\n\n    <OverlayTrigger\n      placement=\"top\"\n      overlay={(props) => (\n        <Tooltip {...props}>\n          Показывать смайлики Twitch, BetterTTV и\n          FrankerFaceZ ({showEmotes ? 'включено' : 'выключено'})\n        </Tooltip>\n      )}\n    >\n      <Button\n        className=\"ms-1\"\n        variant=\"dark\"\n        size=\"sm\"\n        onClick={() => onChange({ showEmotes: !showEmotes })}\n      >\n        {showEmotes && !emotes ? (\n          <Spinner animation=\"border\" size=\"sm\" />\n        ) : (\n          <FAIcon icon={faSmile} />\n        )}\n        <div className={`led ${showEmotes ? 'bg-success' : 'bg-danger'}`} />\n      </Button>\n    </OverlayTrigger>\n\n    <OverlayTrigger\n      placement=\"top\"\n      overlay={(props) => (\n        <Tooltip {...props}>\n          Распаковывать сообщения вида &quot;Kappa x3&quot; в\n          &quot;Kappa Kappa Kappa&quot; ({unpackMessages ? 'включено' : 'выключено'})\n        </Tooltip>\n      )}\n    >\n      <Button\n        className=\"ms-1\"\n        variant=\"dark\"\n        size=\"sm\"\n        onClick={() => onChange({ unpackMessages: !unpackMessages })}\n      >\n        <FAIcon icon={faFileArchive} />\n        <div className={`led ${unpackMessages ? 'bg-success' : 'bg-danger'}`} />\n      </Button>\n    </OverlayTrigger>\n\n    <div className=\"flex-grow-1\" />\n\n    <OverlayTrigger\n      placement=\"top\"\n      overlay={(props) => (\n        <Tooltip {...props}>\n          Скачать чат в виде субтитров\n        </Tooltip>\n      )}\n    >\n      <Button\n        href={subtitles}\n        className=\"ms-1\"\n        variant=\"dark\"\n        size=\"sm\"\n      >\n        <FAIcon icon={faDownload} />\n      </Button>\n    </OverlayTrigger>\n  </div>\n);\n\nChatSettings.propTypes = {\n  showHidden: PropTypes.bool.isRequired,\n  emotes: TypeEmotes,\n  showEmotes: PropTypes.bool.isRequired,\n  unpackMessages: PropTypes.bool.isRequired,\n  subtitles: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nChatSettings.defaultProps = {\n  emotes: null,\n};\n","import { useEffect, useRef, useState } from 'react';\n\nexport const usePlyrTime = (plyr, hash = (t) => t) => {\n  const getTime = () => plyr?.currentTime || 0;\n  const timeRef = useRef(getTime());\n  const [currentTime, setTime] = useState(timeRef.current);\n\n  useEffect(() => {\n    const callback = () => {\n      const newTime = getTime();\n      if (hash(timeRef.current) !== hash(newTime)) {\n        timeRef.current = newTime;\n        setTime(newTime);\n      }\n    };\n\n    plyr?.on('timeupdate', callback);\n\n    return () => {\n      plyr?.off('timeupdate', callback);\n    };\n  }, [plyr]);\n\n  return currentTime;\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport last from 'lodash/last';\nimport { Button, ListGroup, Spinner } from 'react-bootstrap';\nimport { ChatMessage } from './message';\nimport { loadSubtitles } from './subtitles-loader';\nimport { Scroll } from '../scroll';\nimport Persist from '../../utils/persist';\nimport { ChatSettings } from './settings';\nimport { useComplexState } from '../../hooks/use-complex-state';\nimport { usePlyrTime } from '../../hooks/use-plyr-time';\n\nexport const Chat = ({ subtitles, plyr, offset, simple }) => {\n  const [error, setError] = useState();\n  const [data, setData] = useState();\n  const [emotes, setEmotes] = useState();\n  const [settings, updateSettings] = useComplexState(\n    Persist.load('Chat', {\n      showHidden: false,\n      showEmotes: true,\n      unpackMessages: true,\n    }),\n  );\n\n  // Skip time updates if there are no new messages available\n  const borders = useRef([null, null]);\n  const currentTime = usePlyrTime(plyr, (t) => {\n    const { current: [left, right] } = borders;\n\n    return left != null && right != null && t >= left && t < right\n      ? true\n      : Math.floor(t);\n  });\n\n  useEffect(() => {\n    Persist.save('Chat', {}, settings, Object.keys(settings));\n  }, [settings]);\n\n  useEffect(() => {\n    if (error) return null;\n\n    loadSubtitles(subtitles)\n      .then((res) => setData(res))\n      .catch((e) => setError(e.message));\n\n    return () => data && data.clear();\n  }, [subtitles, error]);\n\n  useEffect(() => {\n    if (emotes || !settings.showEmotes) return;\n\n    fetch('/data/emotes.json')\n      .then((res) => res.json())\n      .then((res) => {\n        const pattern = new RegExp(`^(${Object.keys(res).join('|')})$`);\n        setEmotes({ data: res, pattern });\n      })\n      .catch(() => setEmotes(null));\n  }, [settings.showEmotes]);\n\n  if (error) {\n    return !simple && (\n      <div className=\"flex-1-0-0 d-flex flex-column justify-content-center align-items-center\">\n        <span>Ошибка: {error}</span>\n        <Button\n          variant=\"primary\"\n          className=\"mt-2\"\n          onClick={() => setError(null)}\n        >\n          Попробовать снова\n        </Button>\n      </div>\n    );\n  }\n\n  if (!data) {\n    return !simple && (\n      <div className=\"flex-1-0-0 d-flex flex-column justify-content-center align-items-center\">\n        <Spinner animation=\"border\" role=\"status\" />\n        <span className=\"mt-2\">Загрузка сообщений...</span>\n      </div>\n    );\n  }\n\n  const query = {};\n\n  if (!settings.showHidden) {\n    query.hidden = { $eq: false };\n  }\n\n  const messages = data.chain()\n    .find({\n      ...query,\n      time: { $lte: currentTime - offset },\n    })\n    .offset(-50)\n    .simplesort('$loki')\n    .data();\n\n  const lastMsg = last(messages);\n\n  borders.current[0] = lastMsg ? lastMsg.time + offset : 0;\n\n  const nextMsg = data.chain().find({\n    ...query,\n    $loki: { $gt: lastMsg?.$loki || 0 },\n    time: { $gt: lastMsg?.time || 0 },\n  }).limit(1).data()[0];\n\n  borders.current[1] = nextMsg ? nextMsg.time + offset : null;\n\n  return (\n    <>\n      <Scroll className=\"flex-1-0-0\" keepAtBottom contentKey={lastMsg?.time}>\n        <ListGroup className=\"chat-messages-list\">\n          {messages.map((msg) => (\n            <ChatMessage\n              key={msg.$loki}\n              message={msg}\n              emotes={emotes}\n              {...settings}\n            />\n          ))}\n        </ListGroup>\n      </Scroll>\n\n      {!simple && (\n        <ChatSettings\n          onChange={updateSettings}\n          emotes={emotes}\n          subtitles={subtitles}\n          {...settings}\n        />\n      )}\n    </>\n  );\n};\n\nChat.propTypes = {\n  subtitles: PropTypes.string.isRequired,\n  plyr: PropTypes.object,\n  offset: PropTypes.number,\n  simple: PropTypes.bool,\n};\n\nChat.defaultProps = {\n  offset: 0,\n  simple: false,\n  plyr: null,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport Plyr from 'plyr';\nimport Hls from 'hls.js';\nimport Measure from 'react-measure';\nimport { faComments } from '@fortawesome/free-solid-svg-icons';\nimport Persist from '../../utils/persist';\nimport 'plyr/src/sass/plyr.scss';\nimport { FAIcon } from '../../utils/fontawesome';\n\nexport default class Player extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ...Persist.load('Player', {\n        chatOverlay: true,\n      }),\n    };\n\n    this.ref = React.createRef();\n    this.overlay = document.createElement('div');\n    this.overlay.className = 'plyr-overlay';\n\n    this.onReady = this.onReady.bind(this);\n    this.onTimeUpdate = this.onTimeUpdate.bind(this);\n    this.onVideoEnded = this.onVideoEnded.bind(this);\n    this.onFullScreenEnter = this.onFullScreenEnter.bind(this);\n    this.onFullScreenExit = this.onFullScreenExit.bind(this);\n\n    this.firstTimeUpdate = true;\n    this.firstReady = true;\n\n    this.hls = null;\n  }\n\n  plyrOptions() {\n    return {\n      // Disable quality selection (doesn't work on YouTube)\n      settings: ['captions', /* 'quality', */ 'speed', 'loop'],\n      invertTime: false,\n      seekTime: 5, // same as YouTube\n      youtube: {\n        controls: 1,\n        fs: false,\n        disablekb: 0,\n      },\n      keyboard: { global: true },\n    };\n  }\n\n  updatePlyrSource() {\n    const { youtube, direct, hls } = this.props;\n    const { media: video } = this.plyr;\n    const source = { type: 'video' };\n\n    if (this.hls) {\n      this.hls?.destroy();\n      delete this.hls;\n    }\n\n    if (youtube) {\n      source.sources = [{\n        provider: 'youtube',\n        src: youtube,\n      }];\n    } else if (hls && Hls.isSupported()) {\n      const hlsClient = new Hls({\n        // For videos starting without a keyframe (first keyframe is\n        // located typically at 2.015)\n        maxBufferHole: 5,\n      });\n      hlsClient.loadSource(hls);\n      hlsClient.attachMedia(video);\n      this.hls = hlsClient;\n\n      return;\n    } else {\n      source.sources = [{\n        type: 'video/mp4',\n        src: direct,\n      }];\n    }\n\n    this.plyr.source = source;\n  }\n\n  addControlButton({\n    before = 'button[data-plyr=\"fullscreen\"]',\n    icon = faComments,\n    value = true,\n    onToggle = (state) => state,\n  }) {\n    const { controls } = this.plyr.elements;\n\n    const button = document.createElement('button');\n    [\n      'plyr__controls__item',\n      'plyr__control',\n      'plyr__control__custom',\n    ].forEach((i) => button.classList.add(i));\n\n    const node = document.createElement('span');\n    button.appendChild(node);\n    ReactDOM.render(<FAIcon icon={icon} />, node); // this works? nice\n\n    if (value) {\n      button.pressed = true;\n      button.classList.add('plyr__control--pressed');\n    } else {\n      button.pressed = false;\n    }\n\n    button.onclick = () => {\n      if (button.pressed) {\n        button.pressed = false;\n        button.classList.remove('plyr__control--pressed');\n      } else {\n        button.pressed = true;\n        button.classList.add('plyr__control--pressed');\n      }\n\n      onToggle(button.pressed);\n    };\n\n    const nextNode = controls.querySelector(before);\n    controls.insertBefore(button, nextNode);\n  }\n\n  onReady() {\n    const { onReady, autostart } = this.props;\n    const { chatOverlay } = this.state;\n    const { firstReady = true } = this;\n\n    if (firstReady) {\n      this.firstReady = false;\n\n      this.addControlButton({\n        before: '.plyr__menu',\n        icon: faComments,\n        value: chatOverlay,\n        onToggle: (value) => {\n          this.setState({ chatOverlay: value });\n        },\n      });\n\n      onReady(this.plyr);\n\n      if (autostart) {\n        this.plyr.play()?.catch(() => null);\n      }\n    }\n  }\n\n  onTimeUpdate() {\n    const {\n      forceStart,\n      start,\n      end,\n      savedPositionAdapter: spa,\n    } = this.props;\n\n    const {\n      plyr,\n      firstReady = true,\n      firstTimeUpdate = true,\n      lastSave = 0,\n    } = this;\n\n    const time = plyr.currentTime;\n\n    if (!firstReady && firstTimeUpdate) {\n      this.firstTimeUpdate = false;\n\n      const saved = spa?.get() || 0;\n\n      if (start > 0) {\n        plyr.currentTime = start;\n      } else if (saved > 0) {\n        plyr.currentTime = Math.min(saved, plyr.duration - 30);\n      }\n    }\n\n    if (forceStart && time < start) {\n      plyr.currentTime = start;\n    }\n\n    if (end && time >= end) {\n      plyr.currentTime = end;\n      plyr.pause();\n    }\n\n    if (Math.abs(time - lastSave) >= 5) {\n      this.lastSave = time;\n      spa.set(time);\n    }\n  }\n\n  onVideoEnded() {\n    const {\n      onVideoEnded,\n      savedPositionAdapter: spa,\n    } = this.props;\n\n    const { plyr } = this;\n    const time = plyr.currentTime;\n\n    if (spa) {\n      spa.set(time, { end: true });\n    }\n\n    onVideoEnded();\n  }\n\n  onFullScreenEnter() {\n    const { onFullScreen } = this.props;\n    onFullScreen(true);\n  }\n\n  onFullScreenExit() {\n    const { onFullScreen } = this.props;\n    onFullScreen(false);\n  }\n\n  spawnPlyr() {\n    const ref = this.ref.current;\n\n    const video = document.createElement('video');\n    ref.appendChild(video);\n\n    const plyr = new Plyr(video, this.plyrOptions());\n    this.plyr = plyr;\n\n    plyr.elements.container.appendChild(this.overlay);\n\n    this.updatePlyrSource();\n    plyr.touch = false; // Force click and hover events on PCs with touchscreen\n\n    const { poster } = this.props;\n    plyr.poster = poster;\n\n    // YouTube ready\n    plyr.on('ready', (e) => {\n      const { direct } = this.props;\n      if (!direct) {\n        this.onReady(e);\n      }\n    });\n\n    // Direct ready\n    plyr.on('loadedmetadata', (e) => {\n      const { direct, hls } = this.props;\n      if (direct || hls) {\n        this.onReady(e);\n      }\n    });\n\n    plyr.on('timeupdate', this.onTimeUpdate);\n\n    // Fix instant pause by Plyr\n    plyr.on('statechange', (event) => {\n      if (event.detail.code === 1) plyr.play()?.catch(() => null);\n    });\n\n    plyr.on('playing', () => {\n      // Workaround for muted sound after seeking\n      if (!plyr.muted) {\n        plyr.muted = false;\n      }\n\n      // Workaround for volume desync\n      if (plyr.embed) {\n        plyr.volume = plyr.embed.getVolume() / 100;\n      }\n    });\n\n    plyr.on('ended', this.onVideoEnded);\n    plyr.on('enterfullscreen', this.onFullScreenEnter);\n    plyr.on('exitfullscreen', this.onFullScreenExit);\n  }\n\n  destroyPlyr() {\n    const { onDestroy } = this.props;\n    onDestroy();\n\n    this.hls?.destroy();\n    this.plyr?.destroy();\n\n    const ref = this.ref.current;\n    ref.removeChild(ref.querySelector('video'));\n  }\n\n  componentDidMount() {\n    this.spawnPlyr();\n  }\n\n  shouldComponentUpdate(prevProps, nextState) {\n    Persist.save('Player', this.state, nextState, [\n      'chatOverlay',\n    ]);\n\n    return true;\n  }\n\n  componentDidUpdate(prev) {\n    const { plyr, props: next } = this;\n\n    if (prev.youtube !== next.youtube\n        || prev.direct !== next.direct\n        || prev.poster !== next.poster) {\n      this.firstReady = true;\n      this.firstTimeUpdate = true;\n      this.updatePlyrSource();\n      plyr.poster = next.poster;\n    }\n  }\n\n  componentWillUnmount() {\n    this.destroyPlyr();\n  }\n\n  render() {\n    const { renderOverlay } = this.props;\n    const { chatOverlay } = this.state;\n\n    return (\n      <>\n        {ReactDOM.createPortal(\n          <Measure>\n            {({ contentRect: { entry }, measureRef }) => (\n              <div className=\"plyr-overlay\" ref={measureRef}>\n                {chatOverlay && renderOverlay(entry)}\n              </div>\n            )}\n          </Measure>,\n          this.overlay,\n        )}\n        <div ref={this.ref} className=\"plyr-row\" />\n      </>\n    );\n  }\n}\n\nPlayer.propTypes = {\n  youtube: PropTypes.string,\n  direct: PropTypes.string,\n  hls: PropTypes.string,\n  poster: PropTypes.string,\n  start: PropTypes.number,\n  autostart: PropTypes.bool,\n  end: PropTypes.number,\n  forceStart: PropTypes.bool,\n  savedPositionAdapter: PropTypes.shape({\n    get: PropTypes.func,\n    set: PropTypes.func,\n  }),\n  onReady: PropTypes.func,\n  onDestroy: PropTypes.func,\n  onFullScreen: PropTypes.func,\n  onVideoEnded: PropTypes.func,\n  renderOverlay: PropTypes.func,\n};\n\nPlayer.defaultProps = {\n  youtube: null,\n  direct: null,\n  hls: null,\n  poster: null,\n  start: 0,\n  autostart: false,\n  end: null,\n  forceStart: false,\n  savedPositionAdapter: null,\n  onReady: () => null,\n  onDestroy: () => null,\n  onFullScreen: () => null,\n  onVideoEnded: () => null,\n  renderOverlay: () => null,\n};\n","import React, { useCallback, useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Collapse, ListGroup, ListGroupItem } from 'react-bootstrap';\nimport { faChevronDown, faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport { ptime } from '../../utils/time-utils';\nimport { FAIcon } from '../../utils/fontawesome';\nimport { usePlyrTime } from '../../hooks/use-plyr-time';\n\nconst TimecodeLink = ({ value, plyr }) => {\n  const valueInt = useMemo(() => ptime(value), [value]);\n  const visited = usePlyrTime(plyr, (t) => t >= valueInt) >= valueInt;\n\n  const handleClick = useCallback((e) => {\n    e.preventDefault();\n    if (!plyr) return;\n    plyr.currentTime = valueInt;\n    plyr.play()?.catch(() => null);\n  }, [plyr, valueInt]);\n\n  return (\n    // eslint-disable-next-line jsx-a11y/anchor-is-valid\n    <a\n      href=\"#\"\n      className={visited ? 'visited' : ''}\n      onClick={handleClick}\n    >\n      {value}\n    </a>\n  );\n};\n\nTimecodeLink.propTypes = {\n  value: PropTypes.string.isRequired,\n  plyr: PropTypes.object,\n};\n\nTimecodeLink.defaultProps = {\n  plyr: null,\n};\n\nconst DangerSpan = ({ children }) => (\n  <span dangerouslySetInnerHTML={{ __html: children }} />\n);\n\nexport const Timecodes = React.forwardRef(({ className, data, ...rest }, ref) => (\n  <ListGroup ref={ref} className={['timecodes-list', className].join(' ')}>\n    {Object.entries(data).map(([key, value]) => {\n      if (typeof value === 'string') { // regular timecode\n        if (key.indexOf('~') === -1) { // simple time\n          return (\n            <ListGroup.Item key={key}>\n              {<TimecodeLink value={key} {...rest} />}\n              {' — '}\n              <DangerSpan>{value}</DangerSpan>\n            </ListGroup.Item>\n          );\n        } else { // time range\n          const [start, end] = key.split('~');\n\n          return (\n            <ListGroup.Item key={key}>\n              {<TimecodeLink value={start} {...rest} />}\n              {' - '}\n              {<TimecodeLink value={end} {...rest} />}\n              {' — '}\n              <DangerSpan>{value}</DangerSpan>\n            </ListGroup.Item>\n          );\n        }\n      } else if (Array.isArray(value)) {\n        const links = value\n          .map((t) => {\n            if (t.indexOf('~') === -1) { // simple time\n              return <TimecodeLink key={t} value={t} {...rest} />;\n            } else { // time range\n              const [start, end] = t.split('~');\n              return (\n                <span key={t}>\n                  {<TimecodeLink value={start} {...rest} />}\n                  {' - '}\n                  {<TimecodeLink value={end} {...rest} />}\n                </span>\n              );\n            }\n          })\n          .reduce((prev, curr) => [prev, ', ', curr]);\n\n        return (\n          <ListGroup.Item key={value.join()}>\n            {links}\n            {' — '}\n            <DangerSpan>{key}</DangerSpan>\n          </ListGroup.Item>\n        );\n      } else { // nested timecode\n        return (\n          <NestedTimecodes\n            key={key}\n            name={key}\n            data={value}\n            {...rest}\n          />\n        );\n      }\n    })}\n  </ListGroup>\n));\n\nTimecodes.propTypes = {\n  className: PropTypes.string,\n  plyr: PropTypes.object,\n  data: PropTypes.object.isRequired,\n};\n\nTimecodes.defaultProps = {\n  className: '',\n  plyr: null,\n};\n\nconst NestedTimecodes = ({ name, level, ...rest }) => {\n  const [open, setOpen] = useState(true);\n  const toggleState = useCallback(() => setOpen(!open), [open]);\n\n  return (\n    <>\n      <ListGroupItem\n        className=\"d-flex\"\n        action\n        onClick={toggleState}\n      >\n        <FAIcon icon={open ? faChevronDown : faChevronRight} />\n        <b>{name}</b>\n      </ListGroupItem>\n      <Collapse in={open}>\n        <Timecodes\n          className={`timecodes-nested-${level}`}\n          level={level + 1}\n          {...rest}\n        />\n      </Collapse>\n    </>\n  );\n};\n\nNestedTimecodes.propTypes = {\n  name: PropTypes.string.isRequired,\n  level: PropTypes.number,\n};\n\nNestedTimecodes.defaultProps = {\n  level: 0,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Badge, Button, Collapse, InputGroup, ListGroup } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { Resizable } from 're-resizable';\nimport { faArrowLeft, faArrowRight } from '@fortawesome/free-solid-svg-icons';\nimport SugarDate from '../../utils/sugar';\nimport { Game, Segment } from '../../data-types';\nimport { Scroll } from '../scroll';\nimport { FAIcon } from '../../utils/fontawesome';\n\nconst BUTTON_STYLE = { variant: 'dark', size: 'sm' };\n\nconst SegmentRefList = ({ game, currentSegment, contentKey }) => (\n  <Scroll className=\"h-100\" scrollTo=\".active\" scrollDelay={100} contentKey={contentKey}>\n    <ListGroup className=\"playlist-streams separator-v\">\n      {game.streams.map((segmentRef) => (\n        <ListGroup.Item\n          key={segmentRef.segment}\n          as={Link}\n          to={segmentRef.url}\n          action\n          active={segmentRef.original === currentSegment}\n          className=\"playlist-streams-item\"\n        >\n          <span className=\"flex-grow-1\">{segmentRef.name}</span>\n          <span>\n            <Badge pill bg=\"dark\">\n              {SugarDate.format(segmentRef.original.date, '{dd}.{MM}')}\n              <br />\n              {segmentRef.original.date.getFullYear()}\n            </Badge>\n          </span>\n        </ListGroup.Item>\n      ))}\n    </ListGroup>\n  </Scroll>\n);\n\nSegmentRefList.propTypes = {\n  game: Game.isRequired,\n  currentSegment: Segment.isRequired,\n  contentKey: PropTypes.any,\n};\n\nSegmentRefList.defaultProps = {\n  contentKey: null,\n};\n\nconst CollapseWrapper = ({ open, children }) => (\n  <Collapse in={open}>\n    <div>\n      <Resizable defaultSize={{ height: '30vh' }} enable={{ bottom: true }}>\n        {children}\n      </Resizable>\n    </div>\n  </Collapse>\n);\n\nCollapseWrapper.propTypes = {\n  open: PropTypes.bool.isRequired,\n};\n\nexport const Playlist = ({ games, game, segment, autoExpand, fullHeight }) => {\n  const [currentGame, setGame] = useState(game);\n  const [open, setOpen] = useState(autoExpand);\n\n  const activeIndex = games.indexOf(currentGame);\n  const prevItem = activeIndex !== 0 && games[activeIndex - 1];\n  const nextItem = activeIndex !== games.length - 1 && games[activeIndex + 1];\n\n  return (\n    <>\n      <InputGroup className=\"d-flex flex-row playlist-header separator-h\">\n        <Button\n          onClick={() => setGame(prevItem)}\n          disabled={!prevItem}\n          {...BUTTON_STYLE}\n        >\n          <FAIcon icon={faArrowLeft} />\n        </Button>\n        <Button\n          onClick={() => setOpen(!open)}\n          className=\"flex-1-0-0\"\n          disabled={fullHeight}\n          {...BUTTON_STYLE}\n        >\n          {currentGame.name}\n        </Button>\n        <Button\n          onClick={() => setGame(nextItem)}\n          disabled={!nextItem}\n          {...BUTTON_STYLE}\n        >\n          <FAIcon icon={faArrowRight} />\n        </Button>\n      </InputGroup>\n\n      {fullHeight ? (\n        <SegmentRefList\n          game={currentGame}\n          currentSegment={segment}\n          contentKey={currentGame.id}\n        />\n      ) : (\n        <CollapseWrapper open={open}>\n          <SegmentRefList\n            game={currentGame}\n            currentSegment={segment}\n            contentKey={currentGame.id + open}\n          />\n        </CollapseWrapper>\n      )}\n    </>\n  );\n};\n\nPlaylist.propTypes = {\n  games: PropTypes.arrayOf(Game).isRequired,\n  game: Game.isRequired,\n  segment: Segment.isRequired,\n  autoExpand: PropTypes.bool,\n  fullHeight: PropTypes.bool,\n};\n\nPlaylist.defaultProps = {\n  autoExpand: false,\n  fullHeight: false,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Source: https://github.com/facebook/react/issues/13044#issuecomment-428815909\n */\nexport default class Reparentable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n  }\n\n  componentDidMount() {\n    const { el } = this.props;\n    const ref = this.ref.current;\n\n    if (ref) {\n      ref.appendChild(el);\n    }\n  }\n\n  render() {\n    const { el, ...otherProps } = this.props;\n    return <div ref={this.ref} {...otherProps} />;\n  }\n}\n\nReparentable.propTypes = {\n  el: PropTypes.object.isRequired,\n};\n","import update from 'immutability-helper';\n\nfunction updateState(obj, spec, callback) {\n  obj.setState(update(obj.state, spec), callback);\n}\n\nexport default updateState;\n","import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Col, Form, InputGroup, Pagination, Popover, Row, Spinner } from 'react-bootstrap';\nimport { faCopy } from '@fortawesome/free-solid-svg-icons';\nimport { getBaseSegment } from '../../utils/data-utils';\nimport { Data } from '../../data';\nimport { ftime } from '../../utils/time-utils';\nimport { FAIcon } from '../../utils/fontawesome';\nimport { Segment } from '../../data-types';\nimport { usePlyrTime } from '../../hooks/use-plyr-time';\nimport config from '../../../../config/config.json';\n\nconst getShortLink = (segment, at) => (\n  // eslint-disable-next-line prefer-template\n  (config.prefix || window.location.origin)\n  + '/r/'\n  + segment.segment\n  + (at ? `?at=${at}` : '')\n);\n\nconst getMpvCommand = (segment, t) => (\n  [\n    'mpv',\n    (segment.subtitles ? `--sub-file=${new URL(segment.subtitles, window.location.href)}` : ''),\n    (segment.abs_start !== 0 ? `--sub-delay=${-segment.abs_start}` : ''),\n    (t ? `--start=${t}` : ''),\n    (segment.end ? `--end=${segment.end}` : ''),\n    (segment.youtube ? `ytdl://${segment.youtube}` : segment.direct),\n  ].filter((x) => x).join(' ')\n);\n\nconst Mode = {\n  link: 'Ссылка',\n  chat: 'Чат',\n  mpv: 'MPV',\n};\n\nconst ModeSelector = ({ mode, onChange }) => (\n  <Pagination size=\"sm\" className=\"d-flex mb-0\">\n    {Object.entries(Mode).map(([key, value]) => (\n      <Pagination.Item\n        key={key}\n        active={mode === key}\n        onClick={() => onChange(key)}\n        className=\"flex-1-0-0\"\n      >\n        {value}\n      </Pagination.Item>\n    ))}\n  </Pagination>\n);\n\nModeSelector.propTypes = {\n  mode: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst ShareOverlay = React.forwardRef(({ segment, plyr, ...otherProps }, ref) => {\n  const inputRef = useRef();\n  const time = Math.floor(usePlyrTime(plyr, (t) => Math.round(t)));\n  const [mode, setMode] = useState('link');\n  const [segments, setSegments] = useState(null);\n  const [includeTime, setIncludeTime] = useState(time > 0);\n\n  useEffect(() => {\n    Data.then(({ segments: s }) => setSegments(s));\n  }, []);\n\n  if (!segments) {\n    return (\n      <Popover ref={ref} {...otherProps} className=\"share-popover\">\n        <Popover.Header as=\"h3\">Создать короткую ссылку</Popover.Header>\n        <Popover.Body className=\"d-flex justify-content-center\">\n          <Spinner animation=\"border\" />\n        </Popover.Body>\n      </Popover>\n    );\n  }\n\n  const [baseId, absTime] = getBaseSegment(segment, time);\n  const base = segments.by('segment', baseId);\n\n  let value;\n\n  switch (mode) {\n    case 'link':\n      value = getShortLink(\n        (!includeTime && segment.segment.indexOf('.') !== -1) ? segment : base,\n        includeTime && absTime,\n      );\n      break;\n\n    case 'mpv':\n      value = getMpvCommand(segment, includeTime && time);\n      break;\n\n    case 'chat':\n      value = `!запись ${base.segment}${includeTime ? (` ${absTime}`) : ''}`;\n      break;\n\n    default:\n      value = '';\n  }\n\n  return (\n    <Popover ref={ref} {...otherProps} className=\"share-popover\">\n      <Popover.Header as=\"h3\">Создать короткую ссылку</Popover.Header>\n      <Popover.Body>\n        <Row>\n          <Col>\n            <InputGroup>\n              <Form.Control\n                ref={inputRef}\n                readOnly\n                value={value}\n                size=\"sm\"\n              />\n              <Button\n                variant=\"dark\"\n                size=\"sm\"\n                onClick={() => {\n                  const input = inputRef.current;\n\n                  if (input) {\n                    input.select();\n                    input.setSelectionRange(0, 200);\n                    document.execCommand('copy');\n                  }\n                }}\n              >\n                <FAIcon icon={faCopy} />\n              </Button>\n            </InputGroup>\n          </Col>\n        </Row>\n\n        <Row className=\"mt-2\">\n          <Col className=\"d-flex align-content-center\">\n            <Form.Check\n              className=\"me-auto\"\n              type=\"checkbox\"\n              label=\"Начать с таймкода: \"\n              checked={includeTime}\n              onChange={({ target: { checked } }) => setIncludeTime(checked)}\n            />\n\n            <Form.Control\n              className=\"time-selector\"\n              value={ftime(time)}\n              size=\"sm\"\n              readOnly\n              htmlSize={4}\n            />\n          </Col>\n        </Row>\n\n        <Row className=\"mt-2\">\n          <Col><ModeSelector mode={mode} onChange={setMode} /></Col>\n        </Row>\n      </Popover.Body>\n    </Popover>\n  );\n});\n\nShareOverlay.propTypes = {\n  segment: Segment.isRequired,\n  plyr: PropTypes.object,\n};\n\nShareOverlay.defaultProps = {\n  plyr: null,\n};\n\nexport { ShareOverlay };\n","export const isPrerender = navigator.userAgent.toLowerCase().indexOf('prerender') !== -1;\n\nexport const NoPrerender = ({ children }) => !isPrerender && children;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  Button,\n  Col,\n  ListGroup,\n  OverlayTrigger,\n  Ratio,\n  Row,\n  Tab,\n  Tabs,\n  Tooltip,\n} from 'react-bootstrap';\nimport { Helmet } from 'react-helmet-async';\nimport { Link } from 'react-router-dom';\nimport MediaQuery from 'react-responsive';\nimport { Rnd } from 'react-rnd';\nimport { faCaretSquareLeft, faCaretSquareRight, faCheckCircle, faDownload, faExclamationCircle, faExpand, faMaximize, faShareSquare } from '@fortawesome/free-solid-svg-icons';\nimport { faTwitch, faYoutube } from '@fortawesome/free-brands-svg-icons';\nimport { Data } from '../data';\nimport Persist from '../utils/persist';\nimport { Chat } from './chat';\nimport Player from './player/player';\nimport { Timecodes } from './player/timecodes';\nimport { Scroll } from './scroll';\nimport { Playlist } from './player/playlist';\nimport Reparentable from './utils/reparentable';\nimport SugarDate from '../utils/sugar';\nimport ErrorPage from '../pages/error-page';\nimport updateState from '../utils/update-state';\nimport { findRefBySegment, resolveGame, resolveSegment } from '../utils/data-utils';\nimport { ShareOverlay } from './player/share-overlay';\nimport { Layout } from '.';\nimport { FAIcon } from '../utils/fontawesome';\nimport { NoPrerender } from '../utils/prerender';\nimport PATHS from '../constants/urls';\n\nexport default class SegmentPlayer extends React.Component {\n  createChatContainer() {\n    const chatContainer = document.createElement('div');\n\n    chatContainer.style.height = '100%';\n    chatContainer.style.display = 'flex';\n    chatContainer.style.flexDirection = 'column';\n\n    return chatContainer;\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loaded: false,\n      error: false,\n      fullscreen: false,\n      segment: null,\n      segmentRef: null,\n      relatedGames: null,\n      timecodes: null,\n      plyr: null,\n      toggleFullscreen: () => null,\n      ...Persist.load('SegmentPlayer', {\n        chatOverlay: {\n          width: null,\n          height: null,\n          x: null,\n          y: null,\n        },\n        sidebarCollapsed: false,\n      }),\n    };\n\n    this.toggleSidebar = this.toggleSidebar.bind(this);\n    this.renderPlayerOverlay = this.renderPlayerOverlay.bind(this);\n\n    this.chatContainer = this.createChatContainer();\n  }\n\n  resolveUrl({ segments, games }) {\n    const { location } = this.props;\n    const { search: reqSearch, state: reqState } = location;\n    const search = new URLSearchParams(reqSearch);\n    const paramAt = search.has('at') ? +search.get('at') : null;\n\n    let {\n      match: {\n        params: {\n          game: gameId,\n          segment: segmentId,\n        },\n      },\n    } = this.props;\n\n    const [segment, at, t] = resolveSegment(segments, segmentId, paramAt);\n\n    if (!segment) {\n      return null;\n    }\n\n    let redirect = segment.segment !== segmentId;\n\n    segmentId = segment.segment;\n\n    let game = games.by('id', gameId);\n    let segmentRef;\n\n    // Handle missing or unknown game\n    if (!game || segment.games.indexOf(gameId) === -1) {\n      [game, segmentRef] = resolveGame(games, segment, at);\n      gameId = game.id;\n      redirect = true;\n    } else {\n      segmentRef = findRefBySegment(game, segment);\n    }\n\n    const newLocation = {\n      ...location,\n      pathname: `/play/${gameId}/${segment.segment}`,\n    };\n\n    return {\n      segment,\n      game,\n      segmentRef,\n      start: t,\n      autostart: reqState?.autostart,\n      redirect: redirect && newLocation,\n    };\n  }\n\n  loadData() {\n    Data.then(({ segments, timecodes, games }) => {\n      const { history } = this.props;\n      const request = this.resolveUrl({ segments, games });\n\n      if (!request) {\n        this.setState({ error: true });\n        return;\n      }\n\n      if (request.redirect) {\n        history.replace(request.redirect);\n      }\n\n      const {\n        game,\n        segment,\n        segmentRef,\n        start,\n        autostart,\n      } = request;\n\n      let relatedGames = segment.games.map((gameId) => games.by('id', gameId));\n\n      if (relatedGames.length === 0) {\n        relatedGames = null;\n      }\n\n      this.setState({\n        loaded: true,\n        error: false,\n        segment,\n        game,\n        segmentRef,\n        relatedGames,\n        start,\n        autostart,\n      });\n\n      timecodes.then((data) => {\n        this.setState({\n          timecodes: data[segment.segment],\n        });\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  shouldComponentUpdate(prevProps, nextState) {\n    Persist.save('SegmentPlayer', this.state, nextState, [\n      'chatOverlay',\n      'sidebarCollapsed',\n    ]);\n\n    return true;\n  }\n\n  componentDidUpdate(prevProps) {\n    const { match: { params } } = this.props;\n    const { match: { params: prevParams } } = prevProps;\n\n    if (params.segment !== prevParams.segment) {\n      this.loadData();\n    } else if (params.game !== prevParams.game) {\n      this.loadData();\n    }\n  }\n\n  toggleSidebar() {\n    const { sidebarCollapsed } = this.state;\n\n    if (!sidebarCollapsed) { // collapse immediately\n      const { pointerEvents } = document.body.style;\n\n      // release focus\n      document.activeElement.blur();\n\n      // release hover for 100ms\n      document.body.style.pointerEvents = 'none';\n      setTimeout(() => {\n        document.body.style.pointerEvents = pointerEvents;\n      }, 100);\n    }\n\n    this.setState({ sidebarCollapsed: !sidebarCollapsed });\n  }\n\n  renderPlayer() {\n    const {\n      history,\n    } = this.props;\n\n    const {\n      game,\n      segment,\n      segmentRef,\n      segmentRef: {\n        end,\n        force_start: forceStart,\n      },\n      segment: {\n        youtube, direct, hls, poster,\n      },\n      start,\n      autostart,\n    } = this.state;\n\n    const playerProps = {\n      youtube,\n      direct,\n      poster,\n      hls,\n      start,\n      autostart,\n      end,\n      forceStart,\n      savedPositionAdapter: {\n        get: () => segment.watched,\n        set: segment.setWatched,\n      },\n      onVideoEnded: () => {\n        const nextIndex = game.streams.indexOf(segmentRef) + 1;\n        if (nextIndex < game.streams.length) {\n          history.push(game.streams[nextIndex].url);\n        }\n      },\n      onReady: (plyr) => {\n        this.setState({\n          plyr,\n          toggleFullscreen: (forceFallback = false) => {\n            plyr.fullscreen.forceFallback = forceFallback;\n            plyr.fullscreen.toggle();\n            plyr.elements.container.focus();\n          },\n        });\n      },\n      onFullScreen: (fullscreen) => this.setState({ fullscreen }),\n      onDestroy: () => this.setState({\n        plyr: null,\n        toggleFullscreen: () => null,\n      }),\n      renderOverlay: this.renderPlayerOverlay,\n    };\n\n    return (\n      <Row>\n        <Col>\n          <Ratio aspectRatio=\"16x9\">\n            <NoPrerender>\n              <Player {...playerProps} />\n            </NoPrerender>\n          </Ratio>\n        </Col>\n      </Row>\n    );\n  }\n\n  renderPlayerOverlay({ width, height }) {\n    const {\n      fullscreen,\n      segment: {\n        subtitles,\n      },\n      chatOverlay: ol,\n    } = this.state;\n\n    if (!fullscreen || !subtitles) {\n      return null;\n    }\n\n    return (\n      <Rnd\n        className=\"chat-overlay\"\n        position={{\n          x: ol.x !== null ? ol.x * width : 0,\n          y: ol.y !== null ? ol.y * height : 0.65 * height,\n        }}\n        minWidth=\"100px\"\n        minHeight=\"100px\"\n        size={{\n          width: ol.width ? `${ol.width * 100}%` : '35%',\n          height: ol.height ? `${ol.height * 100}%` : '35%',\n        }}\n        onDragStop={(e, { x, y }) => {\n          updateState(this, {\n            chatOverlay: {\n              $merge: {\n                x: x / width,\n                y: y / height,\n              },\n            },\n          });\n        }}\n        onResizeStop={(e, direction, ref, delta, position) => {\n          updateState(this, {\n            chatOverlay: {\n              $merge: {\n                width: ref.offsetWidth / width,\n                height: ref.offsetHeight / height,\n                x: position.x / width,\n                y: position.y / height,\n              },\n            },\n          });\n        }}\n        bounds=\"parent\"\n      >\n        {this.renderChat()}\n      </Rnd>\n    );\n  }\n\n  renderPlayerControls() {\n    const {\n      toggleFullscreen,\n      segment,\n      plyr,\n    } = this.state;\n\n    const {\n      segment: segmentId,\n      youtube,\n      official,\n      torrent,\n    } = segment;\n\n    return (\n      <Row className=\"g-0\">\n        <Col>\n          <div className=\"player-controls border-top border-bottom\">\n            <div className=\"label me-2 d-none d-xxl-block\">Смотреть на:</div>\n\n            {!segmentId.startsWith('00') && (\n              <Button variant=\"dark\" size=\"sm\" className=\"me-2\" href={`https://twitch.tv/videos/${segmentId}`} target=\"blank\">\n                <FAIcon icon={faTwitch} />\n                <span>Twitch</span>\n              </Button>\n            )}\n\n            {youtube && (\n              <Button\n                href={`https://youtu.be/${youtube}`}\n                target=\"blank\"\n                variant=\"dark\"\n                size=\"sm\"\n                className=\"me-2\"\n              >\n                <FAIcon icon={faYoutube} />\n                <span>Youtube</span>\n                <OverlayTrigger\n                  placement=\"top\"\n                  overlay={(\n                    <Tooltip>\n                      {official === false ? 'Неофициальный канал' : 'Официальный канал'}\n                    </Tooltip>\n                  )}\n                >\n                  <FAIcon\n                    icon={official === false ? faExclamationCircle : faCheckCircle}\n                    className={official === false ? 'text-warning' : 'text-success'}\n                  />\n                </OverlayTrigger>\n              </Button>\n            )}\n\n            {torrent && (\n              <Button\n                href={torrent}\n                variant=\"dark\"\n                size=\"sm\"\n                className=\"me-2\"\n              >\n                <FAIcon icon={faDownload} />\n                <span className=\"d-none d-xl-inline\">Торрент</span>\n              </Button>\n            )}\n\n            <div className=\"flex-grow-1\" />\n\n            <OverlayTrigger\n              trigger=\"click\"\n              rootClose\n              placement=\"top\"\n              overlay={(\n                <ShareOverlay\n                  segment={segment}\n                  plyr={plyr}\n                />\n              )}\n            >\n              <Button variant=\"dark\" size=\"sm\" className=\"me-2\">\n                <FAIcon icon={faShareSquare} />\n                <span className=\"d-none d-xl-inline\">Поделиться</span>\n              </Button>\n            </OverlayTrigger>\n\n            <OverlayTrigger\n              placement=\"top\"\n              overlay={(props) => (\n                <Tooltip {...props}>\n                  Оставить в окне только плеер, но не переходить в полноэкранный режим\n                </Tooltip>\n              )}\n            >\n              <Button variant=\"dark\" size=\"sm\" onClick={() => toggleFullscreen(true)} className=\"me-2\">\n                <FAIcon icon={faMaximize} />\n                <span className=\"d-none d-lg-inline\">На всё окно</span>\n              </Button>\n            </OverlayTrigger>\n\n            <OverlayTrigger\n              placement=\"top\"\n              overlay={(props) => (\n                <Tooltip {...props}>\n                  Развернуть плеер на весь экран\n                </Tooltip>\n              )}\n            >\n              <Button variant=\"dark\" size=\"sm\" onClick={() => toggleFullscreen(false)}>\n                <FAIcon icon={faExpand} />\n                <span className=\"d-none d-lg-inline\">На весь экран</span>\n              </Button>\n            </OverlayTrigger>\n          </div>\n        </Col>\n      </Row>\n    );\n  }\n\n  renderChat() {\n    const {\n      fullscreen,\n      plyr,\n      segment: {\n        subtitles,\n        abs_start: absStart,\n      },\n    } = this.state;\n\n    const header = (\n      <div className=\"sidebar-header\">\n        Чат\n      </div>\n    );\n\n    if (!subtitles) {\n      return (\n        <>\n          {header}\n          <div className=\"p-4 flex-grow-1 align-self-center text-white\">\n            Для этого стрима нет записи чата :(\n          </div>\n        </>\n      );\n    }\n\n    return (\n      <NoPrerender>\n        {!fullscreen && header}\n        <Chat\n          plyr={plyr}\n          offset={-absStart}\n          subtitles={subtitles}\n          simple={fullscreen}\n        />\n      </NoPrerender>\n    );\n  }\n\n  renderTimecodes() {\n    const { timecodes, plyr } = this.state;\n\n    return (\n      <>\n        <div className=\"sidebar-header\">\n          Таймкоды\n        </div>\n        <Scroll className=\"flex-1-1-0\">\n          <Timecodes\n            data={timecodes}\n            plyr={plyr}\n          />\n        </Scroll>\n      </>\n    );\n  }\n\n  renderPlaylist({ autoExpand = false, fullHeight = false } = {}) {\n    const {\n      segment,\n      game,\n      relatedGames,\n    } = this.state;\n\n    if (!relatedGames) return null;\n\n    return (\n      <>\n        <div className=\"sidebar-header\">\n          Плейлист\n        </div>\n        <Playlist\n          games={relatedGames}\n          game={game}\n          segment={segment}\n          {...{ autoExpand, fullHeight }}\n        />\n      </>\n    );\n  }\n\n  renderLeftSidebar() {\n    const {\n      sidebarCollapsed,\n      timecodes,\n      relatedGames,\n      segment: {\n        subtitles,\n      },\n    } = this.state;\n\n    const leftSidebarClasses = [\n      'col-sidebar-narrow border-end',\n      sidebarCollapsed ? 'collapsed' : '',\n    ].join(' ');\n\n    if (!subtitles) { // move all content to right sidebar\n      return null;\n    }\n\n    return (\n      <>\n        {(timecodes || relatedGames) && (\n          <MediaQuery minDeviceWidth={1200}>\n            <Col className={leftSidebarClasses} tabIndex=\"0\">\n              <div className=\"content\">\n                <div className=\"sidebar-row-overlay flex-row-reverse\">\n                  <Button\n                    variant=\"link\"\n                    size=\"sm\"\n                    onClick={this.toggleSidebar}\n                  >\n                    <FAIcon icon={sidebarCollapsed ? faCaretSquareRight : faCaretSquareLeft} />\n                  </Button>\n                </div>\n\n                {relatedGames && this.renderPlaylist()}\n                {timecodes && this.renderTimecodes()}\n              </div>\n\n              <div className=\"collapsed-content\">\n                {relatedGames && (\n                  <div className=\"sidebar-header\">Плейлист</div>\n                )}\n                {timecodes && (\n                  <div className=\"sidebar-header\">Таймкоды</div>\n                )}\n              </div>\n            </Col>\n          </MediaQuery>\n        )}\n\n        {(timecodes || relatedGames) && (\n          <MediaQuery minDeviceWidth={768} maxDeviceWidth={1199}>\n            <Col className=\"col-sidebar-narrow collapsed\" tabIndex=\"0\">\n              <div className=\"content border-end\">\n                {relatedGames && this.renderPlaylist()}\n                {timecodes && this.renderTimecodes()}\n              </div>\n\n              <div className=\"collapsed-content\">\n                {relatedGames && (\n                  <div className=\"sidebar-header\">Плейлист</div>\n                )}\n                {timecodes && (\n                  <div className=\"sidebar-header\">Таймкоды</div>\n                )}\n              </div>\n            </Col>\n          </MediaQuery>\n        )}\n      </>\n    );\n  }\n\n  renderRightSidebar() {\n    const {\n      chatContainer,\n      state: {\n        fullscreen,\n        relatedGames,\n        timecodes,\n        segment: {\n          subtitles,\n        },\n      },\n    } = this;\n\n    if (!subtitles && !relatedGames && !timecodes) {\n      return null;\n    }\n\n    return (\n      <MediaQuery minDeviceWidth={768}>\n        <Col className=\"col-sidebar-wide border-start\">\n          {(subtitles && !fullscreen) && (\n            <Reparentable el={chatContainer} className=\"flex-1-1-0\" />\n          )}\n          {(!subtitles && relatedGames) && this.renderPlaylist()}\n          {(!subtitles && timecodes) && this.renderTimecodes()}\n        </Col>\n      </MediaQuery>\n    );\n  }\n\n  renderDescription() {\n    const {\n      game,\n      segment,\n      segmentRef,\n    } = this.state;\n\n    return (\n      <Row className=\"stream-description\">\n        <Col>\n          <h3>\n            <Link to={`/play/${game.id}`}>{game.name}</Link>\n            <span> — </span>\n            <span className=\"flex-grow-1\">{segmentRef.name}</span>\n          </h3>\n\n          <ListGroup variant=\"flush\" size=\"sm\">\n            <ListGroup.Item>\n              Дата стрима:\n              {' '}\n              {SugarDate.medium(segment.date)}\n              {' '}\n              ({SugarDate.relative(segment.date)})\n            </ListGroup.Item>\n\n            {(segment.note && (\n              <ListGroup.Item\n                dangerouslySetInnerHTML={{ __html: segment.note }}\n              />\n            ))}\n          </ListGroup>\n        </Col>\n      </Row>\n    );\n  }\n\n  renderBelowPlayer() {\n    const {\n      chatContainer,\n      state: {\n        fullscreen,\n        relatedGames,\n        timecodes,\n        segment: {\n          subtitles,\n        },\n      },\n    } = this;\n\n    return (\n      <>\n        <MediaQuery minDeviceWidth={768}>\n          {this.renderDescription()}\n        </MediaQuery>\n\n        <MediaQuery maxDeviceWidth={767}>\n          <MediaQuery maxDeviceWidth={575}>\n            {(subtitlesInTab) => (\n              <Row className=\"flex-grow-1 flex-shrink-1 g-0\">\n                <Col className=\"sidebar-content\">\n                  <Tabs mountOnEnter>\n                    <Tab eventKey=\"description\" title=\"Описание\">\n                      {!subtitlesInTab ? (\n                        <Scroll className=\"flex-1-1-0\">\n                          {this.renderDescription()}\n                        </Scroll>\n                      ) : this.renderDescription()}\n                    </Tab>\n\n                    {timecodes && (\n                      <Tab eventKey=\"timecodes\" title=\"Таймкоды\">\n                        {this.renderTimecodes()}\n                      </Tab>\n                    )}\n\n                    {relatedGames && (\n                      <Tab eventKey=\"playlist\" title=\"Плейлист\" unmountOnExit>\n                        {this.renderPlaylist({\n                          autoExpand: true,\n                          fullHeight: true,\n                        })}\n                      </Tab>\n                    )}\n\n                    {subtitles && subtitlesInTab && (\n                      <Tab eventKey=\"chat\" title=\"Чат\">\n                        {!fullscreen && (\n                          <Reparentable el={chatContainer} className=\"flex-1-1-0\" />\n                        )}\n                      </Tab>\n                    )}\n                  </Tabs>\n                </Col>\n\n                {subtitles && !subtitlesInTab && (\n                  <Col className=\"sidebar-content border-start\">\n                    {!fullscreen && (\n                      <Reparentable el={chatContainer} className=\"flex-1-1-0\" />\n                    )}\n                  </Col>\n                )}\n              </Row>\n            )}\n          </MediaQuery>\n        </MediaQuery>\n      </>\n    );\n  }\n\n  render() {\n    const { loaded, error } = this.state;\n\n    if (error) {\n      return <ErrorPage />;\n    }\n\n    if (!loaded) {\n      return <Layout fluid flex withFooter={false} isLoading />;\n    }\n\n    const {\n      chatContainer,\n      state: {\n        segment: {\n          segment: segmentId,\n          subtitles,\n          thumbnail,\n          date,\n        },\n        segmentRef: {\n          name: refName,\n        },\n        game: {\n          id: gameId,\n          name: gameName,\n        },\n      },\n    } = this;\n\n    const title = `${refName} | ${gameName}`;\n    const canonicalPath = PATHS.PLAYER\n      .replace(':game', gameId)\n      .replace(':segment', segmentId);\n\n    return (\n      <Layout fluid flex withFooter={false} {...{ title, canonicalPath }}>\n        <Helmet>\n          <meta\n            property=\"og:description\"\n            content={`Запись стрима от ${SugarDate.medium(date)}`}\n          />\n          {thumbnail.startsWith('http') && (\n            <meta property=\"og:image\" content={thumbnail} />\n          )}\n        </Helmet>\n\n        {subtitles && ReactDOM.createPortal(this.renderChat(), chatContainer)}\n\n        <Row className=\"flex-grow-1 g-0\">\n          {this.renderLeftSidebar()}\n\n          <Col className=\"d-flex flex-column\">\n            {this.renderPlayer()} {/* Can't be moved without reloading */}\n            {this.renderPlayerControls()}\n            {this.renderBelowPlayer()}\n          </Col>\n\n          {this.renderRightSidebar()}\n        </Row>\n      </Layout>\n    );\n  }\n}\n","import { useCallback, useState } from 'react';\n\nexport const useComplexState = (initValue) => {\n  const [value, setValue] = useState(initValue);\n  const changeState = useCallback((input) => (\n    setValue((current) => (\n      { ...current, ...input }\n    ), [])\n  ));\n  return [value, changeState];\n};\n"],"names":["TypeMessage","PropTypes","$loki","time","user","text","color","hidden","TypeEmotes","pattern","data","id","src","PACKED_WORDS","ChatMessage","message","emotes","unpackMessages","showHidden","showEmotes","body","useMemo","res","replace","a","b","c","repeat","trimEnd","split","map","word","i","match","key","alt","className","ListGroupItem","style","propTypes","isRequired","defaultProps","LINE_BREAK","loadSubtitles","url","db","Loki","addCollection","indices","fetch","then","lines","firstLine","line","startsWith","Error","substring","parts","slice","join","userStr","msgParts","ptime","length","insert","Scroll","children","keepAtBottom","scrollTo","scrollDelay","contentKey","scrollRef","useRef","useState","manualScroll","setManualScroll","outerHeight","setOuterHeight","scrollToSelector","selector","scroll","current","node","innerContainerRef","querySelector","setTimeout","updateScrollPosition","offsetTop","onResize","useCallback","forceUpdate","onOuterResize","entry","height","onScroll","target","scrollTop","scrollTopMax","useEffect","outerMeasureRef","measureRef","ref","display","flexDirection","flex","ChatSettings","subtitles","onChange","OverlayTrigger","placement","overlay","props","Tooltip","Button","variant","size","onClick","icon","faRobot","Spinner","animation","faSmile","faFileArchive","href","faDownload","usePlyrTime","plyr","hash","t","getTime","currentTime","timeRef","setTime","callback","newTime","on","off","Chat","offset","simple","error","setError","setData","setEmotes","useComplexState","Persist","settings","updateSettings","borders","left","right","Math","floor","Object","keys","catch","e","clear","json","RegExp","role","query","$eq","messages","chain","find","$lte","simplesort","lastMsg","last","nextMsg","$gt","limit","ListGroup","msg","Player","state","chatOverlay","React","document","createElement","onReady","bind","onTimeUpdate","onVideoEnded","onFullScreenEnter","onFullScreenExit","firstTimeUpdate","firstReady","hls","invertTime","seekTime","youtube","controls","fs","disablekb","keyboard","global","this","direct","video","media","source","type","destroy","sources","provider","Hls","hlsClient","maxBufferHole","loadSource","attachMedia","before","faComments","value","onToggle","elements","button","forEach","classList","add","appendChild","ReactDOM","pressed","onclick","remove","nextNode","insertBefore","autostart","addControlButton","setState","play","forceStart","start","end","spa","savedPositionAdapter","lastSave","saved","get","min","duration","pause","abs","set","onFullScreen","Plyr","plyrOptions","container","updatePlyrSource","touch","poster","event","detail","code","muted","embed","volume","getVolume","onDestroy","removeChild","spawnPlyr","prevProps","nextState","prev","next","destroyPlyr","renderOverlay","contentRect","TimecodeLink","valueInt","visited","handleClick","preventDefault","DangerSpan","dangerouslySetInnerHTML","__html","Timecodes","rest","entries","indexOf","Array","isArray","links","reduce","curr","NestedTimecodes","name","level","open","setOpen","toggleState","action","faChevronDown","faChevronRight","Collapse","in","BUTTON_STYLE","SegmentRefList","game","currentSegment","streams","segmentRef","segment","as","Link","to","active","original","Badge","pill","bg","SugarDate","date","getFullYear","Game","Segment","CollapseWrapper","defaultSize","enable","bottom","Playlist","games","autoExpand","fullHeight","currentGame","setGame","activeIndex","prevItem","nextItem","InputGroup","disabled","faArrowLeft","faArrowRight","Reparentable","el","otherProps","obj","spec","update","Mode","link","chat","mpv","ModeSelector","mode","Pagination","ShareOverlay","inputRef","round","setMode","segments","setSegments","includeTime","setIncludeTime","Data","s","Popover","getBaseSegment","baseId","absTime","base","by","at","config","window","location","origin","getShortLink","URL","abs_start","filter","x","getMpvCommand","Row","Col","Form","readOnly","input","select","setSelectionRange","execCommand","faCopy","label","checked","ftime","htmlSize","isPrerender","navigator","userAgent","toLowerCase","NoPrerender","SegmentPlayer","loaded","fullscreen","relatedGames","timecodes","toggleFullscreen","width","y","sidebarCollapsed","toggleSidebar","renderPlayerOverlay","chatContainer","createChatContainer","reqSearch","search","reqState","URLSearchParams","paramAt","has","params","gameId","segmentId","resolveSegment","redirect","findRefBySegment","resolveGame","newLocation","pathname","history","request","resolveUrl","loadData","prevParams","pointerEvents","activeElement","blur","force_start","playerProps","watched","setWatched","nextIndex","push","forceFallback","toggle","focus","Ratio","aspectRatio","ol","position","minWidth","minHeight","onDragStop","updateState","$merge","onResizeStop","direction","delta","offsetWidth","offsetHeight","bounds","renderChat","official","torrent","faTwitch","faYoutube","faExclamationCircle","faCheckCircle","trigger","rootClose","faShareSquare","faMaximize","faExpand","absStart","header","leftSidebarClasses","minDeviceWidth","tabIndex","faCaretSquareRight","faCaretSquareLeft","renderPlaylist","renderTimecodes","maxDeviceWidth","note","renderDescription","subtitlesInTab","Tabs","mountOnEnter","Tab","eventKey","title","unmountOnExit","fluid","withFooter","isLoading","thumbnail","refName","gameName","canonicalPath","PATHS","property","content","renderLeftSidebar","renderPlayer","renderPlayerControls","renderBelowPlayer","renderRightSidebar","initValue","setValue"],"sourceRoot":""}